{"version":3,"sources":["../../src/network/fetchJson.js"],"names":["LIMIT_REMAINING","fetchJson","uri","option","onFetch","onCheckResponse","onCompleted","onCatch","onFailed","_crErr","_nowTime","_doneOk","_doneFailure","fetch","then","response","status","headers","limitRemaining","get","json","error"],"mappings":";;;;AAAA,IAAMA,eAAe,GAAG,uBAAxB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAChBC,GADgB,QAChBA,GADgB;AAAA,MAEhBC,MAFgB,QAEhBA,MAFgB;AAAA,MAERC,OAFQ,QAERA,OAFQ;AAAA,MAECC,eAFD,QAECA,eAFD;AAAA,MAEkBC,WAFlB,QAEkBA,WAFlB;AAAA,MAGhBC,OAHgB,QAGhBA,OAHgB;AAAA,MAGPC,QAHO,QAGPA,QAHO;AAAA,MAIhBC,MAJgB,QAIhBA,MAJgB;AAAA,MAKhBC,QALgB,QAKhBA,QALgB;AAAA,MAKNC,OALM,QAKNA,OALM;AAAA,MAKGC,YALH,QAKGA,YALH;AAAA,SAMZC,KAAK,CAACX,GAAD,CAAL,CACDY,IADC,CACI,UAAAC,QAAQ,EAAI;AAAA,QACRC,MADQ,GACYD,QADZ,CACRC,MADQ;AAAA,QACAC,OADA,GACYF,QADZ,CACAE,OADA;AAEhBd,IAAAA,MAAM,CAACe,cAAP,GAAwBD,OAAO,CAACE,GAAR,CAAYnB,eAAZ,CAAxB;;AACA,QAAIgB,MAAM,IAAE,GAAR,IAAeA,MAAM,IAAE,GAA3B,EAA+B;AAC7B,aAAOD,QAAQ,CAACK,IAAT,EAAP;AACD,KAFD,MAEO;AACJ,YAAMX,MAAM,CAACM,QAAD,CAAZ;AACF;AACF,GATC,EAUDD,IAVC,CAUI,UAAAM,IAAI,EAAI;AACX,QAAIf,eAAe,CAACe,IAAD,EAAOjB,MAAP,CAAnB,EAAkC;AAChCC,MAAAA,OAAO,CAAC;AAAEgB,QAAAA,IAAI,EAAJA,IAAF;AAAQjB,QAAAA,MAAM,EAANA,MAAR;AAAgBG,QAAAA,WAAW,EAAXA;AAAhB,OAAD,CAAP;AACD;;AACDK,IAAAA,OAAO,CAACD,QAAD,CAAP;AACF,GAfC,WAgBK,UAAAW,KAAK,EAAI;AACbd,IAAAA,OAAO,CAAC;AAAEc,MAAAA,KAAK,EAALA,KAAF;AAASlB,MAAAA,MAAM,EAANA,MAAT;AAAiBK,MAAAA,QAAQ,EAARA;AAAjB,KAAD,CAAP;;AACAI,IAAAA,YAAY,CAACF,QAAD,CAAZ;AACF,GAnBC,CANY;AAAA,CAAlB;;eA2BeT,S","sourcesContent":["const LIMIT_REMAINING = 'X-RateLimit-Remaining';\r\n\r\nconst fetchJson = ({\r\n  uri,\r\n  option, onFetch, onCheckResponse, onCompleted,\r\n  onCatch, onFailed,\r\n  _crErr,\r\n  _nowTime, _doneOk, _doneFailure\r\n}) => fetch(uri)\r\n    .then(response => {\r\n      const { status, headers } = response;\r\n      option.limitRemaining = headers.get(LIMIT_REMAINING);\r\n      if (status>=200 && status<=400){\r\n        return response.json();\r\n      } else {\r\n         throw _crErr(response);\r\n      }\r\n    })\r\n    .then(json => {\r\n       if (onCheckResponse(json, option)){\r\n         onFetch({ json, option, onCompleted });\r\n       }\r\n       _doneOk(_nowTime)\r\n    })\r\n    .catch(error => {\r\n       onCatch({ error, option, onFailed })\r\n       _doneFailure(_nowTime)\r\n    });\r\n\r\nexport default fetchJson\r\n"],"file":"fetchJson.js"}