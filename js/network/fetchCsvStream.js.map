{"version":3,"sources":["../../src/network/fetchCsvStream.js"],"names":["fetchCsvStream","uri","option","onFetch","onCheckResponse","onCompleted","onCatch","onFailed","_crErr","_crErrResp","_nowTime","_doneOk","_doneFailure","fetch","then","response","body","_reader","getReader","read","result","_str","String","fromCharCode","value","csv","parse","header","json","error"],"mappings":";;;;;;;AAAA;;AAGA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MACrBC,GADqB,QACrBA,GADqB;AAAA,MAErBC,MAFqB,QAErBA,MAFqB;AAAA,MAEbC,OAFa,QAEbA,OAFa;AAAA,MAEJC,eAFI,QAEJA,eAFI;AAAA,MAEaC,WAFb,QAEaA,WAFb;AAAA,MAGrBC,OAHqB,QAGrBA,OAHqB;AAAA,MAGZC,QAHY,QAGZA,QAHY;AAAA,MAIrBC,MAJqB,QAIrBA,MAJqB;AAAA,MAIbC,UAJa,QAIbA,UAJa;AAAA,MAKrBC,QALqB,QAKrBA,QALqB;AAAA,MAKXC,OALW,QAKXA,OALW;AAAA,MAKFC,YALE,QAKFA,YALE;AAAA,SAMjBC,KAAK,CAACZ,GAAD,CAAL,CACDa,IADC,CACI,UAAAC,QAAQ,EAAI;AAChB,QAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB,UAAMC,OAAO,GAAGF,QAAQ,CAACC,IAAT,CAAcE,SAAd,EAAhB;;AACA,aAAOD,OAAO,CAACE,IAAR,EAAP;AACD,KAHD,MAGO;AACJ,YAAMX,MAAM,CAACO,QAAD,CAAZ;AACF;AACF,GARC,EASDD,IATC,CASI,UAAAM,MAAM,EAAI;AACd,QAAMC,IAAI,GAAGC,MAAM,CAACC,YAAP,OAAAD,MAAM,EAAiBF,MAAM,CAACI,KAAxB,CAAnB;;AACA,WAAOC,sBAAIC,KAAJ,CAAUL,IAAV,EAAgB;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAhB,CAAP;AACD,GAZC,EAaDb,IAbC,CAaI,UAAAc,IAAI,EAAI;AACZ,QAAIxB,eAAe,CAACwB,IAAD,CAAnB,EAA2B;AACzBzB,MAAAA,OAAO,CAAC;AAAEyB,QAAAA,IAAI,EAAJA,IAAF;AAAQ1B,QAAAA,MAAM,EAANA,MAAR;AAAgBG,QAAAA,WAAW,EAAXA;AAAhB,OAAD,CAAP;;AACAM,MAAAA,OAAO,CAACD,QAAD,CAAP;AACD,KAHD,MAGO;AACL,YAAMD,UAAU,EAAhB;AACD;AACF,GApBC,WAqBK,UAAAoB,KAAK,EAAI;AACdvB,IAAAA,OAAO,CAAC;AAAEuB,MAAAA,KAAK,EAALA,KAAF;AAAS3B,MAAAA,MAAM,EAANA,MAAT;AAAiBK,MAAAA,QAAQ,EAARA;AAAjB,KAAD,CAAP;;AACDK,IAAAA,YAAY,CAACF,QAAD,CAAZ;AACD,GAxBE,CANiB;AAAA,CAAvB;;eAgCeV,c","sourcesContent":["import csv from 'papaparse';\r\n\r\n\r\nconst fetchCsvStream = ({\r\n  uri,\r\n  option, onFetch, onCheckResponse, onCompleted,\r\n  onCatch, onFailed,\r\n  _crErr, _crErrResp,\r\n  _nowTime, _doneOk, _doneFailure\r\n}) => fetch(uri)\r\n    .then(response => {\r\n      if (response.body) {\r\n        const _reader = response.body.getReader();\r\n        return _reader.read();\r\n      } else {\r\n         throw _crErr(response);\r\n      }\r\n    })\r\n    .then(result => {\r\n      const _str = String.fromCharCode(...result.value);\r\n      return csv.parse(_str, { header: true });\r\n    })\r\n    .then(json => {\r\n      if (onCheckResponse(json)) {\r\n        onFetch({ json, option, onCompleted });\r\n        _doneOk(_nowTime)\r\n      } else {\r\n        throw _crErrResp();\r\n      }\r\n    })\r\n    .catch(error => {\r\n      onCatch({ error, option, onFailed })\r\n     _doneFailure(_nowTime)\r\n   });\r\n\r\nexport default fetchCsvStream\r\n"],"file":"fetchCsvStream.js"}