{"version":3,"sources":["../../src/network/fnFetch.js"],"names":["CLICK_TIME_INTERVAL","MIN_FREQUENCY","DONE","ALERT_FREQUENCY","errCaption","message","ALERT_IN_PROGRESS","_crErr","status","statusText","_crErrResp","_recentUri","_recentTime","Date","now","_recentCall","_fnSetRecentCall","uri","time","_fnSetRecentDone","_starLoading","nowTime","LPA","loadingProgress","_doneOk","loadingProgressComplete","_doneFailure","loadingProgressFailed","config","option","onFailed","onCatch","_nowTime","error","_configFetch","fetchType"],"mappings":"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","sourcesContent":["//import csvtojson from 'csvtojson'\r\n\r\nimport LPA from '../flux/actions/LoadingProgressActions';\r\n\r\nimport fetchJson from './fetchJson'\r\nimport fetchCsvStream from './fetchCsvStream'\r\n\r\nconst CLICK_TIME_INTERVAL = 300\r\n    , MIN_FREQUENCY = 3000\r\n    , DONE = 'DONE'\r\n    , ALERT_FREQUENCY = {\r\n        errCaption : 'Load Frequency',\r\n        message : `Exceed item load frequency restriction of ${MIN_FREQUENCY/1000}s`\r\n    }\r\n    , ALERT_IN_PROGRESS = {\r\n         errCaption : 'Loading In Progress',\r\n         message : 'Loading data for this item in progress.\\nIt seems several clicks on button Load repeatedly happend.'\r\n    };\r\n\r\n\r\nconst _crErr = ({ status, statusText }={}) => ({\r\n  errCaption: 'Request Error',\r\n  message : `${status}: ${statusText}`\r\n});\r\n\r\nconst _crErrResp = () => ({\r\n  errCaption: 'Response Error',\r\n  message : `Response format is incorrect`\r\n});\r\n\r\nlet _recentUri = DONE\r\n  , _recentTime = Date.now() - MIN_FREQUENCY\r\n  , _recentCall = _recentTime;\r\n\r\nconst _fnSetRecentCall = function(uri, time){\r\n  _recentUri = uri;\r\n  _recentCall = time\r\n}\r\nconst _fnSetRecentDone = function(uri, time){\r\n  _recentUri = uri;\r\n  _recentTime = time;\r\n}\r\n\r\nconst _starLoading = (uri, nowTime) => {\r\n  _fnSetRecentCall(uri, nowTime);\r\n  LPA.loadingProgress();\r\n}\r\n\r\nconst _doneOk = (nowTime) => {\r\n  _fnSetRecentDone(DONE, nowTime);\r\n  LPA.loadingProgressComplete()\r\n}\r\n\r\nconst _doneFailure = (nowTime) => {\r\n  _fnSetRecentDone(DONE, nowTime);\r\n  LPA.loadingProgressFailed();\r\n}\r\n\r\nexport default (config) => {\r\n   const {\r\n      uri, option,\r\n      onFailed, onCatch\r\n    } = config;\r\n  const _nowTime = Date.now();\r\n\r\n  if (_nowTime - _recentCall < CLICK_TIME_INTERVAL){\r\n    return void 0;\r\n  } else if (uri === _recentUri){\r\n    onCatch({ error : ALERT_IN_PROGRESS, option, onFailed });\r\n  } else if (_nowTime - _recentTime < MIN_FREQUENCY){\r\n    onCatch({ error : ALERT_FREQUENCY, option, onFailed });\r\n  } else {\r\n\r\n     const _configFetch = {\r\n       ...config,\r\n       _crErr, _crErrResp,\r\n       _nowTime, _doneOk, _doneFailure\r\n     };\r\n\r\n    _starLoading(uri, _nowTime);\r\n\r\n    const { fetchType } = option;\r\n    if (fetchType === 'csv-stream') {\r\n      fetchCsvStream(_configFetch)\r\n    } else {\r\n      fetchJson(_configFetch)\r\n    }\r\n  }\r\n}\r\n"],"file":"fnFetch.js"}