{"version":3,"file":"ListEditPane.js","names":["_uiApi","require","_useValidationMessages","_interopRequireDefault","_useRerender","_useWatchList","_SelectGroupList","_RowInputText","_ValidationMessages","_RowButtons","_jsxRuntime","ListEditPane","_ref","getWatchListsByGroup","forActionType","msgOnIsEmptyName","msgOnNotSelect","onRename","onClose","_refGroupList","useRef","_refInputText","validationMessages","setValidationMessages","_hClear","useValidationMessages","getRefValue","setValue","rerender","useRerender","groupOptions","useWatchList","_hRename","useCallback","captionGroup","captionList","getValue","captionListTo","captionListFrom","msg","push","jsxs","children","jsx","default","refEl","groupCaption","listCaption","caption","onClick","onClear","_default","exports"],"sources":["../../../src/components/browser-watch/ListEditPane.jsx"],"sourcesContent":["import {\r\n useRef,\r\n useCallback,\r\n getRefValue\r\n} from '../uiApi';\r\n\r\nimport useValidationMessages from '../hooks/useValidationMessages';\r\nimport useRerender from '../hooks/useRerender';\r\nimport useWatchList from './useWatchList';\r\n\r\nimport SelectGroupList from './SelectGroupList';\r\nimport RowInputText from '../dialogs/rows/RowInputText';\r\nimport ValidationMessages from '../dialogs/rows/ValidationMessages';\r\nimport RowButtons from './RowButtons';\r\n\r\nconst ListEditPane = ({\r\n  getWatchListsByGroup,\r\n  forActionType,\r\n  msgOnIsEmptyName,\r\n  msgOnNotSelect,\r\n  onRename,\r\n  onClose\r\n}) => {\r\n  const _refGroupList = useRef()\r\n  , _refInputText = useRef()\r\n  , [\r\n    validationMessages,\r\n    setValidationMessages,\r\n    _hClear\r\n  ] = useValidationMessages(\r\n    () => getRefValue(_refInputText).setValue('')\r\n  )\r\n  , rerender = useRerender()\r\n  , groupOptions = useWatchList(\r\n     forActionType,\r\n     setValidationMessages,\r\n     _hClear,\r\n     rerender\r\n  )\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  , _hRename = useCallback(() => {\r\n    const {\r\n      captionGroup,\r\n      captionList\r\n    } = getRefValue(_refGroupList).getValue()\r\n    , captionListTo = getRefValue(_refInputText).getValue();\r\n    if (captionGroup && captionList && captionListTo){\r\n      onRename({\r\n        captionGroup,\r\n        captionListFrom: captionList,\r\n        captionListTo\r\n      })\r\n    } else {\r\n      const msg = [];\r\n      if (!captionGroup) { msg.push(msgOnNotSelect('Group')); }\r\n      if (!captionList)  { msg.push(msgOnNotSelect('List From')); }\r\n      if (!captionListTo){ msg.push(msgOnIsEmptyName('List To')); }\r\n      setValidationMessages(msg)\r\n    }\r\n  }, [])\r\n  // onRename, msgOnIsEmptyName, msgOnNotSelect\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n\r\n  return (\r\n    <div>\r\n       <SelectGroupList\r\n         refEl={_refGroupList}\r\n         getWatchListsByGroup={getWatchListsByGroup}\r\n         groupCaption=\"In Group\"\r\n         groupOptions={groupOptions}\r\n         listCaption=\"List From\"\r\n       />\r\n       <RowInputText\r\n          refEl={_refInputText}\r\n          caption=\"List To\"\r\n       />\r\n       <ValidationMessages\r\n         validationMessages={validationMessages}\r\n       />\r\n       <RowButtons\r\n          caption=\"Rename\"\r\n          onClick={_hRename}\r\n          onClear={_hClear}\r\n          onClose={onClose}\r\n       />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListEditPane\r\n"],"mappings":"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","ignoreList":[]}