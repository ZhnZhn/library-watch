{"version":3,"sources":["../../../src/components/browser-watch/AddToWatchDialog.jsx"],"names":["styles","DialogStyles","actionCompleted","WAT","EDIT_WATCH_COMPLETED","actionFailed","EDIT_WATCH_FAILED","forActionType","ADD_ITEM","S","BOLD","fontWeight","LH","lineHeight","DESCR","color","AddToWatchDialog","withValidationLoad","props","_onStore","actionType","data","state","validationMessages","length","setState","onClose","messages","_handlerSelectGroup","group","caption","groupCaption","lists","listOptions","_handlerSelectList","list","listCaption","_handlerAdd","_crValidationMessages","isValid","config","WatchActions","addItem","_updateValidationMessages","msg","push","Msg","NOT_SELECTED","_handlerClose","store","_commandButtons","groupOptions","getWatchGroups","componentDidMount","unsubscribe","listen","componetWillUnmount","UNSAFE_componentWillReceiveProps","nextProps","isShow","groups","getWatchListsByGroup","shouldComponentUpdate","nextState","render","descr","rowDiv","labelSpan","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport withValidationLoad from '../dialogs/decorators/withValidationLoad'\r\n\r\nimport WatchActions from '../../flux/actions/WatchActions'\r\nimport { WatchActionTypes as WAT } from '../../flux/actions/WatchActions'\r\nimport Msg from '../../constants/Msg'\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport FlatButton from '../zhn-m/FlatButton'\r\nimport InputSelect from '../zhn-select/InputSelect'\r\nimport ValidationMessagesFragment from '../zhn-moleculs/ValidationMessagesFragment';\r\n\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst actionCompleted = WAT.EDIT_WATCH_COMPLETED\r\n    , actionFailed =  WAT.EDIT_WATCH_FAILED\r\n    , forActionType = WAT.ADD_ITEM\r\n\r\nconst S = {\r\n  BOLD: {\r\n    fontWeight: 'bold'\r\n  },\r\n  LH: {\r\n    lineHeight: 2\r\n  },\r\n  DESCR: {\r\n    fontWeight: 'bold',\r\n    color: 'gray'\r\n  }\r\n};\r\n\r\n@withValidationLoad\r\nclass AddToWatchDialog extends Component {\r\n  /*\r\n  propTypes : {\r\n    isShow  : PropTypes.bool.isRequired,\r\n    data    : PropTypes.object.isRequired,\r\n    store   : PropTypes.object,\r\n    onClose : PropTypes.func.isRequired\r\n  },\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    const { store } = props;\r\n\r\n    this.groupCaption = null;\r\n    this.listCaption = null;\r\n    this._commandButtons = [\r\n      <FlatButton\r\n        key=\"add\"\r\n        caption=\"Add\"\r\n        title=\"Click to add to watch list\"\r\n        timeout={0}\r\n        onClick={this._handlerAdd}\r\n      />\r\n   ];\r\n\r\n   this.state = {\r\n      groupOptions: store.getWatchGroups(),\r\n      listOptions: [],\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore);\r\n  }\r\n  componetWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    if (actionType === actionCompleted && data.forActionType === forActionType){\r\n       if (this.state.validationMessages.length>0){\r\n         this.setState({ validationMessages:[] });\r\n       }\r\n       this.props.onClose();\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n       this.setState({ validationMessages:data.messages });\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props && nextProps.isShow !== this.props.isShow) {\r\n      const groups = nextProps.store.getWatchGroups();\r\n      if (groups !== this.state.groupOptions){\r\n        this.groupCaption = null;\r\n        this.listCaption = null;\r\n        this.setState({groupOptions:groups, listOptions:[]});\r\n      } else if (this.groupCaption){\r\n        const lists = nextProps.store.getWatchListsByGroup(this.groupCaption);\r\n        if (lists !== this.state.listOptions){\r\n          this.listCaption = null;\r\n          this.setState({listOptions:lists})\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handlerSelectGroup = (group) => {\r\n    if (group && group.caption){\r\n       this.groupCaption = group.caption;\r\n       if (group.lists){\r\n         this.setState({listOptions : group.lists})\r\n       }  else {\r\n         this.setState({listOptions : []})\r\n       }\r\n    } else {\r\n      this.groupCaption = null;\r\n    }\r\n  }\r\n  _handlerSelectList = (list) => {\r\n      if (list && list.caption){\r\n        this.listCaption = list.caption;\r\n      } else {\r\n        this.listCaption = null;\r\n      }\r\n  }\r\n  _handlerAdd = () => {\r\n    const validationMessages = this._crValidationMessages();\r\n    if (validationMessages.isValid){\r\n      //onClose\r\n      const { data } = this.props\r\n          , { caption, config } = data\r\n          , { groupCaption, listCaption } = this;\r\n\r\n      WatchActions.addItem({ caption, groupCaption, listCaption, config });\r\n    } else {\r\n      this._updateValidationMessages(validationMessages);\r\n    }\r\n  }\r\n  _crValidationMessages = () => {\r\n    const msg = [];\r\n    if (!this.groupCaption){ msg.push(Msg.NOT_SELECTED('Group'));}\r\n    if (!this.listCaption) { msg.push(Msg.NOT_SELECTED('List'));}\r\n    msg.isValid = (msg.length === 0) ? true : false;\r\n    return msg;\r\n  }\r\n\r\n  _handlerClose = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({validationMessages: []});\r\n    }\r\n    this.props.onClose();\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data } = this.props\r\n        , { caption, config={} } = data\r\n        , { descr } = config\r\n        , { groupOptions, listOptions, validationMessages } = this.state;\r\n\r\n    return (\r\n      <ModalDialog\r\n         caption=\"Add To Watch List\"\r\n         isShow={isShow}\r\n         commandButtons={this._commandButtons}\r\n         onClose={this._handlerClose}\r\n      >\r\n        <div style={styles.rowDiv} key=\"1\">\r\n          <span style={styles.labelSpan}>\r\n            Group:\r\n          </span>\r\n          <InputSelect\r\n             width=\"250\"\r\n             options={groupOptions}\r\n             onSelect={this._handlerSelectGroup}\r\n           />\r\n        </div>\r\n        <div style={styles.rowDiv} key=\"2\">\r\n          <span style={styles.labelSpan}>\r\n            List:\r\n          </span>\r\n          <InputSelect\r\n             width=\"250\"\r\n             options={listOptions}\r\n             onSelect={this._handlerSelectList}\r\n           />\r\n        </div>\r\n        <div style={{...styles.rowDiv, ...S.LH}} key=\"3\">\r\n          <span style={styles.labelSpan}>\r\n            Item:\r\n          </span>\r\n          <span style={S.BOLD}>\r\n             {caption}\r\n          </span>\r\n        </div>\r\n        <div style={{...styles.rowDiv, ...S.LH}} key=\"4\">\r\n          <span style={styles.labelSpan}>\r\n             Descr:\r\n          </span>\r\n          <span style={S.DESCR}>\r\n             {descr}\r\n          </span>\r\n        </div>\r\n        <ValidationMessagesFragment\r\n           key=\"5\"\r\n           validationMessages={validationMessages}\r\n         />\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddToWatchDialog\r\n"],"file":"AddToWatchDialog.js"}