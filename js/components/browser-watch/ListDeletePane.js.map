{"version":3,"sources":["../../../src/components/browser-watch/ListDeletePane.jsx"],"names":["Styles","COMMAND_DIV","cursor","float","marginTop","marginBottom","marginRight","ListDeletePane","createClass","displayName","propTypes","store","PropTypes","object","actionCompleted","string","forActionType","onRename","func","onClose","getInitialState","props","groupOptions","getWatchGroups","validationMessages","componentDidMount","unsubscribe","listen","_onStore","componentWillUnmount","actionType","data","_handlerClear","setState","state","length","_handlerDelete","selectGroupList","getValue","captionGroup","captionList","onDelete","msgOnNotSelect","msg","push","render","c"],"mappings":"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","file":"ListDeletePane.js","sourcesContent":["import React from 'react';\r\n\r\nimport FragmentSelectGroupList from './FragmentSelectGroupList';\r\nimport ValidationMessagesFragment from '../zhnMoleculs/ValidationMessagesFragment';\r\nimport ToolBarButton from '../header/ToolBarButton';\r\n\r\nconst Styles = {\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n}\r\n\r\nconst ListDeletePane = React.createClass({\r\n  displayName : 'ListDeletePane',\r\n  propTypes : {\r\n    store : React.PropTypes.object,\r\n    actionCompleted : React.PropTypes.string,\r\n    forActionType : React.PropTypes.string,\r\n    onRename : React.PropTypes.func,\r\n    onClose : React.PropTypes.func\r\n  },\r\n\r\n  getInitialState(){\r\n    const {store} = this.props;\r\n    return {\r\n      groupOptions : store.getWatchGroups(),\r\n      validationMessages : []\r\n    }\r\n  },\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n  },\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  },\r\n  _onStore(actionType, data){\r\n    const {actionCompleted, forActionType, store} = this.props;\r\n    if (actionType === actionCompleted){\r\n        if (data.forActionType === forActionType) {\r\n          this._handlerClear();\r\n        }\r\n        this.setState({groupOptions : store.getWatchGroups()});\r\n    }\r\n  },\r\n\r\n  _handlerClear(){\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({validationMessages: []})\r\n    }\r\n  },\r\n\r\n  _handlerDelete(){\r\n      const {captionGroup, captionList} = this.selectGroupList.getValue();\r\n      if (captionGroup && captionList){\r\n        this.props.onDelete({captionGroup, captionList});\r\n      } else {\r\n        const {msgOnNotSelect} = this.props\r\n            , msg = [];\r\n        if (!captionGroup) {msg.push(msgOnNotSelect('Group'));}\r\n        if (!captionList)  {msg.push(msgOnNotSelect('List')); }\r\n        this.setState({validationMessages: msg});\r\n      }\r\n  },\r\n\r\n  render(){\r\n    const {store, onClose} = this.props\r\n        , {groupOptions, validationMessages} = this.state;\r\n    return (\r\n      <div>\r\n         <FragmentSelectGroupList\r\n           ref={c => this.selectGroupList = c}\r\n           store={store}\r\n           groupCaption={'In Group:'}\r\n           groupOptions={groupOptions}\r\n           listCaption={'List:'}\r\n         />\r\n         <ValidationMessagesFragment\r\n            validationMessages={validationMessages}\r\n         />\r\n         <div style={Styles.COMMAND_DIV}>\r\n            <ToolBarButton\r\n               type=\"TypeC\"\r\n               caption=\"Delete\"\r\n               onClick={this._handlerDelete}\r\n            />\r\n            <ToolBarButton\r\n               type=\"TypeC\"\r\n               caption=\"Clear\"\r\n               onClick={this._handlerClear}\r\n            />\r\n            <ToolBarButton\r\n               type=\"TypeC\"\r\n               caption=\"Close\"\r\n               onClick={onClose}\r\n            />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nexport default ListDeletePane\r\n"]}