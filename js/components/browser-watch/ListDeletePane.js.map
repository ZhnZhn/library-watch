{"version":3,"sources":["../../../src/components/browser-watch/ListDeletePane.jsx"],"names":["S","COMMAND_DIV","cursor","float","marginTop","marginBottom","marginRight","ListDeletePane","props","store","state","groupOptions","getWatchGroups","validationMessages","unsubscribe","listen","_onStore","onClose","_refGroupList","_handlerDelete","_handlerClear","Component","actionType","data","actionCompleted","forActionType","setState","length","selectGroupList","getValue","captionGroup","captionList","onDelete","msgOnNotSelect","msg","push","c"],"mappings":"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","file":"ListDeletePane.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types'\r\n\r\nimport FragmentSelectGroupList from './FragmentSelectGroupList';\r\nimport ValidationMessagesFragment from '../zhnMoleculs/ValidationMessagesFragment';\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nconst S = {\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n}\r\n\r\nclass ListDeletePane extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store : PropTypes.object,\r\n    actionCompleted : PropTypes.string,\r\n    forActionType : PropTypes.string,\r\n    onRename : PropTypes.func,\r\n    onClose : PropTypes.func\r\n  },\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    const {store} = props;\r\n    this.state = {\r\n      groupOptions: store.getWatchGroups(),\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props\r\n      .store.listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    const {actionCompleted, forActionType, store} = this.props;\r\n    if (actionType === actionCompleted){\r\n        if (data.forActionType === forActionType) {\r\n          this._handlerClear();\r\n        }\r\n        this.setState({\r\n          groupOptions: store.getWatchGroups()\r\n        });\r\n    }\r\n  }\r\n\r\n  _handlerClear = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({validationMessages: []})\r\n    }\r\n  }\r\n\r\n  _handlerDelete = () => {\r\n      const {captionGroup, captionList} = this.selectGroupList.getValue();\r\n      if (captionGroup && captionList){\r\n        this.props.onDelete({captionGroup, captionList});\r\n      } else {\r\n        const {msgOnNotSelect} = this.props\r\n            , msg = [];\r\n        if (!captionGroup) {msg.push(msgOnNotSelect('Group'));}\r\n        if (!captionList)  {msg.push(msgOnNotSelect('List')); }\r\n        this.setState({validationMessages: msg});\r\n      }\r\n  }\r\n\r\n  _refGroupList = c => this.selectGroupList = c\r\n\r\n  render(){\r\n    const {store, onClose} = this.props\r\n        , {groupOptions, validationMessages} = this.state;\r\n    return (\r\n      <div>\r\n         <FragmentSelectGroupList\r\n           ref={this._refGroupList}\r\n           store={store}\r\n           groupCaption=\"In Group\"\r\n           groupOptions={groupOptions}\r\n           listCaption=\"List\"\r\n         />\r\n         <ValidationMessagesFragment\r\n            validationMessages={validationMessages}\r\n         />\r\n         <div style={S.COMMAND_DIV}>\r\n            <FlatButton\r\n               isPrimary={true}\r\n               caption=\"Delete\"\r\n               timeout={0}\r\n               onClick={this._handlerDelete}\r\n            />\r\n            <FlatButton\r\n               caption=\"Clear\"\r\n               timeout={0}\r\n               onClick={this._handlerClear}\r\n            />\r\n            <FlatButton\r\n               caption=\"Close\"\r\n               timeout={0}\r\n               onClick={onClose}\r\n            />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListDeletePane\r\n"]}