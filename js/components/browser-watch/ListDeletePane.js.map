{"version":3,"sources":["../../../src/components/browser-watch/ListDeletePane.jsx"],"names":["Styles","COMMAND_DIV","cursor","float","marginTop","marginBottom","marginRight","ListDeletePane","displayName","getInitialState","store","props","groupOptions","getWatchGroups","validationMessages","componentDidMount","unsubscribe","listen","_onStore","componentWillUnmount","actionType","data","actionCompleted","forActionType","_handlerClear","setState","state","length","_handlerDelete","selectGroupList","getValue","captionGroup","captionList","onDelete","msgOnNotSelect","msg","push","render","onClose","c"],"mappings":"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","file":"ListDeletePane.js","sourcesContent":["import React from 'react';\r\nimport createReactClass from 'create-react-class'\r\n\r\n//import PropTypes from 'prop-types'\r\n\r\nimport FragmentSelectGroupList from './FragmentSelectGroupList';\r\nimport ValidationMessagesFragment from '../zhnMoleculs/ValidationMessagesFragment';\r\nimport ToolBarButton from '../header/ToolBarButton';\r\n\r\nconst Styles = {\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n}\r\n\r\nconst ListDeletePane = createReactClass({\r\n  displayName : 'ListDeletePane',\r\n  /*\r\n  propTypes : {\r\n    store : PropTypes.object,\r\n    actionCompleted : PropTypes.string,\r\n    forActionType : PropTypes.string,\r\n    onRename : PropTypes.func,\r\n    onClose : PropTypes.func\r\n  },\r\n  */\r\n\r\n  getInitialState(){\r\n    const {store} = this.props;\r\n    return {\r\n      groupOptions : store.getWatchGroups(),\r\n      validationMessages : []\r\n    }\r\n  },\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n  },\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  },\r\n  _onStore(actionType, data){\r\n    const {actionCompleted, forActionType, store} = this.props;\r\n    if (actionType === actionCompleted){\r\n        if (data.forActionType === forActionType) {\r\n          this._handlerClear();\r\n        }\r\n        this.setState({groupOptions : store.getWatchGroups()});\r\n    }\r\n  },\r\n\r\n  _handlerClear(){\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({validationMessages: []})\r\n    }\r\n  },\r\n\r\n  _handlerDelete(){\r\n      const {captionGroup, captionList} = this.selectGroupList.getValue();\r\n      if (captionGroup && captionList){\r\n        this.props.onDelete({captionGroup, captionList});\r\n      } else {\r\n        const {msgOnNotSelect} = this.props\r\n            , msg = [];\r\n        if (!captionGroup) {msg.push(msgOnNotSelect('Group'));}\r\n        if (!captionList)  {msg.push(msgOnNotSelect('List')); }\r\n        this.setState({validationMessages: msg});\r\n      }\r\n  },\r\n\r\n  render(){\r\n    const {store, onClose} = this.props\r\n        , {groupOptions, validationMessages} = this.state;\r\n    return (\r\n      <div>\r\n         <FragmentSelectGroupList\r\n           ref={c => this.selectGroupList = c}\r\n           store={store}\r\n           groupCaption={'In Group:'}\r\n           groupOptions={groupOptions}\r\n           listCaption={'List:'}\r\n         />\r\n         <ValidationMessagesFragment\r\n            validationMessages={validationMessages}\r\n         />\r\n         <div style={Styles.COMMAND_DIV}>\r\n            <ToolBarButton\r\n               type=\"TypeC\"\r\n               caption=\"Delete\"\r\n               onClick={this._handlerDelete}\r\n            />\r\n            <ToolBarButton\r\n               type=\"TypeC\"\r\n               caption=\"Clear\"\r\n               onClick={this._handlerClear}\r\n            />\r\n            <ToolBarButton\r\n               type=\"TypeC\"\r\n               caption=\"Close\"\r\n               onClick={onClose}\r\n            />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nexport default ListDeletePane\r\n"]}