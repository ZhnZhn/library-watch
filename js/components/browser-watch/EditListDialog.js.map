{"version":3,"sources":["../../../src/components/browser-watch/EditListDialog.jsx"],"names":["EditListDialog","displayName","shouldComponentUpdate","nextProps","nextState","props","isShow","render","store","onClose","WatchActionTypes","EDIT_WATCH_COMPLETED","EDIT_WATCH_FAILED","CREATE_LIST","Msg","NOT_SELECTED","IS_EMPTY_NAME","WatchActions","createList","RENAME_LIST","renameList","DELETE_LIST","deleteList"],"mappings":";;;;;;;;;AAAA;;AACA;;AAIA;;AAGA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAZA;AAeA,IAAMA,cAAc,GAAG,kCAAiB;AACtCC,EAAAA,WAAW,EAAG,gBADwB;;AAEtC;;;;;;;AAQAC,EAAAA,qBAVsC,iCAUhBC,SAVgB,EAULC,SAVK,EAUK;AACzC,QAAID,SAAS,KAAK,KAAKE,KAAnB,IAA4BF,SAAS,CAACG,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MAAhE,EAAwE;AACtE,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GAfqC;AAiBtCC,EAAAA,MAjBsC,oBAiB9B;AAAA,sBAC2B,KAAKF,KADhC;AAAA,QACCC,MADD,eACCA,MADD;AAAA,QACSE,KADT,eACSA,KADT;AAAA,QACgBC,OADhB,eACgBA,OADhB;AAEN,WACE,gCAAC,uBAAD;AACG,MAAA,OAAO,EAAC,kBADX;AAEG,MAAA,MAAM,EAAEH,MAFX;AAGG,MAAA,YAAY,EAAE,KAHjB;AAIG,MAAA,OAAO,EAAEG;AAJZ,OAME,gCAAC,mBAAD;AAAS,MAAA,GAAG,EAAC,GAAb;AAAiB,MAAA,KAAK,EAAC;AAAvB,OACG,gCAAC,eAAD;AAAK,MAAA,KAAK,EAAC;AAAX,OACE,gCAAC,0BAAD;AACG,MAAA,KAAK,EAAED,KADV;AAEG,MAAA,eAAe,EAAEE,+BAAiBC,oBAFrC;AAGG,MAAA,YAAY,EAAED,+BAAiBE,iBAHlC;AAIG,MAAA,aAAa,EAAEF,+BAAiBG,WAJnC;AAKG,MAAA,cAAc,EAAEC,gBAAIC,YALvB;AAMG,MAAA,gBAAgB,EAAED,gBAAIE,aANzB;AAOG,MAAA,QAAQ,EAAEC,yBAAaC,UAP1B;AAQG,MAAA,OAAO,EAAET;AARZ,MADF,CADH,EAYG,gCAAC,eAAD;AAAK,MAAA,KAAK,EAAC;AAAX,OACE,gCAAC,wBAAD;AACG,MAAA,KAAK,EAAED,KADV;AAEG,MAAA,eAAe,EAAEE,+BAAiBC,oBAFrC;AAGG,MAAA,YAAY,EAAED,+BAAiBE,iBAHlC;AAIG,MAAA,aAAa,EAAEF,+BAAiBS,WAJnC;AAKG,MAAA,cAAc,EAAEL,gBAAIC,YALvB;AAMG,MAAA,gBAAgB,EAAED,gBAAIE,aANzB;AAOG,MAAA,QAAQ,EAAEC,yBAAaG,UAP1B;AAQG,MAAA,OAAO,EAAEX;AARZ,MADF,CAZH,EAwBG,gCAAC,eAAD;AAAK,MAAA,KAAK,EAAC;AAAX,OACE,gCAAC,0BAAD;AACG,MAAA,KAAK,EAAED,KADV;AAEG,MAAA,eAAe,EAAEE,+BAAiBC,oBAFrC;AAGG,MAAA,YAAY,EAAED,+BAAiBE,iBAHlC;AAIG,MAAA,aAAa,EAAEF,+BAAiBW,WAJnC;AAKG,MAAA,cAAc,EAAEP,gBAAIC,YALvB;AAMG,MAAA,QAAQ,EAAEE,yBAAaK,UAN1B;AAOG,MAAA,OAAO,EAAEb;AAPZ,MADF,CAxBH,CANF,CADF;AA6CD;AAhEqC,CAAjB,CAAvB;eAmEeT,c","sourcesContent":["import React from 'react';\r\nimport createReactClass from 'create-react-class'\r\n\r\n//import PropTypes from 'prop-types'\r\n\r\nimport WatchActions from '../../flux/actions/WatchActions';\r\nimport { WatchActionTypes } from '../../flux/actions/WatchActions';\r\n\r\nimport Msg from '../../constants/Msg';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport TabPane from '../zhn-moleculs/TabPane';\r\nimport Tab from '../zhn-atoms/Tab';\r\nimport ListCreatePane from './ListCreatePane';\r\nimport ListEditPane from './ListEditPane';\r\nimport ListDeletePane from './ListDeletePane';\r\n\r\n\r\nconst EditListDialog = createReactClass({\r\n  displayName : 'EditListDialog',\r\n  /*\r\n  propTypes : {\r\n    isShow : PropTypes.bool,\r\n    store : PropTypes.object,\r\n    onClose : PropTypes.func\r\n  },\r\n  */\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  render(){\r\n    const {isShow, store, onClose} = this.props;\r\n    return (\r\n      <ModalDialog\r\n         caption=\"Watch Lists Edit\"\r\n         isShow={isShow}\r\n         isWithButton={false}\r\n         onClose={onClose}\r\n      >\r\n        <TabPane key=\"1\" width=\"380px\" >\r\n           <Tab title=\"Create\">\r\n             <ListCreatePane\r\n                store={store}\r\n                actionCompleted={WatchActionTypes.EDIT_WATCH_COMPLETED}\r\n                actionFailed={WatchActionTypes.EDIT_WATCH_FAILED}\r\n                forActionType={WatchActionTypes.CREATE_LIST}\r\n                msgOnNotSelect={Msg.NOT_SELECTED}\r\n                msgOnIsEmptyName={Msg.IS_EMPTY_NAME}\r\n                onCreate={WatchActions.createList}\r\n                onClose={onClose} />\r\n           </Tab>\r\n           <Tab title=\"Rename\">\r\n             <ListEditPane\r\n                store={store}\r\n                actionCompleted={WatchActionTypes.EDIT_WATCH_COMPLETED}\r\n                actionFailed={WatchActionTypes.EDIT_WATCH_FAILED}\r\n                forActionType={WatchActionTypes.RENAME_LIST}\r\n                msgOnNotSelect={Msg.NOT_SELECTED}\r\n                msgOnIsEmptyName={Msg.IS_EMPTY_NAME}\r\n                onRename={WatchActions.renameList}\r\n                onClose={onClose}\r\n             />\r\n           </Tab>\r\n           <Tab title=\"Delete\">\r\n             <ListDeletePane\r\n                store={store}\r\n                actionCompleted={WatchActionTypes.EDIT_WATCH_COMPLETED}\r\n                actionFailed={WatchActionTypes.EDIT_WATCH_FAILED}\r\n                forActionType={WatchActionTypes.DELETE_LIST}\r\n                msgOnNotSelect={Msg.NOT_SELECTED}\r\n                onDelete={WatchActions.deleteList}\r\n                onClose={onClose}\r\n             />\r\n           </Tab>\r\n        </TabPane>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n});\r\n\r\nexport default EditListDialog\r\n"],"file":"EditListDialog.js"}