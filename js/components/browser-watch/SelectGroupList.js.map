{"version":3,"file":"SelectGroupList.js","names":["_uiApi","require","_usePrevValue","_interopRequireDefault","_useRefItemCaption","_RowInputSelect","_jsxRuntime","SelectGroupList","_ref","refEl","restProps","_prevProps","usePrevValue","_refGroupCaption","useRef","_refListCaption","_hSelectList","useRefItemCaption","listOptions","setListOptions","useState","_hSelectGroup","useCallback","item","caption","setRefValue","lists","getWatchListsByGroup","groupCaption","groupOptions","listCaption","useEffect","_groupCaption","getRefValue","prevListOptions","useImperativeHandle","getValue","captionGroup","captionList","setValueNull","jsxs","children","jsx","default","options","onSelect","_default","exports"],"sources":["../../../src/components/browser-watch/SelectGroupList.jsx"],"sourcesContent":["//import PropTypes from 'prop-types'\r\nimport {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  getRefValue,\r\n  setRefValue\r\n} from '../uiApi';\r\nimport usePrevValue from '../hooks/usePrevValue';\r\nimport useRefItemCaption from './useRefItemCaption';\r\n\r\nimport RowInputSelect from '../dialogs/rows/RowInputSelect';\r\n\r\nconst SelectGroupList = ({\r\n  refEl,\r\n  ...restProps\r\n}) => {\r\n  const _prevProps = usePrevValue(restProps)\r\n  , _refGroupCaption = useRef(null)\r\n  , [\r\n      _refListCaption,\r\n      _hSelectList\r\n    ] = useRefItemCaption()\r\n  , [\r\n      listOptions,\r\n      setListOptions\r\n    ] = useState([])\r\n  , _hSelectGroup = useCallback(item => {\r\n    if (item && item.caption){\r\n      setRefValue(_refGroupCaption, item.caption)\r\n      setListOptions(item.lists || [])\r\n    } else {\r\n      setRefValue(_refGroupCaption, null)\r\n    }\r\n  }, [])\r\n  , {\r\n    getWatchListsByGroup,\r\n    groupCaption,\r\n    groupOptions,\r\n    listCaption\r\n  } = restProps;\r\n\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  useEffect(() => {\r\n    if (_prevProps && restProps !== _prevProps) {\r\n      const _groupCaption = getRefValue(_refGroupCaption);\r\n      if (restProps.groupOptions !== _prevProps.groupOptions){\r\n          setRefValue(_refGroupCaption, null)\r\n          setRefValue(_refListCaption, null)\r\n          setListOptions([]);\r\n      } else if (_groupCaption) {\r\n        setListOptions(prevListOptions => {\r\n          const listOptions = getWatchListsByGroup(_groupCaption);\r\n          if (listOptions !== prevListOptions) {\r\n            setRefValue(_refListCaption, null)\r\n            return listOptions;\r\n          }\r\n          return prevListOptions;\r\n        })\r\n      }\r\n    }\r\n  })\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n\r\n  useImperativeHandle(refEl, () => ({\r\n    getValue: () => ({\r\n      captionGroup: getRefValue(_refGroupCaption),\r\n      captionList: getRefValue(_refListCaption)\r\n    }),\r\n    setValueNull: () => {\r\n      setRefValue(_refGroupCaption, null)\r\n      setRefValue(_refListCaption, null)\r\n    }\r\n  }))\r\n\r\n  return (\r\n    <div>\r\n       <RowInputSelect\r\n         caption={groupCaption}\r\n         options={groupOptions}\r\n         onSelect={_hSelectGroup}\r\n       />\r\n       <RowInputSelect\r\n         caption={listCaption}\r\n         options={listOptions}\r\n         onSelect={_hSelectList}\r\n       />\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\nSelectGroupList.propTypes = {\r\n  groupCaption: PropTypes.string,\r\n  groupOptions: PropTypes.array,\r\n  listCaption: PropTypes.string\r\n}\r\n*/\r\n\r\nexport default SelectGroupList\r\n"],"mappings":"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","ignoreList":[]}