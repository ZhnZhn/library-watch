{"version":3,"sources":["../../../../src/components/browser-watch/with/createHandlerDnDGroup.js"],"names":["createHandlerDnDGroup","DRAG","WatchActions","_handlerDragStartGroup","ev","caption","dragStartWithDnDStyle","GROUP","dataTransfer","effectAllowed","dropEffect","_data","dragId","xType","setData","JSON","stringify","_handlerDropGroup","dropWithDnDStyle","parse","getData","data","dropId","preventDefault","dragDropGroup","undefined","LIST","dragDropList","_handlerDragEnterGroup","dragEnterWithDnDStyle","_handlerDragOverGroup","_handlerDragLeaveGroup","dragLeaveWithDnDStyle"],"mappings":";;;;;;AACA,IAAMA,wBAAwB,SAAxBA,qBAAwB,CAASC,IAAT,EAAeC,YAAf,EAA4B;AACxD,SAAO;AAELC,0BAFK,wCAE8BC,EAF9B,EAEiC;AAAA,UAAbC,OAAa,QAAbA,OAAa;;AACnC,WAAKC,qBAAL,CAA2BF,EAA3B,EAA+B,CAACH,KAAKM,KAAN,CAA/B;AACAH,SAAGI,YAAH,CAAgBC,aAAhB,GAA8B,MAA9B;AACAL,SAAGI,YAAH,CAAgBE,UAAhB,GAA2B,MAA3B;AACA,UAAMC,QAAQ;AACZC,gBAAYP,OAAZ,MADY;AAEZQ,eAAQZ,KAAKM;AAFD,OAAd;AAIAH,SAAGI,YAAH,CAAgBM,OAAhB,CAAwB,MAAxB,EAAgCC,KAAKC,SAAL,CAAeL,KAAf,CAAhC;AACF,KAXI;AAaLM,qBAbK,oCAa0Bb,EAb1B,EAa6B;AAAA,UAAdC,OAAc,SAAdA,OAAc;;AAC/B,WAAKa,gBAAL,CAAsBd,EAAtB;AACM,iBAAOW,KAAKI,KAAL,CAAWf,GAAGI,YAAH,CAAgBY,OAAhB,CAAwB,MAAxB,CAAX,CAAP;AAAA,UACEP,KADF,GACoBQ,IADpB,CACER,KADF;AAAA,UACSD,MADT,GACoBS,IADpB,CACST,MADT;AAAA,UAEAU,MAFA,GAEajB,OAFb;;;AAIN,UAAIQ,UAAUZ,KAAKM,KAAnB,EAA0B;AACxB,YAAIK,WAAWU,MAAf,EAAuB;AACrBlB,aAAGmB,cAAH;AACArB,uBAAasB,aAAb,CAA2B;AACzBZ,oBAASA,MADgB;AAEzBU,oBAASA;AAFgB,WAA3B;AAID,SAND,MAMO;AACL,iBAAOG,SAAP;AACD;AACF,OAVD,MAUO,IAAIZ,UAAUZ,KAAKyB,IAAnB,EAAyB;AAC9BtB,WAAGmB,cAAH;AACArB,qBAAayB,YAAb,CAA0B;AACxBf,kBAASA,MADe;AAExBU,kBAASA;AAFe,SAA1B;AAIF;AACF,KApCI;AAuCLM,0BAvCK,kCAuCkBxB,EAvClB,EAuCqB;AACvBA,SAAGmB,cAAH;AACA,WAAKM,qBAAL,CAA2BzB,EAA3B,EAA+BH,KAAKM,KAApC;AACF,KA1CI;AA4CLuB,yBA5CK,iCA4CiB1B,EA5CjB,EA4CoB;AACtBA,SAAGmB,cAAH;AACF,KA9CI;AAgDLQ,0BAhDK,kCAgDkB3B,EAhDlB,EAgDqB;AACvBA,SAAGmB,cAAH;AACA,WAAKS,qBAAL,CAA2B5B,EAA3B;AACF;AAnDI,GAAP;AAsDD,CAvDD;;kBAyDeJ,qB","file":"createHandlerDnDGroup.js","sourcesContent":["\r\nconst createHandlerDnDGroup = function(DRAG, WatchActions){\r\n  return {\r\n\r\n    _handlerDragStartGroup({ caption}, ev){\r\n       this.dragStartWithDnDStyle(ev, [DRAG.GROUP]);\r\n       ev.dataTransfer.effectAllowed=\"move\";\r\n       ev.dataTransfer.dropEffect=\"move\";\r\n       const _data = {\r\n         dragId : `${caption};`,\r\n         xType : DRAG.GROUP\r\n       };\r\n       ev.dataTransfer.setData(\"text\", JSON.stringify(_data));\r\n    },\r\n\r\n    _handlerDropGroup({ caption }, ev){\r\n       this.dropWithDnDStyle(ev);\r\n       const data = JSON.parse(ev.dataTransfer.getData(\"text\"))\r\n          ,  { xType, dragId } = data\r\n          ,  dropId =  `${caption};`\r\n\r\n       if (xType === DRAG.GROUP) {\r\n         if (dragId !== dropId) {\r\n           ev.preventDefault();\r\n           WatchActions.dragDropGroup({\r\n             dragId : dragId,\r\n             dropId : dropId\r\n           });\r\n         } else {\r\n           return undefined;\r\n         }\r\n       } else if (xType === DRAG.LIST) {\r\n         ev.preventDefault();\r\n         WatchActions.dragDropList({\r\n           dragId : dragId,\r\n           dropId : dropId\r\n        });\r\n      }\r\n    },\r\n\r\n\r\n    _handlerDragEnterGroup(ev){\r\n       ev.preventDefault();\r\n       this.dragEnterWithDnDStyle(ev, DRAG.GROUP);\r\n    },\r\n\r\n    _handlerDragOverGroup(ev){\r\n       ev.preventDefault();\r\n    },\r\n\r\n    _handlerDragLeaveGroup(ev){\r\n       ev.preventDefault();\r\n       this.dragLeaveWithDnDStyle(ev);\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport default createHandlerDnDGroup\r\n"]}