{"version":3,"sources":["../../../src/components/browser-watch/FragmentSelectGroupList.jsx"],"names":["FragmentSelectGroupList","displayName","getInitialState","groupCaption","listCaption","listOptions","componentWillReceiveProps","nextProps","props","groupOptions","setState","store","getWatchListsByGroup","state","_handlerSelectGroup","item","caption","lists","_handlerSelectList","render","getValue","captionGroup","captionList","setValueNull"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAIA;;;;;;AAEA,IAAMA,0BAA0B,gCAAiB;AAC/CC,eAAc,yBADiC;AAE/C;;;;;;;;;AASAC,iBAX+C,6BAW9B;AACf,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,WAAO;AACJC,mBAAc;AADV,KAAP;AAGD,GAjB8C;AAmB/CC,2BAnB+C,qCAmBrBC,SAnBqB,EAmBX;AAClC,QAAIA,cAAc,KAAKC,KAAvB,EAA6B;AAC3B,UAAID,UAAUE,YAAV,KAA2B,KAAKD,KAAL,CAAWC,YAA1C,EAAuD;AACnD,aAAKN,YAAL,GAAoB,IAApB;AACA,aAAKC,WAAL,GAAmB,IAAnB;AACA,aAAKM,QAAL,CAAc,EAACL,aAAa,EAAd,EAAd;AACH,OAJD,MAIO;AACL,YAAI,KAAKF,YAAT,EAAsB;AACpB,cAAME,cAAc,KAAKG,KAAL,CAAWG,KAAX,CAAiBC,oBAAjB,CAAsC,KAAKT,YAA3C,CAApB;AACA,cAAIE,gBAAgB,KAAKQ,KAAL,CAAWR,WAA/B,EACE,KAAKD,WAAL,GAAmB,IAAnB;AACA,eAAKM,QAAL,CAAc,EAACL,wBAAD,EAAd;AACH;AACF;AACF;AACF,GAlC8C;AAoC/CS,qBApC+C,+BAoC3BC,IApC2B,EAoCtB;AACvB,QAAIA,QAAQA,KAAKC,OAAjB,EAAyB;AACvB,WAAKb,YAAL,GAAoBY,KAAKC,OAAzB;AACA,UAAID,KAAKE,KAAT,EAAe;AACb,aAAKP,QAAL,CAAc,EAACL,aAAcU,KAAKE,KAApB,EAAd;AACD,OAFD,MAEQ;AACN,aAAKP,QAAL,CAAc,EAACL,aAAc,EAAf,EAAd;AACD;AACF,KAPD,MAOO;AACL,WAAKF,YAAL,GAAoB,IAApB;AACD;AACF,GA/C8C;AAiD/Ce,oBAjD+C,8BAiD5BH,IAjD4B,EAiDvB;AACrB,SAAKX,WAAL,GAAoBW,QAAQA,KAAKC,OAAd,GAAyBD,KAAKC,OAA9B,GAAwC,IAA3D;AACF,GAnD8C;AAqD/CG,QArD+C,oBAqDvC;AAAA,iBAC4C,KAAKX,KADjD;AAAA,QACCL,YADD,UACCA,YADD;AAAA,QACeM,YADf,UACeA,YADf;AAAA,QAC6BL,WAD7B,UAC6BA,WAD7B;AAAA,QAECC,WAFD,GAEgB,KAAKQ,KAFrB,CAECR,WAFD;;AAGN,WACE;AAAA;AAAA;AACG,oCAAC,wBAAD;AACE,iBAASF,YADX;AAEE,iBAASM,YAFX;AAGE,kBAAU,KAAKK;AAHjB,QADH;AAMG,oCAAC,wBAAD;AACE,iBAASV,WADX;AAEE,iBAASC,WAFX;AAGE,kBAAU,KAAKa;AAHjB;AANH,KADF;AAcD,GAtE8C;AAwE/CE,UAxE+C,sBAwErC;AACR,WAAO,EAACC,cAAc,KAAKlB,YAApB,EAAkCmB,aAAa,KAAKlB,WAApD,EAAP;AACD,GA1E8C;AA2E/CmB,cA3E+C,0BA2EjC;AACZ,SAAKpB,YAAL,GAAoB,IAApB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACD;AA9E8C,CAAjB,CAAhC;;AAJA;;kBAqFeJ,uB","file":"FragmentSelectGroupList.js","sourcesContent":["import React from 'react';\r\nimport createReactClass from 'create-react-class'\r\n\r\n//import PropTypes from 'prop-types'\r\n\r\nimport RowInputSelect from './RowInputSelect';\r\n\r\nconst FragmentSelectGroupList = createReactClass({\r\n  displayName : 'FragmentSelectGroupList',\r\n  /*\r\n  propTypes : {\r\n    store : PropTypes.object,\r\n    groupCaption : PropTypes.string,\r\n    groupOptions : PropTypes.array,\r\n    listCaption : PropTypes.string\r\n  },\r\n  */\r\n\r\n  getInitialState(){\r\n    this.groupCaption = null;\r\n    this.listCaption = null;\r\n    return {\r\n       listOptions : []\r\n    }\r\n  },\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props){\r\n      if (nextProps.groupOptions !== this.props.groupOptions){\r\n          this.groupCaption = null;\r\n          this.listCaption = null;\r\n          this.setState({listOptions: []});\r\n      } else {\r\n        if (this.groupCaption){\r\n          const listOptions = this.props.store.getWatchListsByGroup(this.groupCaption);\r\n          if (listOptions !== this.state.listOptions)\r\n            this.listCaption = null;\r\n            this.setState({listOptions});\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  _handlerSelectGroup(item){\r\n    if (item && item.caption){\r\n      this.groupCaption = item.caption;\r\n      if (item.lists){\r\n        this.setState({listOptions : item.lists})\r\n      }  else {\r\n        this.setState({listOptions : []})\r\n      }\r\n    } else {\r\n      this.groupCaption = null;\r\n    }\r\n  },\r\n\r\n  _handlerSelectList(item){\r\n     this.listCaption = (item && item.caption) ? item.caption : null;\r\n  },\r\n\r\n  render(){\r\n    const {groupCaption, groupOptions, listCaption} = this.props\r\n        , {listOptions} = this.state;\r\n    return (\r\n      <div>\r\n         <RowInputSelect\r\n           caption={groupCaption}\r\n           options={groupOptions}\r\n           onSelect={this._handlerSelectGroup}\r\n         />\r\n         <RowInputSelect\r\n           caption={listCaption}\r\n           options={listOptions}\r\n           onSelect={this._handlerSelectList}\r\n         />\r\n      </div>\r\n    );\r\n  },\r\n\r\n  getValue(){\r\n    return {captionGroup: this.groupCaption, captionList: this.listCaption}\r\n  },\r\n  setValueNull(){\r\n    this.groupCaption = null;\r\n    this.listCaption = null;\r\n  }\r\n});\r\n\r\nexport default FragmentSelectGroupList\r\n"]}