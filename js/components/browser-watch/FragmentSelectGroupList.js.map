{"version":3,"sources":["../../../src/components/browser-watch/FragmentSelectGroupList.jsx"],"names":["FragmentSelectGroupList","props","groupCaption","listCaption","state","listOptions","UNSAFE_componentWillReceiveProps","nextProps","groupOptions","setState","store","getWatchListsByGroup","_handlerSelectGroup","item","caption","lists","_handlerSelectList","render","getValue","captionGroup","captionList","setValueNull","Component"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;;;AAFA;IAIMA,uB;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,mCAAYC,KAAZ,EAAkB;AAAA;;AAChB,kCAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,IAApB;AACA,UAAKC,WAAL,GAAmB,IAAnB;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AALgB;AAQjB;;;;SAEDC,gC,GAAA,0CAAiCC,SAAjC,EAA2C;AACzC,QAAIA,SAAS,KAAK,KAAKN,KAAvB,EAA6B;AAC3B,UAAIM,SAAS,CAACC,YAAV,KAA2B,KAAKP,KAAL,CAAWO,YAA1C,EAAuD;AACnD,aAAKN,YAAL,GAAoB,IAApB;AACA,aAAKC,WAAL,GAAmB,IAAnB;AACA,aAAKM,QAAL,CAAc;AAACJ,UAAAA,WAAW,EAAE;AAAd,SAAd;AACH,OAJD,MAIO;AACL,YAAI,KAAKH,YAAT,EAAsB;AACpB,cAAMG,WAAW,GAAG,KAAKJ,KAAL,CAAWS,KAAX,CAAiBC,oBAAjB,CAAsC,KAAKT,YAA3C,CAApB;AACA,cAAIG,WAAW,KAAK,KAAKD,KAAL,CAAWC,WAA/B,EACE,KAAKF,WAAL,GAAmB,IAAnB;AACA,eAAKM,QAAL,CAAc;AAACJ,YAAAA,WAAW,EAAXA;AAAD,WAAd;AACH;AACF;AACF;AACF,G;;SAEDO,mB,GAAA,6BAAoBC,IAApB,EAAyB;AACvB,QAAIA,IAAI,IAAIA,IAAI,CAACC,OAAjB,EAAyB;AACvB,WAAKZ,YAAL,GAAoBW,IAAI,CAACC,OAAzB;;AACA,UAAID,IAAI,CAACE,KAAT,EAAe;AACb,aAAKN,QAAL,CAAc;AAACJ,UAAAA,WAAW,EAAGQ,IAAI,CAACE;AAApB,SAAd;AACD,OAFD,MAEQ;AACN,aAAKN,QAAL,CAAc;AAACJ,UAAAA,WAAW,EAAG;AAAf,SAAd;AACD;AACF,KAPD,MAOO;AACL,WAAKH,YAAL,GAAoB,IAApB;AACD;AACF,G;;SAEDc,kB,GAAA,4BAAmBH,IAAnB,EAAwB;AACrB,SAAKV,WAAL,GAAoBU,IAAI,IAAIA,IAAI,CAACC,OAAd,IAA0B,IAA7C;AACF,G;;SAEDG,M,GAAA,kBAAQ;AAAA,sBAC4C,KAAKhB,KADjD;AAAA,QACCC,YADD,eACCA,YADD;AAAA,QACeM,YADf,eACeA,YADf;AAAA,QAC6BL,WAD7B,eAC6BA,WAD7B;AAAA,QAECE,WAFD,GAEgB,KAAKD,KAFrB,CAECC,WAFD;AAGN,wBACE;AAAA,8BACG,qBAAC,0BAAD;AACE,QAAA,OAAO,EAAEH,YADX;AAEE,QAAA,OAAO,EAAEM,YAFX;AAGE,QAAA,QAAQ,EAAE,KAAKI;AAHjB,QADH,eAMG,qBAAC,0BAAD;AACE,QAAA,OAAO,EAAET,WADX;AAEE,QAAA,OAAO,EAAEE,WAFX;AAGE,QAAA,QAAQ,EAAE,KAAKW;AAHjB,QANH;AAAA,MADF;AAcD,G;;SAEDE,Q,GAAA,oBAAU;AACR,WAAO;AACLC,MAAAA,YAAY,EAAE,KAAKjB,YADd;AAELkB,MAAAA,WAAW,EAAE,KAAKjB;AAFb,KAAP;AAID,G;;SACDkB,Y,GAAA,wBAAc;AACZ,SAAKnB,YAAL,GAAoB,IAApB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACD,G;;;EAlFmCmB,gB;;eAqFvBtB,uB","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types'\r\n\r\nimport RowInputSelect from './RowInputSelect';\r\n\r\nclass FragmentSelectGroupList extends Component {\r\n  /*\r\n  propTypes : {\r\n    store : PropTypes.object,\r\n    groupCaption : PropTypes.string,\r\n    groupOptions : PropTypes.array,\r\n    listCaption : PropTypes.string\r\n  },\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.groupCaption = null;\r\n    this.listCaption = null;\r\n\r\n    this.state = {\r\n      listOptions: []\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props){\r\n      if (nextProps.groupOptions !== this.props.groupOptions){\r\n          this.groupCaption = null;\r\n          this.listCaption = null;\r\n          this.setState({listOptions: []});\r\n      } else {\r\n        if (this.groupCaption){\r\n          const listOptions = this.props.store.getWatchListsByGroup(this.groupCaption);\r\n          if (listOptions !== this.state.listOptions)\r\n            this.listCaption = null;\r\n            this.setState({listOptions});\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _handlerSelectGroup(item){\r\n    if (item && item.caption){\r\n      this.groupCaption = item.caption;\r\n      if (item.lists){\r\n        this.setState({listOptions : item.lists})\r\n      }  else {\r\n        this.setState({listOptions : []})\r\n      }\r\n    } else {\r\n      this.groupCaption = null;\r\n    }\r\n  }\r\n\r\n  _handlerSelectList(item){\r\n     this.listCaption = (item && item.caption) || null\r\n  }\r\n\r\n  render(){\r\n    const {groupCaption, groupOptions, listCaption} = this.props\r\n        , {listOptions} = this.state;\r\n    return (\r\n      <div>\r\n         <RowInputSelect\r\n           caption={groupCaption}\r\n           options={groupOptions}\r\n           onSelect={this._handlerSelectGroup}\r\n         />\r\n         <RowInputSelect\r\n           caption={listCaption}\r\n           options={listOptions}\r\n           onSelect={this._handlerSelectList}\r\n         />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getValue(){\r\n    return {\r\n      captionGroup: this.groupCaption,\r\n      captionList: this.listCaption\r\n    };\r\n  }\r\n  setValueNull(){\r\n    this.groupCaption = null;\r\n    this.listCaption = null;\r\n  }\r\n}\r\n\r\nexport default FragmentSelectGroupList\r\n"],"file":"FragmentSelectGroupList.js"}