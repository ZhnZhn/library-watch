{"version":3,"sources":["../../../src/components/browser-watch/GroupDeletePane.jsx"],"names":["Styles","COMMAND_DIV","cursor","float","marginTop","marginBottom","marginRight","GroupDeletePane","createClass","displayName","propTypes","store","PropTypes","object","actionCompleted","string","forActionType","msgOnNotSelect","func","onDelete","onClose","getInitialState","props","caption","groupOptions","getWatchGroups","validationMessages","componentDidMount","unsubscribe","listen","_onStore","componentWillUnmount","actionType","data","_handlerClear","setState","_handlerSelectGroup","item","state","length","_handlerDeleteGroup","render"],"mappings":"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","file":"GroupDeletePane.js","sourcesContent":["import React from 'react';\r\n\r\nimport RowInputSelect from './RowInputSelect';\r\nimport ValidationMessagesFragment from '../zhnMoleculs/ValidationMessagesFragment';\r\nimport ToolBarButton from '../header/ToolBarButton';\r\n\r\nconst Styles = {\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n}\r\n\r\nconst GroupDeletePane = React.createClass({\r\n  displayName : 'GroupDeletePane',\r\n  propTypes : {\r\n    store : React.PropTypes.object,\r\n    actionCompleted : React.PropTypes.string,\r\n    forActionType : React.PropTypes.string,\r\n    msgOnNotSelect : React.PropTypes.func,\r\n    onDelete : React.PropTypes.func,\r\n    onClose : React.PropTypes.func\r\n  },\r\n  getInitialState(){\r\n    const {store} = this.props;\r\n    this.caption = null;\r\n    return {\r\n      groupOptions : store.getWatchGroups(),\r\n      validationMessages : []\r\n    }\r\n  },\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore);\r\n  },\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  },\r\n  _onStore(actionType, data){\r\n    const {actionCompleted, forActionType, store} = this.props;\r\n    if (actionType === actionCompleted) {\r\n      if (data.forActionType === forActionType){\r\n        this._handlerClear();\r\n      }\r\n      this.setState({groupOptions : store.getWatchGroups()})\r\n    }\r\n  },\r\n\r\n  _handlerSelectGroup(item){\r\n     if (item && item.caption){\r\n       this.caption = item.caption;\r\n     } else {\r\n       this.caption = null;\r\n     }\r\n  },\r\n\r\n  _handlerClear(){\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({validationMessages:[]})\r\n    }\r\n  },\r\n\r\n  _handlerDeleteGroup(){\r\n     if (this.caption){\r\n       this.props.onDelete({caption: this.caption})\r\n     } else {\r\n       this.setState({validationMessages:[this.props.msgOnNotSelect('Group')]});\r\n     }\r\n  },\r\n\r\n  render(){\r\n      const {onClose} = this.props\r\n          , {groupOptions, validationMessages} = this.state;\r\n\r\n      return (\r\n         <div>\r\n           <RowInputSelect\r\n             caption={'Group:'}\r\n             options={groupOptions}\r\n             //isUpdateOptions={true}\r\n             onSelect={this._handlerSelectGroup}\r\n           />\r\n           <ValidationMessagesFragment\r\n             validationMessages={validationMessages}\r\n           />\r\n           <div style={Styles.COMMAND_DIV}>\r\n             <ToolBarButton\r\n               type=\"TypeC\"\r\n               caption=\"Delete\"\r\n               onClick={this._handlerDeleteGroup}\r\n             />\r\n            <ToolBarButton\r\n               type=\"TypeC\"\r\n               caption=\"Close\"\r\n               onClick={onClose}\r\n             />\r\n           </div>\r\n        </div>\r\n    );\r\n  }\r\n});\r\n\r\nexport default GroupDeletePane\r\n"]}