{"version":3,"sources":["../../../src/components/browser-watch/GroupDeletePane.jsx"],"names":["S","COMMAND_DIV","cursor","marginTop","marginBottom","marginRight","GroupDeletePane","props","_onStore","actionType","data","actionCompleted","forActionType","store","_handlerClear","setState","groupOptions","getWatchGroups","_handlerSelectGroup","item","caption","state","validationMessages","length","_handlerDeleteGroup","onDelete","msgOnNotSelect","componentDidMount","unsubscribe","listen","componentWillUnmount","render","onClose","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//import PropTypes from 'prop-types'\r\n\r\nimport RowInputSelect from './RowInputSelect';\r\nimport ValidationMessagesFragment from '../zhn-moleculs/ValidationMessagesFragment';\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nconst S = {\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n}\r\n\r\nclass GroupDeletePane extends Component {\r\n\r\n  /*\r\n  statis propTypes = {\r\n    store : PropTypes.object,\r\n    actionCompleted : PropTypes.string,\r\n    forActionType : PropTypes.string,\r\n    msgOnNotSelect : PropTypes.func,\r\n    onDelete : PropTypes.func,\r\n    onClose : PropTypes.func\r\n  }\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    const { store } = props;\r\n    this.caption = null;\r\n    this.state = {\r\n      groupOptions: store.getWatchGroups(),\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props\r\n      .store.listen(this._onStore);\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    const {actionCompleted, forActionType, store} = this.props;\r\n    if (actionType === actionCompleted) {\r\n      if (data.forActionType === forActionType){\r\n        this._handlerClear();\r\n      }\r\n      this.setState({ groupOptions: store.getWatchGroups() })\r\n    }\r\n  }\r\n\r\n  _handlerSelectGroup = (item) => {\r\n     if (item && item.caption){\r\n       this.caption = item.caption;\r\n     } else {\r\n       this.caption = null;\r\n     }\r\n  }\r\n\r\n  _handlerClear = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({ validationMessages: [] })\r\n    }\r\n  }\r\n\r\n  _handlerDeleteGroup = () => {\r\n     if (this.caption){\r\n       this.props.onDelete({caption: this.caption})\r\n     } else {\r\n       this.setState({ validationMessages: [this.props.msgOnNotSelect('Group')] });\r\n     }\r\n  }\r\n\r\n  render(){\r\n      const {onClose} = this.props\r\n          , {groupOptions, validationMessages} = this.state;\r\n\r\n      return (\r\n         <div>\r\n           <RowInputSelect\r\n             caption=\"Group\"\r\n             options={groupOptions}\r\n             //isUpdateOptions={true}\r\n             onSelect={this._handlerSelectGroup}\r\n           />\r\n           <ValidationMessagesFragment\r\n             validationMessages={validationMessages}\r\n           />\r\n           <div style={S.COMMAND_DIV}>\r\n             <FlatButton\r\n               isPrimary={true}\r\n               caption=\"Delete\"\r\n               timeout={0}\r\n               onClick={this._handlerDeleteGroup}\r\n             />\r\n             <FlatButton\r\n               caption=\"Close\"\r\n               timeout={0}\r\n               onClick={onClose}\r\n             />\r\n           </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupDeletePane\r\n"],"file":"GroupDeletePane.js"}