{"version":3,"sources":["../../../src/components/browser-watch/GroupEditPane.jsx"],"names":["S","COMMAND_DIV","cursor","float","marginTop","marginBottom","marginRight","GroupEditPane","props","store","captionFrom","state","groupOptions","getWatchGroups","validationMessages","unsubscribe","listen","_onStore","onClose","_handlerSelectGroup","_refInputText","_handlerRename","_handlerClear","Component","actionType","data","actionCompleted","actionFailed","forActionType","setState","messages","item","caption","inputText","setValue","length","captionTo","getValue","onRename","msg","push","msgOnNotSelect","msgOnIsEmptyName","c"],"mappings":"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","file":"GroupEditPane.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types'\r\n\r\nimport RowInputSelect from './RowInputSelect';\r\nimport RowInputText from './RowInputText';\r\nimport ValidationMessagesFragment from '../zhnMoleculs/ValidationMessagesFragment';\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nconst S = {\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n};\r\n\r\nclass GroupEditPane extends Component {\r\n  /*\r\n  statis propTypes = {\r\n    store : PropTypes.object,\r\n    actionCompleted : PropTypes.string,\r\n    actionFailed : PropTypes.string,\r\n    forActionType : PropTypes.string,\r\n    msgOnIsEmptyName : PropTypes.func,\r\n    msgOnNotSelect : PropTypes.func,\r\n    onRename : PropTypes.func,\r\n    onClose : PropTypes.func\r\n  },\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    const { store } = props;\r\n    this.captionFrom = null;\r\n    this.state = {\r\n      groupOptions: store.getWatchGroups(),\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props\r\n      .store.listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    const {actionCompleted, actionFailed, forActionType, store} = this.props;\r\n    if (actionType === actionCompleted){\r\n      if (data.forActionType === forActionType){\r\n        this._handlerClear();\r\n      }\r\n      this.setState({groupOptions : store.getWatchGroups()});\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n      this.setState({validationMessages: data.messages});\r\n    }\r\n  }\r\n\r\n  _handlerSelectGroup = (item) => {\r\n     if (item && item.caption){\r\n       this.captionFrom = item.caption;\r\n     } else {\r\n       this.captionFrom = null;\r\n     }\r\n  }\r\n\r\n  _handlerClear = () => {\r\n    this.inputText.setValue('');\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({validationMessages:[]});\r\n    }\r\n  }\r\n  _handlerRename = () => {\r\n     const captionTo = this.inputText.getValue();\r\n     if (captionTo && this.captionFrom) {\r\n       this.props.onRename({captionFrom: this.captionFrom, captionTo});\r\n     } else {\r\n       const msg = [];\r\n       if (!this.captionFrom){\r\n         msg.push(this.props.msgOnNotSelect('Group From'));\r\n       }\r\n       if (!captionTo){\r\n         msg.push(this.props.msgOnIsEmptyName('Group To'));\r\n       }\r\n       this.setState({validationMessages: msg});\r\n     }\r\n  }\r\n\r\n  _refInputText = c => this.inputText = c\r\n\r\n  render(){\r\n    const { onClose } = this.props\r\n        , { groupOptions, validationMessages} = this.state;\r\n\r\n    return (\r\n       <div>\r\n          <RowInputSelect\r\n             caption=\"Group From\"\r\n             options={groupOptions}\r\n             onSelect={this._handlerSelectGroup}\r\n          />\r\n         <RowInputText\r\n           ref={this._refInputText}\r\n           caption=\"Group To\"\r\n         />\r\n         <ValidationMessagesFragment\r\n           validationMessages={validationMessages}\r\n         />\r\n         <div style={S.COMMAND_DIV}>\r\n           <FlatButton\r\n             isPrimary={true}\r\n             caption=\"Rename\"\r\n             timeout={0}\r\n             onClick={this._handlerRename}\r\n           />\r\n           <FlatButton\r\n             caption=\"Clear\"\r\n             timeout={0}\r\n             onClick={this._handlerClear}\r\n           />\r\n          <FlatButton\r\n             caption=\"Close\"\r\n             timeout={0}\r\n             onClick={onClose}\r\n          />\r\n         </div>\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupEditPane\r\n"]}