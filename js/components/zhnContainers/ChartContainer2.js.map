{"version":3,"sources":["../../../src/components/zhnContainers/ChartContainer2.jsx"],"names":["CHILD_MARGIN","styles","rootDiv","position","backgroundColor","padding","width","height","minHeight","marginLeft","borderRadius","boxShadow","overflowY","overflowX","hrzResize","top","right","scrollDiv","paddingRight","chartDiv","isInArray","arr","value","len","length","i","compActions","ChartActionTypes","SHOW_CHART","LOAD_STOCK_COMPLETED","CLOSE_CHART","ChartContainer2","props","_onStore","actionType","data","chartType","setState","ComponentActionTypes","CLOSE_CHART_CONTAINER_2","_handleHide","browserType","onCloseContainer","isShow","_renderCharts","state","configs","map","item","index","childMargin","unsubscribe","Store","listen","getConfigs","caption","_styleOpen","display","_classOpen","undefined","Object","assign","Component"],"mappings":"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","file":"ChartContainer2.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport Store from '../../flux/stores/AppStore';\r\nimport { ChartActionTypes } from '../../flux/actions/ChartActions';\r\nimport { ComponentActionTypes } from '../../flux/actions/ComponentActions';\r\n\r\nimport CaptionRow from '../zhnAtoms/CaptionRow';\r\nimport SvgHrzResize from '../zhnMoleculs/SvgHrzResize';\r\n\r\nimport ScrollPane from '../zhnAtoms/ScrollPane';\r\n\r\nconst CHILD_MARGIN = 36;\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    position: 'relative',\r\n    backgroundColor: '#4D4D4D',\r\n    padding: '0px 0px 3px 0px',\r\n    //paddingTop : '5px',\r\n    //paddingLeft : '5px',\r\n    //border: 'solid 3px #232F3B',\r\n    width: '635px',\r\n    height: 'calc(100vh - 71px)',\r\n    minHeight: '500px',\r\n    marginLeft: '16px',\r\n    borderRadius: '4px',\r\n    boxShadow: '1px 4px 6px 1px rgba(0, 0, 0, 0.6)',\r\n    overflowY: 'hidden',\r\n    overflowX : 'hidden'\r\n  },\r\n  hrzResize : {\r\n    position : 'absolute',\r\n    top : '30px',\r\n    right: '0'\r\n  },\r\n  scrollDiv : {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: '10px'\r\n  },\r\n  chartDiv : {\r\n    overflowY: 'auto',\r\n    height : '680px'\r\n  }\r\n};\r\n\r\nconst isInArray = function(arr=[], value){\r\n  const len = arr.length;\r\n  let i=0;\r\n  for (; i<len; i++){\r\n    if (arr[i] === value){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst compActions = [\r\n  ChartActionTypes.SHOW_CHART,\r\n  ChartActionTypes.LOAD_STOCK_COMPLETED,\r\n  ChartActionTypes.CLOSE_CHART\r\n];\r\n\r\n\r\nclass ChartContainer2 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    browserType: PropTypes.string,\r\n    chartType: PropTypes.string,\r\n    onCloseContainer: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.childMargin = CHILD_MARGIN\r\n    this.state = {}\r\n  }\r\n\r\n   componentWillMount(){\r\n     this.unsubscribe = Store.listen(this._onStore);\r\n     this.setState(Store.getConfigs(this.props.chartType));\r\n   }\r\n   componentWillUnmount(){\r\n     this.unsubscribe();\r\n   }\r\n\r\n   _onStore = (actionType, data) => {\r\n      if (isInArray(compActions, actionType)) {\r\n        if (data && data.chartType === this.props.chartType){\r\n          this.setState(data);\r\n        }\r\n      } else if (actionType === ComponentActionTypes.CLOSE_CHART_CONTAINER_2){\r\n         if (data === this.props.chartType){\r\n           this._handleHide();\r\n         }\r\n      }\r\n   }\r\n\r\n   _handleHide = () => {\r\n      const { chartType, browserType, onCloseContainer } = this.props;\r\n      onCloseContainer(chartType, browserType);\r\n      this.setState({isShow: false});\r\n   }\r\n\r\n\r\n   _renderCharts = () => {\r\n      return this.state.configs.map((item, index) => {\r\n        return item;\r\n      })\r\n   }\r\n\r\n   render(){\r\n    const  { caption } = this.props\r\n         , { isShow } = this.state\r\n         , _styleOpen = (isShow)\r\n               ? {display: 'inline-block'}\r\n               : {display: 'none'}\r\n         , _classOpen = (isShow) ? \"show-popup\" : undefined;\r\n\r\n     return(\r\n        <div\r\n           className={_classOpen}\r\n           style={Object.assign({},styles.rootDiv, _styleOpen)}\r\n        >\r\n          <CaptionRow\r\n             caption={caption}\r\n             onClose={this._handleHide}\r\n          >\r\n            <SvgHrzResize\r\n              minWidth={500}\r\n              maxWidth={1200}\r\n              comp={this}\r\n            />\r\n          </CaptionRow>\r\n\r\n          <ScrollPane style={styles.scrollDiv}>\r\n              {this._renderCharts()}\r\n          </ScrollPane>\r\n\r\n        </div>\r\n     )\r\n   }\r\n}\r\n\r\nexport default ChartContainer2\r\n"]}