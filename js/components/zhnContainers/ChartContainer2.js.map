{"version":3,"sources":["../../../src/components/zhnContainers/ChartContainer2.jsx"],"names":["CHILD_MARGIN","styles","rootDiv","backgroundColor","paddingTop","paddingLeft","borderRadius","border","position","width","height","hrzResize","top","right","scrollDiv","overflowY","paddingRight","chartDiv","isInArray","array","value","i","length","compActions","SHOW_CHART","LOAD_STOCK_COMPLETED","CLOSE_CHART","ChartContainer2","createClass","getInitialState","childMargin","componentWillMount","unsubscribe","listen","_onStore","setState","getConfigs","props","chartType","componentWillUnmount","actionType","data","CLOSE_CHART_CONTAINER_2","_handlerHide","browserType","onCloseContainer","isShow","renderCharts","state","configs","map","item","index","render","styleOpen","display","classOpen","Object","assign","caption"],"mappings":"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","file":"ChartContainer2.js","sourcesContent":["import React from 'react';\r\n//import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\n\r\nimport GitHubStore from '../../flux/stores/GitHubStore';\r\nimport { ChartActionTypes } from '../../flux/actions/ChartActions';\r\nimport { ComponentActionTypes } from '../../flux/actions/ComponentActions';\r\n\r\n\r\n\r\nimport CaptionRow from '../zhnAtoms/CaptionRow';\r\nimport SvgHrzResize from '../zhnMoleculs/SvgHrzResize';\r\n\r\nimport ScrollPane from '../zhnAtoms/ScrollPane';\r\n\r\n\r\nconst CHILD_MARGIN = 36;\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    backgroundColor: '#4D4D4D',\r\n    paddingTop : '5px',\r\n    paddingLeft : '5px',\r\n    borderRadius: '10px',\r\n    border: 'solid 3px #232F3B',\r\n    position: 'relative',\r\n    width: '635px',\r\n    /* eslint-disable no-dupe-keys */\r\n    height: '730px',\r\n    height: 'calc(100vh - 71px)',\r\n    /* eslint-enable no-dupe-keys */\r\n    overflowY: 'hidden',\r\n    marginLeft: '10px',\r\n    overflowX : 'hidden'\r\n  },\r\n  hrzResize : {\r\n    position : 'absolute',\r\n    top : '30px',\r\n    right: '0'\r\n  },\r\n  scrollDiv : {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: '10px'\r\n  },\r\n  chartDiv : {\r\n    overflowY: 'auto',\r\n    height : '680px'\r\n  }\r\n};\r\n\r\nconst isInArray = function(array, value){\r\n  for (var i=0; i<array.length; i++){\r\n    if (array[i] === value){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst compActions = [\r\n  ChartActionTypes.SHOW_CHART,\r\n  ChartActionTypes.LOAD_STOCK_COMPLETED,\r\n  ChartActionTypes.CLOSE_CHART\r\n];\r\n\r\nconst ChartContainer2 = React.createClass({\r\n  getInitialState(){\r\n    this.childMargin = CHILD_MARGIN;\r\n    return {}\r\n  },\r\n\r\n   componentWillMount(){\r\n     this.unsubscribe = GitHubStore.listen(this._onStore);\r\n     this.setState(GitHubStore.getConfigs(this.props.chartType));\r\n   },\r\n   componentWillUnmount(){\r\n     this.unsubscribe();\r\n   },\r\n\r\n   _onStore(actionType, data){\r\n      if (isInArray(compActions, actionType)) {\r\n        if (data && data.chartType === this.props.chartType){\r\n          this.setState(data);\r\n        }\r\n      } else if (actionType === ComponentActionTypes.CLOSE_CHART_CONTAINER_2){\r\n         if (data === this.props.chartType){\r\n           this._handlerHide();\r\n         }\r\n      }\r\n   },\r\n\r\n   _handlerHide(){\r\n      const { chartType, browserType, onCloseContainer } = this.props;\r\n      onCloseContainer(chartType, browserType);\r\n      this.setState({isShow: false});\r\n   },\r\n\r\n\r\n   renderCharts(){\r\n      return this.state.configs.map((item, index) => {\r\n        return item;\r\n      })\r\n   },\r\n\r\n   render(){\r\n     /*\r\n     const transitionOption = {\r\n             transitionName : \"scaleY\",\r\n             transitionEnterTimeout : 400,\r\n             transitionLeave : false\r\n           }\r\n    */\r\n    const styleOpen = this.state.isShow ? {display: 'inline-block'} : {display: 'none'}\r\n         , classOpen = this.state.isShow ? \"show-popup\" : null;\r\n\r\n     return(\r\n        <div\r\n           className={classOpen}\r\n           style={Object.assign({},styles.rootDiv, styleOpen)}\r\n        >\r\n          <CaptionRow\r\n             caption={this.props.caption}\r\n             onClose={this._handlerHide}\r\n          >\r\n            <SvgHrzResize\r\n              minWidth={500}\r\n              maxWidth={1200}\r\n              comp={this}\r\n            />\r\n          </CaptionRow>\r\n\r\n          <ScrollPane style={styles.scrollDiv}>\r\n              {this.renderCharts()}\r\n          </ScrollPane>\r\n\r\n        </div>\r\n     )\r\n   }\r\n})\r\n\r\nexport default ChartContainer2;\r\n"]}