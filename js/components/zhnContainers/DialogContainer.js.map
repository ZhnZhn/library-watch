{"version":3,"sources":["../../../src/components/zhnContainers/DialogContainer.jsx"],"names":["DialogContainer","createClass","getInitialState","isShow","inits","shows","data","dialogs","currentDialog","componentDidMount","unsubscribe","props","store","listen","_onStore","componentWillUnmount","actionType","option","showAction","routerDialog","type","modalDialogType","state","setState","push","comp","_handlerClose","_renderDialogs","map","dialog","index","createElement","key","onClose","bind","render"],"mappings":"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","file":"DialogContainer.js","sourcesContent":["import React from 'react';\r\n\r\nimport ModalDialogContainer from './ModalDialogContainer';\r\n//import { ComponentActionTypes } from '../../flux/actions/ComponentActions';\r\n\r\n//import RouterModalDialog from '../dialogs/RouterModalDialog';\r\n//const _hmDialogs = RouterModalDialog;\r\n\r\nconst DialogContainer = React.createClass({\r\n  getInitialState(){\r\n    return {\r\n      isShow : false,\r\n      inits : {},\r\n      shows : {},\r\n      data : {},\r\n      dialogs : [],\r\n      currentDialog : null\r\n    }\r\n  },\r\n\r\n  componentDidMount: function(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore);\r\n  },\r\n  componentWillUnmount: function(){\r\n    this.unsubscribe();\r\n  },\r\n  _onStore(actionType, option){\r\n     const { showAction, routerDialog } = this.props;\r\n     if (actionType === showAction){\r\n       const { modalDialogType:type } = option\r\n           , { inits, shows, data, dialogs } = this.state;\r\n\r\n       data[type] = option;\r\n       shows[type] = true;\r\n       if (inits[type]){\r\n         this.setState({ isShow: true, currentDialog: type, shows, data })\r\n       } else {\r\n         dialogs.push({ type : type, comp : routerDialog[type] });\r\n         inits[type] = true\r\n         this.setState({ isShow: true, currentDialog: type, shows, data, dialogs });\r\n       }\r\n     }\r\n  },\r\n\r\n  _handlerClose(type){\r\n    this.state.shows[type] = false;\r\n    this.setState({isShow : false, currentDialog: null, shows : this.state.shows})\r\n  },\r\n\r\n  _renderDialogs(){\r\n    const {store} = this.props\r\n        , {shows, data} = this.state;\r\n\r\n    return this.state.dialogs.map((dialog, index) => {\r\n      const {type, comp} = dialog\r\n      return React.createElement(comp, {\r\n           key: type,\r\n           isShow: shows[type],\r\n           data: data[type],\r\n           store : store,\r\n           onClose: this._handlerClose.bind(null, type)})\r\n    })\r\n  },\r\n  render(){\r\n    const {isShow, currentDialog} = this.state;\r\n\r\n    return (\r\n      <ModalDialogContainer\r\n          isShow={isShow}\r\n          onClose={this._handlerClose.bind(null, currentDialog)}\r\n      >\r\n         {this._renderDialogs()}\r\n     </ModalDialogContainer>\r\n    )\r\n  }\r\n});\r\n\r\nexport default DialogContainer\r\n"]}