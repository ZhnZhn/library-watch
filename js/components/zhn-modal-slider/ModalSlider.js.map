{"version":3,"sources":["../../../src/components/zhn-modal-slider/ModalSlider.jsx"],"names":["PERIOD_MS","S","SHOW_HIDE","position","overflow","PAGES","display","flexFlow","alignItems","overflowX","transition","_getTranslateX","node","_prevStr","style","transform","substr","replace","parseInt","ModalSlider","props","hPrevPage","pageNumber","setState","prevState","pageCurrent","_direction","_addPage","pages","id","title","model","onClose","push","_pageStyle","baseTitleCl","itemCl","hNextPage","_max","length","key","splice","_crTransform","_WIDTH","_PAGE_WIDTH","dX","_pagesNode","_prevInt","_refPages","n","_renderPages","state","map","Page","index","React","cloneElement","INIT_ID","pageWidth","maxPages","_pW","_maxP","bind","_pagesStyle","width","render","isShow","className","rootStyle","_transform","_showHideStyle","_divStyle","Component","defaultProps","p0"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport throttleOnce from '../../utils/throttleOnce'\r\n\r\nimport ModalPane from '../zhn-moleculs/ModalPane';\r\nimport ShowHide from '../zhn-atoms/ShowHide';\r\n\r\nimport MenuPage from './MenuPage'\r\n\r\nconst PERIOD_MS = 750;\r\n\r\nconst S = {\r\n  SHOW_HIDE: {\r\n    position: 'absolute',\r\n    overflow: 'hidden'\r\n  },\r\n  PAGES: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    alignItems: 'flex-start',\r\n    overflowX: 'hidden',\r\n    transition: `all ${PERIOD_MS}ms ease-out`\r\n  }\r\n};\r\n\r\nconst _getTranslateX = (node) => {\r\n  const _prevStr = node\r\n    .style.transform\r\n    .substr(11)\r\n    .replace('px', '')\r\n    .replace(')', '');\r\n  return parseInt(_prevStr, 10);\r\n}\r\n\r\nclass ModalSlider extends Component {\r\n  /*\r\n  static propTypes = {\r\n    rootStyle: PropTypes.object,\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n\r\n    pageWidth: PropTypes.number,\r\n    maxPages: PropTypes.number,\r\n    model: PropTypes.object,\r\n\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  static defaultProps = {\r\n    INIT_ID: 'p0',\r\n    model: {\r\n      pageWidth: 100,\r\n      maxPages: 2,\r\n      p0: []\r\n    }\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    const {\r\n      INIT_ID,\r\n      pageWidth, maxPages,\r\n      model,\r\n      onClose\r\n    } = props\r\n    , _pW = model.pageWidth || pageWidth\r\n    , _maxP = model.maxPages || maxPages\r\n    , pages = [];\r\n\r\n    this.hNextPage = throttleOnce(\r\n      this.hNextPage.bind(this)\r\n    )\r\n    this.hPrevPage = throttleOnce(\r\n      this.hPrevPage.bind(this)\r\n    )\r\n\r\n    this._PAGE_WIDTH = _pW\r\n    this._pagesStyle = {\r\n      width: `${_maxP*_pW}px`\r\n    }\r\n    this._pageStyle = {\r\n      width: `${_pW}px`,\r\n    }\r\n\r\n    pages.push((\r\n      <MenuPage\r\n        key={INIT_ID}\r\n        style={this._pageStyle}\r\n        items={model[INIT_ID]}\r\n        baseTitleCl={model.baseTitleCl}\r\n        itemCl={model.itemCl}\r\n        onNextPage={this.hNextPage}\r\n        onClose={onClose}\r\n      />\r\n    ))\r\n\r\n    this._direction = 0\r\n\r\n    this.state = {\r\n      pageCurrent: 1,\r\n      pages\r\n    }\r\n  }\r\n\r\n\r\n  hPrevPage = (pageNumber) => {\r\n    this.setState(prevState => {\r\n      prevState.pageCurrent = pageNumber - 1\r\n      this._direction = -1\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  _addPage = (pages, id, title) => {\r\n    const {\r\n            model,\r\n            onClose\r\n          } = this.props;\r\n    pages.push((\r\n      <MenuPage\r\n        key={id}\r\n        style={this._pageStyle}\r\n        title={title}\r\n        items={model[id]}\r\n        baseTitleCl={model.baseTitleCl}\r\n        itemCl={model.itemCl}\r\n        onPrevPage={this.hPrevPage}\r\n        onClose={onClose}\r\n      />\r\n    ))\r\n  }\r\n\r\n  hNextPage = (id, title, pageNumber) => {\r\n    this.setState(prevState => {\r\n       const { pages } = prevState\r\n          , _max = pages.length-1;\r\n\r\n      if ( (_max+1) > pageNumber) {\r\n        if (pages[pageNumber] && pages[pageNumber].key !== id) {\r\n           if (pageNumber>0) {\r\n             prevState.pages.splice(pageNumber)\r\n           } else {\r\n             prevState.pages = []\r\n           }\r\n           this._addPage(prevState.pages, id, title)\r\n        }\r\n      } else {\r\n        this._addPage(pages, id, title)\r\n      }\r\n\r\n      prevState.pageCurrent = pageNumber + 1\r\n      //prevState.direction = 1\r\n      this._direction = 1\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  _crTransform = () => {\r\n    const _WIDTH = this._PAGE_WIDTH;\r\n    let dX = '0';\r\n    if (this._direction !== 0 && this._pagesNode) {\r\n      const _prevInt = _getTranslateX(this._pagesNode);\r\n      dX = this._direction === 1\r\n         ? _prevInt-_WIDTH\r\n         : _prevInt+_WIDTH\r\n      this._direction = 0\r\n    } else if ( this._direction === 0 && this._pagesNode) {\r\n      dX = _getTranslateX(this._pagesNode)\r\n    }\r\n\r\n    return { transform: `translateX(${dX}px)` };\r\n  }\r\n\r\n  _refPages = n => this._pagesNode = n\r\n\r\n  _renderPages = () => {\r\n    const { pages, pageCurrent } = this.state;\r\n    return pages.map((Page, index) => {\r\n      return React.cloneElement(Page, {\r\n        pageCurrent,\r\n        //pageNumber: index,\r\n        pageNumber: index + 1,\r\n      });\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { _pagesStyle, _pageStyle } = this\r\n        , { isShow, className, rootStyle, style, onClose } = this.props\r\n        , _transform = this._crTransform()\r\n        , _showHideStyle = {\r\n            ...style,\r\n            ...S.SHOW_HIDE,\r\n            ..._pageStyle\r\n          }\r\n        , _divStyle = {\r\n             ...S.PAGES,\r\n             ..._pagesStyle,\r\n             ..._transform\r\n           };    \r\n    return (\r\n      <ModalPane\r\n        isShow={isShow}\r\n        style={rootStyle}\r\n        onClose={onClose}\r\n      >\r\n        <ShowHide\r\n          className={className}\r\n          style={_showHideStyle}\r\n          isShow={isShow}\r\n        >\r\n          <div\r\n            ref={this._refPages}\r\n            style={_divStyle}\r\n          >\r\n            {this._renderPages()}\r\n          </div>\r\n        </ShowHide>\r\n      </ModalPane>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalSlider\r\n"],"file":"ModalSlider.js"}