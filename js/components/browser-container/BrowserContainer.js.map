{"version":3,"sources":["../../../src/components/browser-container/BrowserContainer.jsx"],"names":["CL","BrowserContainer","state","isDoubleWatch","elBrowsers","_onStore","actionType","data","props","initBrowserAction","toggleWatchDbBrowserAction","unshift","setState","_renderEl","map","el","React","cloneElement","componentDidMount","store","unsubscribe","listen","componentWillUnmount","render","showBrowserAction","updateWatchAction","initDialogAction","showDialogAction","_doubleWatch","BrowserType","WATCH_LIST","Component"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AAEA;;AACA;;AALA;AAQA,IAAMA,EAAE,GAAG,eAAX;;IAEMC,gB;;;;;;;;;;;;;UAcJC,K,GAAQ;AACNC,MAAAA,aAAa,EAAG,KADV;AAENC,MAAAA,UAAU,EAAG;AAFP,K;;UAYRC,Q,GAAW,UAACC,UAAD,EAAaC,IAAb,EAAsB;AAAA,wBAC4B,MAAKC,KADjC;AAAA,UACtBC,iBADsB,eACtBA,iBADsB;AAAA,UACHC,0BADG,eACHA,0BADG;;AAE9B,UAAIJ,UAAU,KAAKG,iBAAnB,EAAqC;AACnC,cAAKP,KAAL,CAAWE,UAAX,CAAsBO,OAAtB,CAA8BJ,IAA9B;;AACA,cAAKK,QAAL,CAAc,MAAKV,KAAnB;AACD,OAHD,MAGO,IAAII,UAAU,KAAKI,0BAAnB,EAA8C;AACnD,cAAKE,QAAL,CAAc;AAAET,UAAAA,aAAa,EAAG,CAAC,MAAKD,KAAL,CAAWC;AAA9B,SAAd;AACD;AACH,K;;UAEDU,S,GAAY,UAACT,UAAD,EAAgB;AAC1B,aAAOA,UAAU,CACdU,GADI,CACA,UAAAC,EAAE;AAAA,eAAIC,kBAAMC,YAAN,CAAmBF,EAAnB,CAAJ;AAAA,OADF,CAAP;AAED,K;;;;;;;SApBDG,iB,GAAA,6BAAmB;AAAA,QACTC,KADS,GACC,KAAKX,KADN,CACTW,KADS;AAEjB,SAAKC,WAAL,GAAmBD,KAAK,CAACE,MAAN,CAAa,KAAKhB,QAAlB,CAAnB;AACD,G;;SACDiB,oB,GAAA,gCAAsB;AACpB,SAAKF,WAAL;AACD,G;;SAgBDG,M,GAAA,kBAAQ;AAAA,uBAKG,KAAKf,KALR;AAAA,QAEGW,KAFH,gBAEGA,KAFH;AAAA,QAGGK,iBAHH,gBAGGA,iBAHH;AAAA,QAGsBC,iBAHtB,gBAGsBA,iBAHtB;AAAA,QAIGC,gBAJH,gBAIGA,gBAJH;AAAA,QAIqBC,gBAJrB,gBAIqBA,gBAJrB;AAAA,sBAM+B,KAAKzB,KANpC;AAAA,QAMCC,aAND,eAMCA,aAND;AAAA,QAMgBC,UANhB,eAMgBA,UANhB;AAAA,QAODwB,YAPC,GAOczB,aAAa,GAEpB,gCAAC,wBAAD;AACE,MAAA,MAAM,EAAE,IADV;AAEE,MAAA,UAAU,EAAE,IAFd;AAGE,MAAA,aAAa,EAAE,IAHjB;AAIE,MAAA,WAAW,EAAE0B,kBAAYC,UAJ3B;AAKE,MAAA,OAAO,EAAC,SALV;AAME,MAAA,KAAK,EAAEX,KANT;AAOE,MAAA,UAAU,EAAEK,iBAPd;AAQE,MAAA,YAAY,EAAEC;AARhB,MAFoB,GAatB,IApBL;;AAsBN,WACE;AAAK,MAAA,SAAS,EAAEzB;AAAhB,OACE,gCAAC,wBAAD;AACG,MAAA,WAAW,EAAE6B,kBAAYC,UAD5B;AAEG,MAAA,OAAO,EAAC,OAFX;AAGG,MAAA,KAAK,EAAEX,KAHV;AAIG,MAAA,UAAU,EAAEK,iBAJf;AAKG,MAAA,YAAY,EAAEC;AALjB,MADF,EAQGG,YARH,EASG,KAAKf,SAAL,CAAeT,UAAf,CATH,EAUE,gCAAC,2BAAD;AACG,MAAA,SAAS,EAAE,CADd;AAEG,MAAA,KAAK,EAAEe,KAFV;AAGG,MAAA,UAAU,EAAEO,gBAHf;AAIG,MAAA,UAAU,EAAEC;AAJf,MAVF,CADF;AAmBD,G;;;EAlF4BI,gB;;eAqFhB9B,gB","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from 'props-type'\r\n\r\nimport { BrowserType } from '../../constants/Type';\r\n\r\nimport WatchBrowser from '../browser-watch/WatchBrowser';\r\nimport DialogContainer3 from '../zhn-containers/DialogContainer3';\r\n\r\n\r\nconst CL = \"hrz-container\";\r\n\r\nclass BrowserContainer extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func\r\n    }),\r\n    initBrowserAction: PropTypes.string,\r\n    showBrowserAction: PropTypes.string,\r\n    showDialogAction: PropTypes.string,\r\n    updateWatchAction: PropTypes.string,\r\n    toggleWatchDbBrowserAction: PropTypes.string,\r\n  }\r\n  */\r\n\r\n  state = {\r\n    isDoubleWatch : false,\r\n    elBrowsers : []\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { store } = this.props\r\n    this.unsubscribe = store.listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n  _onStore = (actionType, data) => {\r\n     const { initBrowserAction, toggleWatchDbBrowserAction } = this.props\r\n     if (actionType === initBrowserAction){\r\n       this.state.elBrowsers.unshift(data);\r\n       this.setState(this.state);\r\n     } else if (actionType === toggleWatchDbBrowserAction){\r\n       this.setState({ isDoubleWatch : !this.state.isDoubleWatch })\r\n     }\r\n  }\r\n\r\n  _renderEl = (elBrowsers) => {\r\n    return elBrowsers\r\n      .map(el => React.cloneElement(el))\r\n  }\r\n\r\n  render(){\r\n    const {\r\n             store\r\n           , showBrowserAction, updateWatchAction\r\n           , initDialogAction, showDialogAction\r\n         } = this.props\r\n       , { isDoubleWatch, elBrowsers } = this.state\r\n       , _doubleWatch = isDoubleWatch\r\n             ? (\r\n                 <WatchBrowser\r\n                   isShow={true}\r\n                   isEditMode={true}\r\n                   isDoubleWatch={true}\r\n                   browserType={BrowserType.WATCH_LIST}\r\n                   caption=\"Watch 2\"\r\n                   store={store}\r\n                   showAction={showBrowserAction}\r\n                   updateAction={updateWatchAction}\r\n                 />\r\n               )\r\n             : null;\r\n\r\n    return (\r\n      <div className={CL}>\r\n        <WatchBrowser\r\n           browserType={BrowserType.WATCH_LIST}\r\n           caption=\"Watch\"\r\n           store={store}\r\n           showAction={showBrowserAction}\r\n           updateAction={updateWatchAction}\r\n        />\r\n        {_doubleWatch}\r\n        {this._renderEl(elBrowsers)}\r\n        <DialogContainer3\r\n           maxDialog={3}\r\n           store={store}\r\n           initAction={initDialogAction}\r\n           showAction={showDialogAction}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BrowserContainer\r\n"],"file":"BrowserContainer.js"}