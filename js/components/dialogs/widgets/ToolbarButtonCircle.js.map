{"version":3,"sources":["../../../../src/components/dialogs/widgets/ToolbarButtonCircle.jsx"],"names":["S","ROW","paddingTop","paddingBottom","BUTTON_CIRCLE","marginLeft","ToolbarButtonCircle","_renderButtons","buttons","map","button","index","caption","title","onClick","nextProps","nextState","props","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,IAAI;AACRC,OAAM;AACJC,gBAAY,KADR;AAEJC,mBAAe;AAFX,GADE;AAKRC,iBAAgB;AACdC,gBAAY;AADE;AALR,CAAV;;IAWMC,mB;;;;;;;;;;;;;;8NASJC,c,GAAiB,YAAgB;AAAA,UAAfC,OAAe,uEAAP,EAAO;;AAC/B,aAAOA,QAAQC,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAAA,YAC5BC,OAD4B,GACAF,MADA,CAC5BE,OAD4B;AAAA,YACnBC,KADmB,GACAH,MADA,CACnBG,KADmB;AAAA,YACZC,OADY,GACAJ,MADA,CACZI,OADY;;AAEpC,eACE,8BAAC,sBAAD;AACE,eAAKF,UAAUD,KADjB;AAEE,mBAASC,OAFX;AAGE,iBAAOC,KAHT;AAIE,iBAAOb,EAAEI,aAJX;AAKE,mBAASU;AALX,UADF;AASD,OAXM,CAAP;AAYD,K;;;;;0CApBqBC,S,EAAWC,S,EAAU;AACzC,UAAID,UAAUP,OAAV,KAAsB,KAAKS,KAAL,CAAWT,OAArC,EAA6C;AAC3C,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;6BAiBO;AAAA,UACEA,OADF,GACc,KAAKS,KADnB,CACET,OADF;;AAEN,aACE;AAAC,qBAAD,CAAK,KAAL;AAAA,UAAW,OAAOR,EAAEC,GAApB;AACG,aAAKM,cAAL,CAAoBC,OAApB;AADH,OADF;AAKD;;;EA/B+BU,gB;;kBAmCnBZ,mB","file":"ToolbarButtonCircle.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Row from '../rows/Row';\r\nimport ButtonCircle from '../../zhn-atoms/ButtonCircle';\r\n\r\nconst S = {\r\n  ROW : {\r\n    paddingTop: '4px',\r\n    paddingBottom: '8px'\r\n  },\r\n  BUTTON_CIRCLE : {\r\n    marginLeft: '20px'\r\n  }\r\n};\r\n\r\n\r\nclass ToolbarButtonCircle extends Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps.buttons === this.props.buttons){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _renderButtons = (buttons=[]) => {\r\n    return buttons.map((button, index) => {\r\n      const { caption, title, onClick } = button;\r\n      return (\r\n        <ButtonCircle\r\n          key={caption + index}\r\n          caption={caption}\r\n          title={title}\r\n          style={S.BUTTON_CIRCLE}\r\n          onClick={onClick}\r\n        />\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { buttons } = this.props;\r\n    return (\r\n      <Row.Plain style={S.ROW}>\r\n        {this._renderButtons(buttons)}\r\n      </Row.Plain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ToolbarButtonCircle\r\n"]}