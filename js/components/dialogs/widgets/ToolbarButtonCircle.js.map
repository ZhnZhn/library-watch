{"version":3,"sources":["../../../../src/components/dialogs/widgets/ToolbarButtonCircle.jsx"],"names":["S","ROW","paddingTop","paddingBottom","BUTTON_CIRCLE","marginLeft","ToolbarButtonCircle","_renderButtons","buttons","map","button","index","caption","title","onClick","shouldComponentUpdate","nextProps","nextState","props","render","Component"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,GAAG,EAAG;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJC,IAAAA,aAAa,EAAE;AAFX,GADE;AAKRC,EAAAA,aAAa,EAAG;AACdC,IAAAA,UAAU,EAAE;AADE;AALR,CAAV;;IAWMC,mB;;;;;;;;;;;;;;UASJC,c,GAAiB,UAACC,OAAD,EAAgB;AAAA,UAAfA,OAAe;AAAfA,QAAAA,OAAe,GAAP,EAAO;AAAA;;AAC/B,aAAOA,OAAO,CAACC,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAAA,YAC5BC,OAD4B,GACAF,MADA,CAC5BE,OAD4B;AAAA,YACnBC,KADmB,GACAH,MADA,CACnBG,KADmB;AAAA,YACZC,OADY,GACAJ,MADA,CACZI,OADY;AAEpC,eACE,gCAAC,wBAAD;AACE,UAAA,GAAG,EAAEF,OAAO,GAAGD,KADjB;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,KAAK,EAAEC,KAHT;AAIE,UAAA,KAAK,EAAEb,CAAC,CAACI,aAJX;AAKE,UAAA,OAAO,EAAEU;AALX,UADF;AASD,OAXM,CAAP;AAYD,K;;;;;;;SApBDC,qB,GAAA,+BAAsBC,SAAtB,EAAiCC,SAAjC,EAA2C;AACzC,QAAID,SAAS,CAACR,OAAV,KAAsB,KAAKU,KAAL,CAAWV,OAArC,EAA6C;AAC3C,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,G;;SAiBDW,M,GAAA,kBAAQ;AAAA,QACEX,OADF,GACc,KAAKU,KADnB,CACEV,OADF;AAEN,WACE,gCAAC,eAAD,CAAK,KAAL;AAAW,MAAA,KAAK,EAAER,CAAC,CAACC;AAApB,OACG,KAAKM,cAAL,CAAoBC,OAApB,CADH,CADF;AAKD,G;;;EA/B+BY,gB;;eAmCnBd,mB","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Row from '../rows/Row';\r\nimport ButtonCircle from '../../zhn-atoms/ButtonCircle';\r\n\r\nconst S = {\r\n  ROW : {\r\n    paddingTop: '4px',\r\n    paddingBottom: '8px'\r\n  },\r\n  BUTTON_CIRCLE : {\r\n    marginLeft: '20px'\r\n  }\r\n};\r\n\r\n\r\nclass ToolbarButtonCircle extends Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps.buttons === this.props.buttons){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _renderButtons = (buttons=[]) => {\r\n    return buttons.map((button, index) => {\r\n      const { caption, title, onClick } = button;\r\n      return (\r\n        <ButtonCircle\r\n          key={caption + index}\r\n          caption={caption}\r\n          title={title}\r\n          style={S.BUTTON_CIRCLE}\r\n          onClick={onClick}\r\n        />\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { buttons } = this.props;\r\n    return (\r\n      <Row.Plain style={S.ROW}>\r\n        {this._renderButtons(buttons)}\r\n      </Row.Plain>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ToolbarButtonCircle\r\n"],"file":"ToolbarButtonCircle.js"}