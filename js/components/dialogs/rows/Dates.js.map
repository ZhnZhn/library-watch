{"version":3,"sources":["../../../../src/components/dialogs/rows/Dates.jsx"],"names":["ERROR_FORMAT","FROM_DATE","TO_DATE","ERROR_FROM_NEAR_TO","Dates","_refFromDate","c","fromDate","_refToDate","toDate","render","props","isShowLabels","initFromDate","initToDate","onTestDate","styles","rowDiv","labelSpan","getValues","getValue","setValues","setValue","getValidation","msgOnNotValidFormat","datesMsg","isValid","push","trim","length","focusInput","focusNotValidInput","Component","defaultProps","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport InputDate from '../../zhn-atoms/InputDate';\r\nimport styles from '../../styles/DialogStyles'\r\nimport Caption from './Caption'\r\n\r\nconst ERROR_FORMAT = \"YYYY-MM-DD format must be\"\r\n    , FROM_DATE = \"From Date\"\r\n    , TO_DATE = \"To Date\"\r\n    , ERROR_FROM_NEAR_TO = \"From Date is near that To Date\";\r\n\r\nclass Dates extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShowLabels: PropTypes.bool,\r\n    initFromDate: PropTypes.string,\r\n    initToDate: PropTypes.string,\r\n    onTestDate: PropTypes.func,\r\n    msgOnNotValidFormat: PropTypes.func\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    isShowLabels: true,\r\n    msgOnNotValidFormat: item => `${item} is not in valid format`\r\n  }\r\n\r\n  _refFromDate = c => this.fromDate = c\r\n  _refToDate = c => this.toDate = c\r\n\r\n  render(){\r\n    const {\r\n      isShowLabels,\r\n      initFromDate,\r\n      initToDate,\r\n      onTestDate\r\n    } = this.props;\r\n    return (\r\n        <div>\r\n          <div style={styles.rowDiv}>\r\n            <Caption\r\n              is={isShowLabels}\r\n              style={styles.labelSpan}\r\n              caption=\"From Date\"\r\n            />\r\n            <InputDate\r\n               ref={this._refFromDate}\r\n               initValue={initFromDate}\r\n               errorMsg={ERROR_FORMAT}\r\n               onTest={onTestDate}\r\n            />\r\n         </div>\r\n         <div style={styles.rowDiv}>\r\n           <Caption\r\n              is={isShowLabels}\r\n              style={styles.labelSpan}\r\n              caption=\"To Date\"\r\n            />\r\n            <InputDate\r\n                 ref={this._refToDate}\r\n                 initValue={initToDate}\r\n                 errorMsg={ERROR_FORMAT}\r\n                 onTest={onTestDate}\r\n            />\r\n         </div>\r\n       </div>\r\n    );\r\n  }\r\n\r\n  getValues(){\r\n    return {\r\n      fromDate: this.fromDate.getValue(),\r\n      toDate: this.toDate.getValue()\r\n    };\r\n  }\r\n\r\n  setValues(fromDate, toDate){\r\n     this.fromDate.setValue(fromDate)\r\n     this.toDate.setValue(toDate)\r\n  }\r\n\r\n  getValidation(){\r\n    const { msgOnNotValidFormat } = this.props\r\n        ,  datesMsg = [];\r\n    if (!this.fromDate.isValid()) { datesMsg.push(msgOnNotValidFormat(FROM_DATE)) }\r\n    if (!this.toDate.isValid())   { datesMsg.push(msgOnNotValidFormat(TO_DATE)) }\r\n\r\n    if (this.fromDate.getValue().trim() > this.toDate.getValue().trim() ) {\r\n      datesMsg.push(ERROR_FROM_NEAR_TO)\r\n    }\r\n\r\n    if (datesMsg.length>0){\r\n      return { isValid: false, datesMsg };\r\n    }\r\n    return { isValid : true };\r\n  }\r\n\r\n  focusInput(){\r\n    this.fromDate.focusInput()\r\n  }\r\n\r\n  focusNotValidInput(){\r\n    if (!this.fromDate.isValid()){\r\n       this.fromDate.focusInput()\r\n       return true;\r\n    }\r\n    if (!this.toDate.isValid()){\r\n      this.toDate.focusInput()\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Dates\r\n"],"file":"Dates.js"}