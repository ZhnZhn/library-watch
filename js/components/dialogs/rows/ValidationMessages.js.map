{"version":3,"sources":["../../../../src/components/dialogs/rows/ValidationMessages.jsx"],"names":["S","ROOT_DIV","paddingLeft","paddingTop","color","NUMBER_DIV","display","width","height","border","borderRadius","textAlign","marginRight","MSG_SPAN","whiteSpace","fontWeight","ValidationMessage","index","msg","ValidationMessages","props","validationMessages","Array","isArray","_renderValidationMessages","msgs","map"],"mappings":";;;;;;;AAAA;;AACA;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,QAAQ,EAAG;AACTC,IAAAA,WAAW,EAAE,MADJ;AAETC,IAAAA,UAAU,EAAE,KAFH;AAGTC,IAAAA,KAAK,EAAE;AAHE,GADH;AAORC,EAAAA,UAAU,EAAG;AACXC,IAAAA,OAAO,EAAE,cADE;AAEXC,IAAAA,KAAK,EAAE,MAFI;AAGXC,IAAAA,MAAM,EAAE,MAHG;AAIXC,IAAAA,MAAM,EAAE,mBAJG;AAKXC,IAAAA,YAAY,EAAE,KALH;AAMXC,IAAAA,SAAS,EAAE,QANA;AAOXC,IAAAA,WAAW,EAAE;AAPF,GAPL;AAiBRC,EAAAA,QAAQ,EAAG;AACTC,IAAAA,UAAU,EAAG,KADJ;AAETC,IAAAA,UAAU,EAAG;AAFJ;AAjBH,CAAV;;AAuBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,GAAV,QAAUA,GAAV;AAAA,sBACxB,0DACE;AAAK,IAAA,KAAK,EAAElB,CAAC,CAACK;AAAd,KAA2BY,KAAK,GAAC,CAAjC,CADF,eAEE;AAAM,IAAA,KAAK,EAAEjB,CAAC,CAACa;AAAf,KAA0BK,GAA1B,CAFF,CADwB;AAAA,CAA1B;AAMA;;;;;;;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAAA,MAC3BC,kBAD2B,GACJD,KADI,CAC3BC,kBAD2B;;AAGnC,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,kBAAd,CAAL,EAAuC;AACrC,WAAO,IAAP;AACD;;AAEF,MAAMG,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,IAAD,EAAU;AAC1C,WAAOA,IAAI,CAACC,GAAL,CAAS,UAACR,GAAD,EAAMD,KAAN,EAAc;AAC5B,0BACE,gCAAC,iBAAD;AAAmB,QAAA,GAAG,EAAEA,KAAxB;AAA+B,QAAA,GAAG,EAAEC,GAApC;AAAyC,QAAA,KAAK,EAAED;AAAhD,QADF;AAGD,KAJM,CAAP;AAKD,GAND;;AAQA,sBACI;AAAK,IAAA,KAAK,EAAEjB,CAAC,CAACC;AAAd,KACGuB,yBAAyB,CAACH,kBAAD,CAD5B,CADJ;AAKD,CApBD;AAsBA;;;;;;;;;;;eAUeF,kB","sourcesContent":["import React from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst S = {\r\n  ROOT_DIV : {\r\n    paddingLeft: '10px',\r\n    paddingTop: '5px',\r\n    color: '#F44336'\r\n  },\r\n\r\n  NUMBER_DIV : {\r\n    display: 'inline-block',\r\n    width: '22px',\r\n    height: '22px',\r\n    border: 'solid 2px #F44336',\r\n    borderRadius: '50%',\r\n    textAlign: 'center',\r\n    marginRight: '5px'\r\n  },\r\n\r\n  MSG_SPAN : {\r\n    whiteSpace : 'pre',\r\n    fontWeight : 'bold'\r\n  }\r\n}\r\n\r\nconst ValidationMessage = ({ index, msg }) => (\r\n  <div>\r\n    <div style={S.NUMBER_DIV}>{index+1}</div>\r\n    <span style={S.MSG_SPAN}>{msg}</span>\r\n  </div>\r\n);\r\n/*\r\nValidationMessage.propTypes = {\r\n  index: PropTypes.number,\r\n  msg: PropTypes.string\r\n}\r\n*/\r\n\r\nconst ValidationMessages = (props) => {\r\n   const { validationMessages } = props;\r\n\r\n   if (!Array.isArray(validationMessages)){\r\n     return null;\r\n   }\r\n\r\n  const _renderValidationMessages = (msgs) => {\r\n    return msgs.map((msg, index)=>{\r\n      return (\r\n        <ValidationMessage key={index} msg={msg} index={index} />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n      <div style={S.ROOT_DIV}>\r\n        {_renderValidationMessages(validationMessages)}\r\n      </div>\r\n  );\r\n};\r\n\r\n/*\r\nValidationMessagesFragment.propTypes = {\r\n  validationMessages: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      msg: PropTypes.string\r\n    })\r\n  )\r\n}\r\n*/\r\n\r\nexport default ValidationMessages\r\n"],"file":"ValidationMessages.js"}