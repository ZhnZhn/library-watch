{"version":3,"sources":["../../../../src/components/dialogs/rows/RowInputText.jsx"],"names":["S","ROW_DIV","margin","LABEL_SPAN","color","display","textAlign","width","paddingRight","fontSize","fontWeight","ROOT","lineHeight","CAPTION","INPUT_TEXT","marginLeft","marginRight","paddingLeft","height","RowInputText","_refInput","inputText","c","props","isShowLabel","caption","placeholder","onEnter","_placeholder","getValue","trim","value","setValue","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,IAAI;AACRC,WAAS;AACPC,YAAQ;AADD,GADD;AAIRC,cAAa;AACXC,WAAO,SADI;AAEXC,aAAS,cAFE;AAGXC,eAAW,OAHA;AAIXC,WAAO,OAJI;AAKXC,kBAAc,KALH;AAMXC,cAAU,MANC;AAOXC,gBAAY;AAPD,GAJL;AAaRC,QAAO;AACLC,gBAAY;AADP,GAbC;AAgBRC,WAAU;AACRN,WAAO;AADC,GAhBF;AAmBRO,cAAa;AACXP,WAAQ,OADG;AAEXQ,gBAAa,CAFF;AAGXC,iBAAa,CAHF;AAIXC,iBAAa,MAJF;AAKXC,YAAQ;AALG;AAnBL,CAAV;;IA4BMC,Y;;;;;;;;;;;;;;gNAcJC,S,GAAY;AAAA,aAAK,MAAKC,SAAL,GAAiBC,CAAtB;AAAA,K;;AAbZ;;;;;;;;;;;;6BAeQ;AAAA,mBAIF,KAAKC,KAJH;AAAA,UAEJC,WAFI,UAEJA,WAFI;AAAA,UAESC,OAFT,UAESA,OAFT;AAAA,UAGJC,WAHI,UAGJA,WAHI;AAAA,UAGSC,OAHT,UAGSA,OAHT;AAAA,UAKJC,YALI,GAKWJ,cACXE,WADW,GAEXA,eAAeD,OAPf;;AAQN,aACE;AAAA;AAAA,UAAK,kCAAYzB,EAAEC,OAAd,EAA0BD,EAAEW,IAA5B,CAAL;AACG,sCAAC,iBAAD;AACE,cAAIa,WADN;AAEE,4CAAYxB,EAAEG,UAAd,EAA6BH,EAAEa,OAA/B,CAFF;AAGE,mBAASY;AAHX,UADH;AAMG,sCAAC,mBAAD;AACG,eAAK,KAAKL,SADb;AAEG,iBAAOpB,EAAEc,UAFZ;AAGG,uBAAac,YAHhB;AAIG,mBAASD;AAJZ;AANH,OADF;AAeD;;;+BAES;AACR,aAAO,KAAKN,SAAL,CAAeQ,QAAf,GAA0BC,IAA1B,EAAP;AACD;;;6BACQC,K,EAAM;AACb,WAAKV,SAAL,CAAeW,QAAf,CAAwBD,KAAxB;AACD;;;EA9CwBE,gB,UASlBC,Y,GAAe;AACpBV,eAAa,IADO;AAEpBC,WAAS;AAFW,C;kBAwCTN,Y","file":"RowInputText.js","sourcesContent":["import React, { Component } from 'react';\r\nimport InputText from '../../zhn-atoms/InputText';\r\nimport Caption from './Caption'\r\n\r\nconst S = {\r\n  ROW_DIV: {\r\n    margin: '5px'\r\n  },\r\n  LABEL_SPAN : {\r\n    color: '#1B75BB',\r\n    display: 'inline-block',\r\n    textAlign: 'right',\r\n    width: '100px',\r\n    paddingRight: '5px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold'\r\n  },\r\n  ROOT : {\r\n    lineHeight: 2\r\n  },\r\n  CAPTION : {\r\n    width: '120px'\r\n  },\r\n  INPUT_TEXT : {\r\n    width : '250px',\r\n    marginLeft : 0,\r\n    marginRight: 0,\r\n    paddingLeft: '10px',\r\n    height: '30px'\r\n  }\r\n}\r\n\r\nclass RowInputText extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShowLabel: true,\r\n    caption: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    onEnter: PropTypes.function\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    isShowLabel: true,\r\n    caption: ''\r\n  }\r\n\r\n  _refInput = c => this.inputText = c\r\n\r\n  render(){\r\n    const {\r\n      isShowLabel, caption,\r\n      placeholder, onEnter\r\n    } = this.props\r\n    , _placeholder = isShowLabel\r\n        ? placeholder\r\n        : placeholder || caption;\r\n    return (\r\n      <div style={{ ...S.ROW_DIV, ...S.ROOT }}>\r\n         <Caption\r\n           is={isShowLabel}\r\n           style={{ ...S.LABEL_SPAN, ...S.CAPTION }}\r\n           caption={caption}\r\n         />\r\n         <InputText\r\n            ref={this._refInput}\r\n            style={S.INPUT_TEXT}\r\n            placeholder={_placeholder}\r\n            onEnter={onEnter}\r\n         />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getValue(){\r\n    return this.inputText.getValue().trim();\r\n  }\r\n  setValue(value){\r\n    this.inputText.setValue(value)\r\n  }\r\n}\r\n\r\nexport default RowInputText\r\n"]}