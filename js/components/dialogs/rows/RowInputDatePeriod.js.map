{"version":3,"file":"RowInputDatePeriod.js","names":["_uiApi","require","_dateFn","_ShowHide","_interopRequireDefault","_InputDate","_Row","_Caption","_jsxRuntime","INITIAL_FROM_DATE","getFromDate","INITIAL_TO_DATE","getToDate","ERROR_FORMAT","FROM_DATE","TO_DATE","ERROR_FROM_NEAR_TO","DF_MSG_ON_NOT_VALID_FORMAT","item","_getTrimRefInputValue","ref","getRefInputValue","trim","RowInputDatePeriod","_ref","refEl","isShow","isShowLabels","msgOnNotValidFormat","initialFromDate","initialToDate","onTestDate","isYmd","_refFromDate","useRef","_refToDate","useImperativeHandle","getValues","fromDate","toDate","setValues","setRefInputValue","getValidation","datesMsg","isRefInputValid","push","length","isValid","focusInput","focusRefInput","focusNotValidInput","jsxs","default","children","jsx","is","caption","initialValue","errorMsg","onTest","_default","exports"],"sources":["../../../../src/components/dialogs/rows/RowInputDatePeriod.jsx"],"sourcesContent":["import {\r\n  useRef,\r\n  useImperativeHandle,\r\n  isRefInputValid,\r\n  getRefInputValue,\r\n  setRefInputValue,\r\n  focusRefInput\r\n} from '../../uiApi';\r\n\r\nimport {\r\n  getFromDate,\r\n  getToDate,\r\n  isYmd\r\n} from '../../../utils/dateFn';\r\n\r\nimport ShowHide from '../../zhn/ShowHide';\r\nimport InputDate from '../../zhn/InputDate';\r\nimport Row from './Row';\r\nimport Caption from './Caption';\r\n\r\nconst INITIAL_FROM_DATE = getFromDate(1)\r\n, INITIAL_TO_DATE = getToDate()\r\n\r\n, ERROR_FORMAT = \"YYYY-MM-DD format must be\"\r\n, FROM_DATE = \"From Date\"\r\n, TO_DATE = \"To Date\"\r\n, ERROR_FROM_NEAR_TO = \"From Date is near that To Date\"\r\n, DF_MSG_ON_NOT_VALID_FORMAT = item => `${item} is not in valid format`\r\n, _getTrimRefInputValue = ref => (getRefInputValue(ref) || \"\").trim();\r\n\r\nconst RowInputDatePeriod = ({\r\n  refEl,\r\n  isShow,\r\n  isShowLabels=true,\r\n  msgOnNotValidFormat=DF_MSG_ON_NOT_VALID_FORMAT,\r\n  initialFromDate=INITIAL_FROM_DATE,\r\n  initialToDate=INITIAL_TO_DATE,\r\n  onTestDate=isYmd\r\n}) => {\r\n  const _refFromDate = useRef()\r\n  , _refToDate = useRef();\r\n\r\n  useImperativeHandle(refEl, () => ({\r\n     getValues: () => ({\r\n       fromDate: getRefInputValue(_refFromDate),\r\n       toDate: getRefInputValue(_refToDate)\r\n     }),\r\n     setValues: (fromDate, toDate) => {\r\n       setRefInputValue(_refFromDate, fromDate)\r\n       setRefInputValue(_refToDate, toDate)\r\n     },\r\n     getValidation: () => {\r\n       const datesMsg = [];\r\n\r\n       if (!isRefInputValid(_refFromDate)) {\r\n         datesMsg.push(msgOnNotValidFormat(FROM_DATE))\r\n       }\r\n       if (!isRefInputValid(_refToDate)) {\r\n         datesMsg.push(msgOnNotValidFormat(TO_DATE))\r\n       }\r\n\r\n       if (_getTrimRefInputValue(_refFromDate) > _getTrimRefInputValue(_refToDate)) {\r\n         datesMsg.push(ERROR_FROM_NEAR_TO)\r\n       }\r\n\r\n       return datesMsg.length>0\r\n         ? { isValid: false, datesMsg }\r\n         : { isValid: true };\r\n     },\r\n     focusInput: () => {\r\n       focusRefInput(_refFromDate)\r\n     },\r\n     focusNotValidInput: () => {\r\n       if (!isRefInputValid(_refFromDate)){\r\n          focusRefInput(_refFromDate)\r\n          return true;\r\n       }\r\n       if (!isRefInputValid(_refToDate)){\r\n         focusRefInput(_refToDate)\r\n         return true;\r\n       }\r\n       return false;\r\n     }\r\n  }), [msgOnNotValidFormat])\r\n\r\n  return (\r\n    <ShowHide isShow={isShow}>\r\n      <Row>\r\n        <Caption\r\n          is={isShowLabels}\r\n          caption=\"From Date\"\r\n        />\r\n        <InputDate\r\n           refEl={_refFromDate}\r\n           initialValue={initialFromDate}\r\n           errorMsg={ERROR_FORMAT}\r\n           onTest={onTestDate}\r\n        />\r\n     </Row>\r\n     <Row>\r\n       <Caption\r\n           is={isShowLabels}\r\n           caption=\"To Date\"\r\n        />\r\n        <InputDate\r\n           refEl={_refToDate}\r\n           initialValue={initialToDate}\r\n           errorMsg={ERROR_FORMAT}\r\n           onTest={onTestDate}\r\n        />\r\n     </Row>\r\n   </ShowHide>\r\n  );\r\n};\r\n\r\nexport default RowInputDatePeriod\r\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AASA,IAAAC,OAAA,GAAAD,OAAA;AAMA,IAAAE,SAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,UAAA,GAAAD,sBAAA,CAAAH,OAAA;AACA,IAAAK,IAAA,GAAAF,sBAAA,CAAAH,OAAA;AACA,IAAAM,QAAA,GAAAH,sBAAA,CAAAH,OAAA;AAAgC,IAAAO,WAAA,GAAAP,OAAA;AAEhC,MAAMQ,iBAAiB,GAAG,IAAAC,mBAAW,EAAC,CAAC,CAAC;EACtCC,eAAe,GAAG,IAAAC,iBAAS,EAAC,CAAC;EAE7BC,YAAY,GAAG,2BAA2B;EAC1CC,SAAS,GAAG,WAAW;EACvBC,OAAO,GAAG,SAAS;EACnBC,kBAAkB,GAAG,gCAAgC;EACrDC,0BAA0B,GAAGC,IAAI,IAAI,GAAGA,IAAI,yBAAyB;EACrEC,qBAAqB,GAAGC,GAAG,IAAI,CAAC,IAAAC,uBAAgB,EAACD,GAAG,CAAC,IAAI,EAAE,EAAEE,IAAI,CAAC,CAAC;AAErE,MAAMC,kBAAkB,GAAGC,IAAA,IAQrB;EAAA,IARsB;IAC1BC,KAAK;IACLC,MAAM;IACNC,YAAY,GAAC,IAAI;IACjBC,mBAAmB,GAACX,0BAA0B;IAC9CY,eAAe,GAACpB,iBAAiB;IACjCqB,aAAa,GAACnB,eAAe;IAC7BoB,UAAU,GAACC;EACb,CAAC,GAAAR,IAAA;EACC,MAAMS,YAAY,GAAG,IAAAC,aAAM,EAAC,CAAC;IAC3BC,UAAU,GAAG,IAAAD,aAAM,EAAC,CAAC;EAEvB,IAAAE,0BAAmB,EAACX,KAAK,EAAE,OAAO;IAC/BY,SAAS,EAAEA,CAAA,MAAO;MAChBC,QAAQ,EAAE,IAAAjB,uBAAgB,EAACY,YAAY,CAAC;MACxCM,MAAM,EAAE,IAAAlB,uBAAgB,EAACc,UAAU;IACrC,CAAC,CAAC;IACFK,SAAS,EAAEA,CAACF,QAAQ,EAAEC,MAAM,KAAK;MAC/B,IAAAE,uBAAgB,EAACR,YAAY,EAAEK,QAAQ,CAAC;MACxC,IAAAG,uBAAgB,EAACN,UAAU,EAAEI,MAAM,CAAC;IACtC,CAAC;IACDG,aAAa,EAAEA,CAAA,KAAM;MACnB,MAAMC,QAAQ,GAAG,EAAE;MAEnB,IAAI,CAAC,IAAAC,sBAAe,EAACX,YAAY,CAAC,EAAE;QAClCU,QAAQ,CAACE,IAAI,CAACjB,mBAAmB,CAACd,SAAS,CAAC,CAAC;MAC/C;MACA,IAAI,CAAC,IAAA8B,sBAAe,EAACT,UAAU,CAAC,EAAE;QAChCQ,QAAQ,CAACE,IAAI,CAACjB,mBAAmB,CAACb,OAAO,CAAC,CAAC;MAC7C;MAEA,IAAII,qBAAqB,CAACc,YAAY,CAAC,GAAGd,qBAAqB,CAACgB,UAAU,CAAC,EAAE;QAC3EQ,QAAQ,CAACE,IAAI,CAAC7B,kBAAkB,CAAC;MACnC;MAEA,OAAO2B,QAAQ,CAACG,MAAM,GAAC,CAAC,GACpB;QAAEC,OAAO,EAAE,KAAK;QAAEJ;MAAS,CAAC,GAC5B;QAAEI,OAAO,EAAE;MAAK,CAAC;IACvB,CAAC;IACDC,UAAU,EAAEA,CAAA,KAAM;MAChB,IAAAC,oBAAa,EAAChB,YAAY,CAAC;IAC7B,CAAC;IACDiB,kBAAkB,EAAEA,CAAA,KAAM;MACxB,IAAI,CAAC,IAAAN,sBAAe,EAACX,YAAY,CAAC,EAAC;QAChC,IAAAgB,oBAAa,EAAChB,YAAY,CAAC;QAC3B,OAAO,IAAI;MACd;MACA,IAAI,CAAC,IAAAW,sBAAe,EAACT,UAAU,CAAC,EAAC;QAC/B,IAAAc,oBAAa,EAACd,UAAU,CAAC;QACzB,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;EACH,CAAC,CAAC,EAAE,CAACP,mBAAmB,CAAC,CAAC;EAE1B,oBACE,IAAApB,WAAA,CAAA2C,IAAA,EAAChD,SAAA,CAAAiD,OAAQ;IAAC1B,MAAM,EAAEA,MAAO;IAAA2B,QAAA,gBACvB,IAAA7C,WAAA,CAAA2C,IAAA,EAAC7C,IAAA,CAAA8C,OAAG;MAAAC,QAAA,gBACF,IAAA7C,WAAA,CAAA8C,GAAA,EAAC/C,QAAA,CAAA6C,OAAO;QACNG,EAAE,EAAE5B,YAAa;QACjB6B,OAAO,EAAC;MAAW,CACpB,CAAC,eACF,IAAAhD,WAAA,CAAA8C,GAAA,EAACjD,UAAA,CAAA+C,OAAS;QACP3B,KAAK,EAAEQ,YAAa;QACpBwB,YAAY,EAAE5B,eAAgB;QAC9B6B,QAAQ,EAAE7C,YAAa;QACvB8C,MAAM,EAAE5B;MAAW,CACrB,CAAC;IAAA,CACA,CAAC,eACN,IAAAvB,WAAA,CAAA2C,IAAA,EAAC7C,IAAA,CAAA8C,OAAG;MAAAC,QAAA,gBACF,IAAA7C,WAAA,CAAA8C,GAAA,EAAC/C,QAAA,CAAA6C,OAAO;QACJG,EAAE,EAAE5B,YAAa;QACjB6B,OAAO,EAAC;MAAS,CACnB,CAAC,eACF,IAAAhD,WAAA,CAAA8C,GAAA,EAACjD,UAAA,CAAA+C,OAAS;QACP3B,KAAK,EAAEU,UAAW;QAClBsB,YAAY,EAAE3B,aAAc;QAC5B4B,QAAQ,EAAE7C,YAAa;QACvB8C,MAAM,EAAE5B;MAAW,CACrB,CAAC;IAAA,CACA,CAAC;EAAA,CACE,CAAC;AAEd,CAAC;AAAC,IAAA6B,QAAA,GAAAC,OAAA,CAAAT,OAAA,GAEa7B,kBAAkB","ignoreList":[]}