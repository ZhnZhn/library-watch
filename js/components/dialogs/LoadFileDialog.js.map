{"version":3,"sources":["../../../src/components/dialogs/LoadFileDialog.jsx"],"names":["styles","DialogStyles","C","FILE_NOT_CHOOSED","STYLE","MODAL_DIALOG","minWidth","ROW_INPUT_FILE","marginTop","marginBottom","ROW_VALIDATION","marginRight","LoadFileDialog","props","_handleChange","results","progressEvent","file","_handleLoad","data","onLoad","setState","validationMessages","_handleClose","onClose","state","length","_commandButtons","shouldComponentUpdate","nextProps","nextState","isShow","render","rowDiv","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport FlatButton from '../zhn-m/FlatButton'\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport InputFileReader from '../zhn-atoms/InputFileReader';\r\nimport ValidationMessagesFragment from '../zhn-moleculs/ValidationMessagesFragment';\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nconst styles = DialogStyles\r\n\r\nconst C = {\r\n  FILE_NOT_CHOOSED : 'Choose file with Watch Items for Load'\r\n}\r\n\r\nconst STYLE = {\r\n  MODAL_DIALOG : {\r\n    minWidth: '320px'\r\n  },\r\n  ROW_INPUT_FILE : {\r\n    marginTop: '16px',\r\n    marginBottom: '16px'\r\n  },\r\n  ROW_VALIDATION : {\r\n    marginRight: '16px'\r\n  }\r\n}\r\n\r\nclass LoadFileDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      onLoad: PropTypes.func\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.progressEvent = null\r\n    this.file = null\r\n    this._commandButtons = [\r\n      <FlatButton\r\n        key=\"load\"\r\n        isPrimary={true}\r\n        caption=\"Load\"\r\n        timeout={2000}\r\n        onClick={this._handleLoad}\r\n     />\r\n   ]\r\n   this.state = {\r\n     validationMessages: []\r\n   }\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleChange = (results) => {\r\n    if (results && results[0] ){\r\n      const [progressEvent, file] = results[0]\r\n      this.progressEvent = progressEvent\r\n      this.file = file\r\n    } else {\r\n      this.progressEvent = null\r\n      this.file = null\r\n    }\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    if (this.progressEvent && this.file){\r\n      const { data } = this.props\r\n          , { onLoad } = data\r\n      onLoad({ progressEvent : this.progressEvent });\r\n      this.setState({\r\n        validationMessages : []\r\n      })\r\n    } else {\r\n      this.setState({\r\n        validationMessages : [C.FILE_NOT_CHOOSED]\r\n      })\r\n    }\r\n  }\r\n\r\n  _handleClose = () => {\r\n    const { onClose } = this.props;\r\n\r\n    if (this.state.validationMessages.length !== 0){\r\n      this.setState({ validationMessages : [] });\r\n    }\r\n    onClose()\r\n  }\r\n\r\n  render(){\r\n    const { isShow } = this.props\r\n        , { validationMessages } = this.state;\r\n    return (\r\n      <ModalDialog\r\n        style={STYLE.MODAL_DIALOG}\r\n        caption=\"Load Watch Items from File\"\r\n        isShow={isShow}\r\n        commandButtons={this._commandButtons}\r\n        onClose={this._handleClose}\r\n      >\r\n         <div style={{ ...styles.rowDiv, ...STYLE.ROW_INPUT_FILE }}>\r\n            <InputFileReader\r\n               as=\"text\"\r\n               onChange={this._handleChange}\r\n            />\r\n         </div>\r\n         <div style={{ ...styles.rowDiv, ...STYLE.ROW_VALIDATION }}>\r\n           <ValidationMessagesFragment\r\n              validationMessages={validationMessages}\r\n           />\r\n         </div>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoadFileDialog\r\n"],"file":"LoadFileDialog.js"}