{"version":3,"sources":["../../../src/components/dialogs/LoadFileDialog.jsx"],"names":["styles","C","FILE_NOT_CHOOSED","STYLE","MODAL_DIALOG","minWidth","ROW_INPUT_FILE","marginTop","marginBottom","ROW_VALIDATION","marginRight","LoadFileDialog","createClass","getInitialState","progressEvent","undefined","file","validationMessages","shouldComponentUpdate","nextProps","nextState","props","isShow","_handlerChange","results","_handlerLoad","data","onLoad","setState","_handlerClose","onClose","state","length","render","_commandButtons","Object","assign","rowDiv"],"mappings":"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","file":"LoadFileDialog.js","sourcesContent":["import React from 'react';\r\n\r\nimport ModalDialog from '../zhnMoleculs/ModalDialog';\r\nimport InputFileReader from '../zhnAtoms/InputFileReader';\r\nimport ToolBarButton from '../header/ToolBarButton';\r\nimport ValidationMessagesFragment from '../zhnMoleculs/ValidationMessagesFragment';\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst C = {\r\n  FILE_NOT_CHOOSED : 'Choose file with Watch Items for Load'\r\n}\r\n\r\nconst STYLE = {\r\n  MODAL_DIALOG : {\r\n    minWidth: '320px'\r\n  },\r\n  ROW_INPUT_FILE : {\r\n    marginTop: '16px',\r\n    marginBottom: '16px'\r\n  },\r\n  ROW_VALIDATION : {\r\n    marginRight: '16px'\r\n  }\r\n}\r\n\r\n\r\nconst LoadFileDialog = React.createClass({\r\n  getInitialState(){\r\n    this.progressEvent = undefined;\r\n    this.file = undefined;\r\n    return {\r\n      validationMessages : []\r\n    };\r\n  },\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  _handlerChange(results){\r\n    //console.log(results)\r\n    if (results && results[0] ){\r\n      const [progressEvent, file] = results[0]\r\n      this.progressEvent = progressEvent;\r\n      this.file = file\r\n   } else {\r\n     this.progressEvent = undefined;\r\n     this.file = undefined;\r\n   }\r\n  },\r\n\r\n  _handlerLoad(){\r\n    if (this.progressEvent && this.file){\r\n      //console.log(this.file.name);\r\n      //console.log(this.progressEvent.target.result);\r\n      const { data } = this.props\r\n          , { onLoad } = data\r\n      onLoad({ progressEvent : this.progressEvent });\r\n      this.setState({\r\n        validationMessages : []\r\n      })\r\n    } else {\r\n      this.setState({\r\n        validationMessages : [C.FILE_NOT_CHOOSED]\r\n      })\r\n    }\r\n  },\r\n\r\n  _handlerClose(){\r\n    const { onClose } = this.props;\r\n\r\n    if (this.state.validationMessages.length !== 0){\r\n      this.setState({ validationMessages : [] });\r\n    }\r\n    onClose();\r\n  },\r\n\r\n  render(){\r\n    const { isShow } = this.props\r\n        //, { caption } = data\r\n        , { validationMessages } = this.state\r\n        , _commandButtons = [\r\n            <ToolBarButton\r\n              key=\"a\"\r\n              type=\"TypeC\"\r\n              caption=\"Load\"\r\n              onClick={this._handlerLoad}\r\n           />\r\n        ]\r\n    return (\r\n      <ModalDialog\r\n        style={STYLE.MODAL_DIALOG}\r\n        caption=\"Load Watch Items from File\"\r\n        isShow={isShow}\r\n        commandButtons={_commandButtons}\r\n        onClose={this._handlerClose}\r\n      >\r\n         <div\r\n            key=\"1\"\r\n            style={Object.assign({}, styles.rowDiv, STYLE.ROW_INPUT_FILE)}\r\n\r\n         >\r\n            <InputFileReader\r\n               as=\"text\"\r\n               onChange={this._handlerChange}\r\n            />\r\n         </div>\r\n         <div\r\n            key=\"2\"\r\n            style={Object.assign({}, styles.rowDiv, STYLE.ROW_VALIDATION)}\r\n         >\r\n           <ValidationMessagesFragment\r\n              validationMessages={validationMessages}\r\n           />\r\n         </div>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n});\r\n\r\nexport default LoadFileDialog\r\n"]}