{"version":3,"sources":["../../../src/components/dialogs/DialogType2.jsx"],"names":["_sortOptions","caption","value","_initFromDate","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType2","createClass","displayName","getInitialState","stock","sortByItem","validationMessages","shouldComponentUpdate","nextProps","nextState","props","isShow","_handlerSelectSortBy","item","_handlerDefault","datesFragment","setValues","setState","_handlerClear","inputRepo","setValue","_handlerLoad","_handlerLoadWithValidation","_createValidationMessages","_createLoadOption","msg","getValidation","isValid","datesMsg","concat","length","getValue","getValues","fromDate","toDate","_fromDate","toUTCMillis","_toDate","requestType","repo","sort","fromdate","todate","_handlerClose","_handlerCloseWithValidation","render","onShow","oneTitle","onePlaceholder","_commandButtons","state","c"],"mappings":"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","file":"DialogType2.js","sourcesContent":["import React from 'react';\r\n\r\nimport DateUtils from '../../utils/DateUtils';\r\n\r\nimport WithValidation from './WithValidation';\r\nimport Dialog from '../zhnMoleculs/Dialog';\r\nimport ToolBarButton from '../header/ToolBarButton';\r\nimport RowInputText from './RowInputText';\r\nimport RowInputSelect from './RowInputSelect';\r\nimport DatesFragment from './DatesFragment';\r\nimport ValidationMessagesFragment from './ValidationMessagesFragment';\r\n\r\nconst _sortOptions = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Hot Tab\", value: \"hot\" },\r\n  { caption: \"Hot Week Tab\", value: \"week\" },\r\n  { caption: \"Hot Month Tab\", value: \"month\" }\r\n]\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate\r\n\r\nconst DialogType2 = React.createClass({\r\n  ...WithValidation,\r\n\r\n  displayName : 'DialogType2',\r\n\r\n  getInitialState(){\r\n    this.stock = null;\r\n    this.sortByItem = {};\r\n    return {\r\n      validationMessages : []\r\n    };\r\n  },\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  },\r\n\r\n _handlerSelectSortBy(item){\r\n   this.sortByItem = item;\r\n },\r\n\r\n\r\n _handlerDefault(){\r\n    this.datesFragment.setValues(_initFromDate, _initToDate);\r\n    this.setState({ validationMessages: [] });\r\n },\r\n\r\n _handlerClear(){\r\n    this.inputRepo.setValue('');\r\n    this.setState({ validationMessages: [] });\r\n },\r\n\r\n _handlerLoad(){\r\n    this._handlerLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  },\r\n\r\n  _createValidationMessages(){\r\n      let msg = [];\r\n\r\n      const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n      if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n      msg.isValid = (msg.length === 0) ? true : false;\r\n      return msg;\r\n  },\r\n _createLoadOption(){\r\n   const repo = this.inputRepo.getValue()\r\n       , { fromDate, toDate } = this.datesFragment.getValues()\r\n       , _fromDate = DateUtils.toUTCMillis(fromDate)/1000\r\n       , _toDate = DateUtils.toUTCMillis(toDate)/1000\r\n       , { requestType } = this.props\r\n       , { value } = this.sortByItem\r\n\r\n   return {\r\n     repo, requestType,\r\n     sort : value,\r\n     fromdate : _fromDate,\r\n     todate : _toDate\r\n   };\r\n },\r\n\r\n _handlerClose(){\r\n    this._handlerCloseWithValidation(\r\n       this._createValidationMessages\r\n    );\r\n  },\r\n\r\n  render(){\r\n    const {\r\n            caption, isShow, onShow,\r\n            oneTitle, onePlaceholder\r\n          } = this.props\r\n        , _commandButtons = [\r\n            <ToolBarButton\r\n              key=\"a\"\r\n              type=\"TypeC\"\r\n              caption=\"Default\"\r\n              onClick={this._handlerDefault}\r\n             />,\r\n            <ToolBarButton\r\n              key=\"b\"\r\n              type=\"TypeC\"\r\n              caption=\"Clear\"\r\n              onClick={this._handlerClear}\r\n             />,\r\n             <ToolBarButton\r\n               key=\"c\"\r\n               type=\"TypeC\"\r\n               caption=\"Load\"\r\n               onClick={this._handlerLoad}\r\n              />\r\n           ]\r\n        , { validationMessages } = this.state;\r\n\r\n    return (\r\n       <Dialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={_commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handlerClose}\r\n       >\r\n        <RowInputText\r\n           ref={c => this.inputRepo = c}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n        />\r\n        <RowInputSelect\r\n           caption=\"Sort By:\"\r\n           placeholder=\"Default: Hot Week Tab\"\r\n           options={_sortOptions}\r\n           onSelect={this._handlerSelectSortBy}\r\n        />\r\n        <DatesFragment\r\n            ref={c => this.datesFragment = c}\r\n            initFromDate={_initFromDate}\r\n            initToDate={_initToDate}\r\n            //msgOnNotValidFormat={msgOnNotValidFormat}\r\n            onTestDate={_onTestDate}\r\n        />\r\n        <ValidationMessagesFragment\r\n           validationMessages={validationMessages}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n});\r\n\r\nexport default DialogType2;\r\n"]}