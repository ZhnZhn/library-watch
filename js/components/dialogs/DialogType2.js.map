{"version":3,"file":"DialogType2.js","names":["_uiApi","require","_memoFn","_useToggle","_interopRequireDefault","_useDialog","_useSelectItem","_useDialogButtons","_getRefItemValue","_Dialog","_DialogCell","_helperFns","_jsxRuntime","_SORT_OPTIONS","caption","value","_createValidationMessages","isValid","datesMsg","msg","push","length","DialogType2","memoIsShow","_ref","isShow","requestType","oneTitle","onePlaceholder","onShow","onLoad","onClose","isShowDate","toggleIsShowDate","useToggle","MENU_MODEL","TOOLBAR_BUTTONS","isToolbar","isShowLabels","useDialog","_refInputOne","useRef","_refInputDates","_refSortBy","_hSelectSortBy","useSelectItem","validationMessages","COMMAND_BUTTONS","hClose","hLoad","useDialogButtons","setValidationMessages","clearValidationMessages","repo","getRefValue","getValue","_datesInst","getValidation","fromDate","toDate","getValues","_validationMessage","sort","getRefItemValue","fromdate","ymdToUTCSecond","todate","jsxs","default","menuModel","toolbarButtons","commandButtons","children","jsx","RowInputText","refEl","isShowLabel","placeholder","onEnter","RowInputSelect","options","onSelect","RowInputDatePeriod","_default","exports"],"sources":["../../../src/components/dialogs/DialogType2.jsx"],"sourcesContent":["import {\r\n  useRef,\r\n  getRefValue\r\n} from '../uiApi';\r\n\r\nimport { memoIsShow } from '../hoc/memoFn';\r\n\r\nimport useToggle from '../hooks/useToggle';\r\nimport useDialog from './useDialog';\r\nimport useSelectItem from './useSelectItem';\r\nimport useDialogButtons from './useDialogButtons';\r\nimport getRefItemValue from './getRefItemValue';\r\n\r\nimport Dialog from './Dialog';\r\nimport D from './DialogCell';\r\n\r\nimport { ymdToUTCSecond } from './helperFns';\r\n\r\nconst _SORT_OPTIONS = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Hot Tab\", value: \"hot\" },\r\n  { caption: \"Hot Week Tab\", value: \"week\" },\r\n  { caption: \"Hot Month Tab\", value: \"month\" }\r\n];\r\n\r\nconst _createValidationMessages = (\r\n  isValid,\r\n  datesMsg\r\n) => {\r\n   const msg = [];\r\n   if (!isValid) {\r\n     msg.push(datesMsg);\r\n   }\r\n   msg.isValid = (msg.length === 0);\r\n   return msg;\r\n};\r\n\r\nconst DialogType2 = memoIsShow(({\r\n  isShow,\r\n  caption,\r\n  requestType,\r\n  oneTitle,\r\n  onePlaceholder,\r\n  onShow,\r\n  onLoad,\r\n  onClose\r\n}) => {\r\n  const [\r\n    isShowDate,\r\n    toggleIsShowDate\r\n  ] = useToggle()\r\n  , [\r\n    MENU_MODEL,\r\n    TOOLBAR_BUTTONS,\r\n    isToolbar,\r\n    isShowLabels\r\n  ] = useDialog(toggleIsShowDate)\r\n  , _refInputOne = useRef()\r\n  , _refInputDates = useRef()\r\n  , [\r\n    _refSortBy,\r\n    _hSelectSortBy\r\n  ] = useSelectItem()\r\n  , [\r\n    validationMessages,\r\n    COMMAND_BUTTONS,\r\n    hClose,\r\n    hLoad\r\n  ] = useDialogButtons((\r\n    setValidationMessages,\r\n    clearValidationMessages\r\n  ) => {\r\n    const repo = getRefValue(_refInputOne).getValue()\r\n    , _datesInst = getRefValue(_refInputDates)\r\n    , { isValid, datesMsg } = _datesInst.getValidation()\r\n    , { fromDate, toDate } = _datesInst.getValues()\r\n    , _validationMessage = _createValidationMessages(\r\n      isValid, datesMsg\r\n    )\r\n    if (_validationMessage.isValid){\r\n      onLoad({\r\n        repo,\r\n        requestType,\r\n        sort: getRefItemValue(_refSortBy),\r\n        fromdate: ymdToUTCSecond(fromDate),\r\n        todate: ymdToUTCSecond(toDate)\r\n      });\r\n      clearValidationMessages()\r\n    } else {\r\n      setValidationMessages(_validationMessage)\r\n    }\r\n  }, onClose);\r\n\r\n  return (\r\n    <Dialog\r\n       isShow={isShow}\r\n       isToolbar={isToolbar}\r\n       caption={caption}\r\n       menuModel={MENU_MODEL}\r\n       toolbarButtons={TOOLBAR_BUTTONS}\r\n       commandButtons={COMMAND_BUTTONS}\r\n       validationMessages={validationMessages}\r\n       onShow={onShow}\r\n       onClose={hClose}\r\n    >\r\n      <D.RowInputText\r\n         refEl={_refInputOne}\r\n         isShowLabel={isShowLabels}\r\n         caption={oneTitle}\r\n         placeholder={onePlaceholder}\r\n         onEnter={hLoad}\r\n      />\r\n      <D.RowInputSelect\r\n         isShowLabel={isShowLabels}\r\n         caption=\"Sort By\"\r\n         placeholder=\"Default: Hot Week Tab\"\r\n         options={_SORT_OPTIONS}\r\n         onSelect={_hSelectSortBy}\r\n      />\r\n      <D.RowInputDatePeriod\r\n        refEl={_refInputDates}\r\n        isShow={isShowDate}\r\n        isShowLabels={isShowLabels}\r\n      />\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default DialogType2\r\n"],"mappings":"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","ignoreList":[]}