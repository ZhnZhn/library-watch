{"version":3,"sources":["../../../src/components/dialogs/DialogType2.jsx"],"names":["_sortOptions","caption","value","_initFromDate","DateUtils","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType2","withValidationLoad","props","_handleSelectSortBy","item","sortByItem","_handleDefault","datesFragment","setValues","setState","validationMessages","_handleClear","inputRepo","setValue","_handleLoad","_handleLoadWithValidation","_createValidationMessages","_createLoadOption","msg","getValidation","isValid","datesMsg","concat","length","getValue","getValues","fromDate","toDate","_fromDate","toUTCMillis","_toDate","requestType","repo","sort","fromdate","todate","_handleClose","_handleCloseWithValidation","stock","_commandButtons","state","nextProps","nextState","isShow","onShow","oneTitle","onePlaceholder","c","Component"],"mappings":"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","file":"DialogType2.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport DateUtils from '../../utils/DateUtils'\r\n\r\n//import WithValidation from './WithValidation'\r\nimport Dialog from '../zhnMoleculs/Dialog'\r\nimport ToolBarButton from '../header/ToolBarButton'\r\nimport RowInputText from './RowInputText'\r\nimport RowInputSelect from './RowInputSelect'\r\nimport DatesFragment from './DatesFragment'\r\nimport ValidationMessagesFragment from './ValidationMessagesFragment'\r\n\r\nimport withValidationLoad from './decorators/withValidationLoad'\r\n\r\nconst _sortOptions = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Hot Tab\", value: \"hot\" },\r\n  { caption: \"Hot Week Tab\", value: \"week\" },\r\n  { caption: \"Hot Month Tab\", value: \"month\" }\r\n]\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate\r\n\r\n\r\n@withValidationLoad\r\nclass DialogType2 extends Component{\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    requestType: PropTypes.string,\r\n    oneTitle: PropTypes.string,\r\n    onePlaceholder: PropTypes.string,\r\n    isShow: PropTypes.bool,\r\n    onShow: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.stock = null\r\n    this.sortByItem = {}\r\n    this._commandButtons = [\r\n        <ToolBarButton\r\n          type=\"TypeC\"\r\n          caption=\"Default\"\r\n          onClick={this._handleDefault}\r\n         />,\r\n        <ToolBarButton\r\n          type=\"TypeC\"\r\n          caption=\"Clear\"\r\n          onClick={this._handleClear}\r\n         />,\r\n         <ToolBarButton\r\n           type=\"TypeC\"\r\n           caption=\"Load\"\r\n           onClick={this._handleLoad}\r\n          />\r\n       ]\r\n    this.state = {\r\n      validationMessages : []\r\n    }\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n _handleSelectSortBy = (item) => {\r\n   this.sortByItem = item\r\n }\r\n\r\n _handleDefault = () => {\r\n    this.datesFragment.setValues(_initFromDate, _initToDate)\r\n    this.setState({ validationMessages: [] })\r\n }\r\n\r\n _handleClear = () => {\r\n    this.inputRepo.setValue('')\r\n    this.setState({ validationMessages: [] })\r\n }\r\n\r\n _handleLoad = () => {\r\n    this._handleLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n\r\n  _createValidationMessages = () => {\r\n      let msg = [];\r\n\r\n      const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n      if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n      msg.isValid = (msg.length === 0) ? true : false;\r\n      return msg;\r\n  }\r\n _createLoadOption = () => {\r\n   const repo = this.inputRepo.getValue()\r\n       , { fromDate, toDate } = this.datesFragment.getValues()\r\n       , _fromDate = DateUtils.toUTCMillis(fromDate)/1000\r\n       , _toDate = DateUtils.toUTCMillis(toDate)/1000\r\n       , { requestType } = this.props\r\n       , { value } = this.sortByItem;\r\n\r\n   return {\r\n     repo, requestType,\r\n     sort : value,\r\n     fromdate : _fromDate,\r\n     todate : _toDate\r\n   };\r\n }\r\n\r\n _handleClose = () => {\r\n    this._handleCloseWithValidation(\r\n       this._createValidationMessages\r\n    )\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            caption, isShow, onShow,\r\n            oneTitle, onePlaceholder\r\n          } = this.props\r\n        , { validationMessages } = this.state;\r\n\r\n    return (\r\n       <Dialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n        <RowInputText\r\n           ref={c => this.inputRepo = c}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n        />\r\n        <RowInputSelect\r\n           caption=\"Sort By:\"\r\n           placeholder=\"Default: Hot Week Tab\"\r\n           options={_sortOptions}\r\n           onSelect={this._handleSelectSortBy}\r\n        />\r\n        <DatesFragment\r\n            ref={c => this.datesFragment = c}\r\n            initFromDate={_initFromDate}\r\n            initToDate={_initToDate}\r\n            onTestDate={_onTestDate}\r\n        />\r\n        <ValidationMessagesFragment\r\n           validationMessages={validationMessages}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType2\r\n"]}