{"version":3,"sources":["../../../src/components/dialogs/DialogType2.jsx"],"names":["crMenuMore","helperFns","crButtons","_sortOptions","caption","value","_initFromDate","DateUtils","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType2","Decor","withToolbar","withValidationLoad","props","_handleSelectSortBy","item","sortByItem","_handleDefault","datesFragment","setValues","setState","validationMessages","_handleClear","inputOne","setValue","_handleLoad","_handleLoadWithValidation","_createValidationMessages","_createLoadOption","msg","getValidation","isValid","datesMsg","concat","length","getValue","getValues","fromDate","toDate","_fromDate","toUTCMillis","_toDate","requestType","repo","sort","fromdate","todate","_handleClose","_handleCloseWithValidation","_refInputOne","c","_refDatesFragment","stock","toolbarButtons","_createType2WithToolbar","hasDate","_menuMore","toggleDates","_clickDateWithToolbar","toggleLabels","_clickLabelWithToolbar","toggleToolBar","_toggleWithToolbar","_commandButtons","inst","isDefault","state","isToolbar","isShowLabels","isShowDate","nextProps","nextState","isShow","onShow","oneTitle","onePlaceholder","Component"],"mappings":"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","file":"DialogType2.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport DateUtils from '../../utils/DateUtils'\r\n\r\nimport D from './DialogCell'\r\nimport Decor from './decorators/Decorators'\r\nimport helperFns from './helperFns/helperFns'\r\n\r\nconst { crMenuMore, crButtons } = helperFns;\r\n\r\nconst _sortOptions = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Hot Tab\", value: \"hot\" },\r\n  { caption: \"Hot Week Tab\", value: \"week\" },\r\n  { caption: \"Hot Month Tab\", value: \"month\" }\r\n];\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate;\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\nclass DialogType2 extends Component{\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    requestType: PropTypes.string,\r\n    oneTitle: PropTypes.string,\r\n    onePlaceholder: PropTypes.string,\r\n    isShow: PropTypes.bool,\r\n    onShow: PropTypes.func\r\n  }\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    this.stock = null\r\n    this.sortByItem = {}\r\n    this.toolbarButtons = this._createType2WithToolbar(props, {\r\n      hasDate: true\r\n    })\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleDates: this._clickDateWithToolbar,\r\n      toggleLabels: this._clickLabelWithToolbar,\r\n      toggleToolBar: this._toggleWithToolbar,\r\n    })\r\n    this._commandButtons = crButtons({\r\n      inst: this, isDefault: true\r\n    })\r\n    this.state = {\r\n      isToolbar: true,\r\n      isShowLabels: true,\r\n      isShowDate: true,\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n _handleSelectSortBy = (item) => {\r\n   this.sortByItem = item\r\n }\r\n\r\n _handleDefault = () => {\r\n    this.datesFragment.setValues(_initFromDate, _initToDate)\r\n    this.setState({ validationMessages: [] })\r\n }\r\n\r\n _handleClear = () => {\r\n    this.inputOne.setValue('')\r\n    this.setState({ validationMessages: [] })\r\n }\r\n\r\n _handleLoad = () => {\r\n    this._handleLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n\r\n  _createValidationMessages = () => {\r\n      let msg = [];\r\n\r\n      const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n      if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n      msg.isValid = (msg.length === 0) ? true : false;\r\n      return msg;\r\n  }\r\n _createLoadOption = () => {\r\n   const repo = this.inputOne.getValue()\r\n       , { fromDate, toDate } = this.datesFragment.getValues()\r\n       , _fromDate = DateUtils.toUTCMillis(fromDate)/1000\r\n       , _toDate = DateUtils.toUTCMillis(toDate)/1000\r\n       , { requestType } = this.props\r\n       , { value } = this.sortByItem;\r\n\r\n   return {\r\n     repo, requestType,\r\n     sort: value,\r\n     fromdate: _fromDate,\r\n     todate: _toDate\r\n   };\r\n }\r\n\r\n _handleClose = () => {\r\n    this._handleCloseWithValidation(\r\n       this._createValidationMessages\r\n    )\r\n  }\r\n\r\n  _refInputOne = c => this.inputOne = c\r\n  _refDatesFragment = c => this.datesFragment = c\r\n\r\n  render(){\r\n    const {\r\n        caption, isShow, onShow,\r\n        oneTitle, onePlaceholder\r\n      } = this.props\r\n    , {\r\n      isToolbar,\r\n      isShowLabels,\r\n      isShowDate,\r\n      validationMessages\r\n    } = this.state;\r\n\r\n    return (\r\n       <D.DraggableDialog\r\n           isShow={isShow}\r\n           caption={caption}\r\n           menuModel={this._menuMore}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n         <D.Toolbar\r\n            isShow={isToolbar}\r\n            buttons={this.toolbarButtons}\r\n         />\r\n        <D.RowInputText\r\n           ref={this._refInputOne}\r\n           isShowLabel={isShowLabels}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n           onEnter={this._handleLoad}\r\n        />\r\n        <D.RowInputSelect\r\n           isShowLabel={isShowLabels}\r\n           caption=\"Sort By\"\r\n           placeholder=\"Default: Hot Week Tab\"\r\n           options={_sortOptions}\r\n           onSelect={this._handleSelectSortBy}\r\n        />\r\n        <D.ShowHide isShow={isShowDate}>\r\n          <D.Dates\r\n              ref={this._refDatesFragment}\r\n              isShowLabels={isShowLabels}\r\n              initFromDate={_initFromDate}\r\n              initToDate={_initToDate}\r\n              onTestDate={_onTestDate}\r\n          />\r\n        </D.ShowHide>\r\n        <D.ValidationMessages\r\n           validationMessages={validationMessages}\r\n        />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType2\r\n"]}