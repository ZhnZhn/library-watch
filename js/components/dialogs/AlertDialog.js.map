{"version":3,"sources":["../../../src/components/dialogs/AlertDialog.jsx"],"names":["styles","DialogStyles","STYLE","CAPTION","display","width","paddingLeft","color","fontSize","fontWeight","lineHeight","ITEM_ID","DESCR","whiteSpace","ELLIPSIS","AlertDialog","nextProps","nextState","props","isShow","data","onClose","alertCaption","alertItemId","alertDescr","_alertItemId","substring","rowDiv","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA;;;;AAGA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,sBAAf;;AAEA,IAAMC,QAAQ;AACZC,WAAU;AACRC,aAAU,cADF;AAERC,WAAQ,OAFA;AAGRC,iBAAc,MAHN;AAIRC,WAAQ,SAJA;AAKRC,cAAU,MALF;AAMRC,gBAAa,MANL;AAORC,gBAAa;AAPL,GADE;AAUZC,WAAU;AACRJ,WAAO,uBADC;AAERE,gBAAa;AAFL,GAVE;AAcZG,SAAQ;AACNL,WAAO,MADD;AAENF,WAAQ,OAFF;AAGNC,iBAAc,MAHR;AAING,gBAAY,MAJN;AAKNC,gBAAa,GALP;AAMNG,gBAAY;AANN;AAdI,CAAd;;AAwBA,IAAMC,WAAW,KAAjB;;IAEMC,W;;;;;;;;;;0CAiBkBC,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKE,KAAnB,IACAF,UAAUG,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MADpC,EAC4C;AAC1C,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;AAtBD;;;;;;;;;;;;;;6BAwBQ;AAAA,mBAC4B,KAAKD,KADjC;AAAA,UACEC,MADF,UACEA,MADF;AAAA,UACUC,IADV,UACUA,IADV;AAAA,UACgBC,OADhB,UACgBA,OADhB;AAAA,UAECC,YAFD,GAE0CF,IAF1C,CAECE,YAFD;AAAA,UAEeC,WAFf,GAE0CH,IAF1C,CAEeG,WAFf;AAAA,UAE4BC,UAF5B,GAE0CJ,IAF1C,CAE4BI,UAF5B;AAAA,UAGAC,YAHA,GAGeF,YAAYG,SAAZ,CAAsB,CAAtB,EAAwB,EAAxB,IAA8BZ,QAH7C;;AAIN,aACE;AAAC,6BAAD;AAAA;AACE,mBAAQ,OADV;AAEE,kBAAQK,MAFV;AAGE,mBAASE;AAHX;AAKG;AAAA;AAAA,YAAK,OAAOrB,OAAO2B,MAAnB;AACG;AAAA;AAAA,cAAM,OAAOzB,MAAMC,OAAnB;AACGmB,2BAAe,IADlB;AAEE;AAAA;AAAA,gBAAM,OAAOpB,MAAMS,OAAnB,EAA4B,OAAOY,WAAnC;AACGE;AADH;AAFF;AADH,SALH;AAaG;AAAA;AAAA,YAAK,OAAOzB,OAAO2B,MAAnB;AACG;AAAA;AAAA,cAAG,OAAOzB,MAAMU,KAAhB;AAAwBY;AAAxB;AADH;AAbH,OADF;AAmBD;;;EAhDuBI,gB,UAYjBC,Y,GAAe;AACpBT,QAAM,EADc;AAEpBC,WAAS,mBAAM,CAAE;AAFG,C;kBAwCTN,W","file":"AlertDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport ModalDialog from '../zhnMoleculs/ModalDialog'\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst STYLE = {\r\n  CAPTION : {\r\n    display : 'inline-block',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    color : '#F44336',\r\n    fontSize: '18px',\r\n    fontWeight : 'bold',\r\n    lineHeight : 2\r\n  },\r\n  ITEM_ID : {\r\n    color: 'rgba(164, 135, 212,1)',\r\n    fontWeight : 'bold'\r\n  },\r\n  DESCR : {\r\n    color: 'gray',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    fontWeight: 'bold',\r\n    lineHeight : 1.4,\r\n    whiteSpace: 'pre-line'\r\n  }\r\n}\r\n\r\nconst ELLIPSIS = '...';\r\n\r\nclass AlertDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      alertCaption: PropTypes.string,\r\n      alertItemId: PropTypes.string,\r\n      alertDescr: PropTypes.string\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    data: {},\r\n    onClose: () => {}\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props &&\r\n        nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data, onClose } = this.props\r\n        , {alertCaption, alertItemId, alertDescr} = data\r\n        , _alertItemId = alertItemId.substring(0,20) + ELLIPSIS;\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Alert\"\r\n        isShow={isShow}\r\n        onClose={onClose}\r\n      >\r\n         <div style={styles.rowDiv}>\r\n            <span style={STYLE.CAPTION}>\r\n              {alertCaption + ': '}\r\n              <span style={STYLE.ITEM_ID} title={alertItemId}>\r\n                {_alertItemId}\r\n              </span>\r\n            </span>\r\n         </div>\r\n         <div style={styles.rowDiv}>\r\n            <p style={STYLE.DESCR}>{alertDescr}</p>\r\n         </div>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default AlertDialog\r\n"]}