{"version":3,"sources":["../../../src/components/dialogs/AlertDialog.jsx"],"names":["styles","Styles","CAPTION","display","width","paddingLeft","color","fontSize","fontWeight","lineHeight","ITEM_ID","DESCR","whiteSpace","ELLIPSIS","AlertDialog","createClass","shouldComponentUpdate","nextProps","nextState","props","isShow","render","data","onClose","alertCaption","alertItemId","alertDescr","_alertItemId","substring","rowDiv"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,+BAAN;;AAEA,IAAMC,SAAS;AACbC,WAAU;AACRC,aAAU,cADF;AAERC,WAAQ,OAFA;AAGRC,iBAAc,MAHN;AAIRC,WAAQ,SAJA;AAKRC,cAAU,MALF;AAMRC,gBAAa,MANL;AAORC,gBAAa;AAPL,GADG;AAUbC,WAAU;AACRJ,WAAO,uBADC;AAERE,gBAAa;AAFL,GAVG;AAcbG,SAAQ;AACNL,WAAO,MADD;AAENF,WAAQ,OAFF;AAGNC,iBAAc,MAHR;AAING,gBAAY,MAJN;AAKNC,gBAAa,GALP;AAMNG,gBAAY;AANN;AAdK,CAAf;;AAwBA,IAAMC,WAAW,KAAjB;;AAEA,IAAMC,cAAc,gBAAMC,WAAN,CAAkB;AAAA;AAEpCC,uBAFoC,iCAEdC,SAFc,EAEHC,SAFG,EAEO;AACzC,QAAID,cAAc,KAAKE,KAAnB,IAA4BF,UAAUG,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MAAhE,EAAwE;AACtE,aAAO,KAAP;AACD;AACD,WAAO,IAAP;AACD,GAPmC;AASpCC,QAToC,oBAS5B;AAAA,iBAC0B,KAAKF,KAD/B;AAAA,QACCC,MADD,UACCA,MADD;AAAA,QACSE,IADT,UACSA,IADT;AAAA,QACeC,OADf,UACeA,OADf;AAAA,QAECC,YAFD,GAE0CF,IAF1C,CAECE,YAFD;AAAA,QAEeC,WAFf,GAE0CH,IAF1C,CAEeG,WAFf;AAAA,QAE4BC,UAF5B,GAE0CJ,IAF1C,CAE4BI,UAF5B;AAAA,QAGAC,YAHA,GAGeF,YAAYG,SAAZ,CAAsB,CAAtB,EAAwB,EAAxB,IAA8Bf,QAH7C;;AAIN,WACE;AAAA;AAAA;AACE,iBAAQ,OADV;AAEE,gBAAQO,MAFV;AAGE,iBAASG;AAHX;AAKG;AAAA;AAAA,UAAK,OAAOvB,OAAO6B,MAAnB,EAA2B,KAAI,GAA/B;AACG;AAAA;AAAA,YAAM,OAAO5B,OAAOC,OAApB;AACGsB,yBAAe,IADlB;AAEE;AAAA;AAAA,cAAM,OAAOvB,OAAOS,OAApB,EAA6B,OAAOe,WAApC;AACGE;AADH;AAFF;AADH,OALH;AAaG;AAAA;AAAA,UAAK,OAAO3B,OAAO6B,MAAnB,EAA2B,KAAI,GAA/B;AACG;AAAA;AAAA,YAAG,OAAO5B,OAAOU,KAAjB;AAAyBe;AAAzB;AADH;AAbH,KADF;AAoBD;AAjCmC,CAAlB,CAApB;;kBAoCeZ,W","file":"AlertDialog.js","sourcesContent":["import React from 'react';\r\n\r\nimport ModalDialog from '../zhnMoleculs/ModalDialog';\r\nimport DialogStyles from '../styles/DialogStyles'\r\n\r\nconst styles = DialogStyles;\r\n\r\nconst Styles = {\r\n  CAPTION : {\r\n    display : 'inline-block',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    color : '#F44336',\r\n    fontSize: '18px',\r\n    fontWeight : 'bold',\r\n    lineHeight : 2\r\n  },\r\n  ITEM_ID : {\r\n    color: 'rgba(164, 135, 212,1)',\r\n    fontWeight : 'bold'\r\n  },\r\n  DESCR : {\r\n    color: 'gray',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    fontWeight: 'bold',\r\n    lineHeight : 1.4,\r\n    whiteSpace: 'pre-line'\r\n  }\r\n}\r\n\r\nconst ELLIPSIS = '...';\r\n\r\nconst AlertDialog = React.createClass({\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  render(){\r\n    const {isShow, data, onClose} = this.props\r\n        , {alertCaption, alertItemId, alertDescr} = data\r\n        , _alertItemId = alertItemId.substring(0,20) + ELLIPSIS\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Alert\"\r\n        isShow={isShow}\r\n        onClose={onClose}\r\n      >\r\n         <div style={styles.rowDiv} key=\"1\">\r\n            <span style={Styles.CAPTION}>\r\n              {alertCaption + ': '}\r\n              <span style={Styles.ITEM_ID} title={alertItemId}>\r\n                {_alertItemId}\r\n              </span>\r\n            </span>\r\n         </div>\r\n         <div style={styles.rowDiv} key=\"2\">\r\n            <p style={Styles.DESCR}>{alertDescr}</p>\r\n         </div>\r\n\r\n      </ModalDialog>\r\n    )\r\n  }\r\n});\r\n\r\nexport default AlertDialog\r\n"]}