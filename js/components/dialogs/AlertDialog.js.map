{"version":3,"sources":["../../../src/components/dialogs/AlertDialog.jsx"],"names":["S","CAPTION","display","width","paddingLeft","color","fontSize","fontWeight","lineHeight","ITEM_ID","DESCR","whiteSpace","ELLIPSIS","_crItemId","str","substring","AlertDialog","nextProps","nextState","props","isShow","data","onClose","alertCaption","alertItemId","alertDescr","caption","itemId","descr","_caption","_itemId","_descr","styles","rowDiv","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA;;;;AAGA;;;;AACA;;;;;;AAEA,IAAMA,IAAI;AACRC,WAAU;AACRC,aAAU,cADF;AAERC,WAAQ,OAFA;AAGRC,iBAAc,MAHN;AAIRC,WAAQ,SAJA;AAKRC,cAAU,MALF;AAMRC,gBAAa,MANL;AAORC,gBAAa;AAPL,GADF;AAURC,WAAU;AACRJ,WAAO,uBADC;AAERE,gBAAa;AAFL,GAVF;AAcRG,SAAQ;AACNL,WAAO,MADD;AAENF,WAAQ,OAFF;AAGNC,iBAAc,MAHR;AAING,gBAAY,MAJN;AAKNC,gBAAa,GALP;AAMNG,gBAAY;AANN;AAdA,CAAV;;AAwBA,IAAMC,WAAW,KAAjB;AACA,IAAMC,YAAY,SAAZA,SAAY;AAAA,SAAOC,MACrBA,IAAIC,SAAJ,CAAc,CAAd,EAAgB,EAAhB,IAAsBH,QADD,GAErB,EAFc;AAAA,CAAlB;;IAKMI,W;;;;;;;;;;0CAiBkBC,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKE,KAAnB,IACAF,UAAUG,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MADpC,EAC4C;AAC1C,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;AAtBD;;;;;;;;;;;;;;6BAwBQ;AAAA,mBAC4B,KAAKD,KADjC;AAAA,UACEC,MADF,UACEA,MADF;AAAA,UACUC,IADV,UACUA,IADV;AAAA,UACgBC,OADhB,UACgBA,OADhB;AAAA,iBAKFD,QAAQ,EALN;AAAA,UAGJE,YAHI,QAGJA,YAHI;AAAA,UAGUC,WAHV,QAGUA,WAHV;AAAA,UAGuBC,UAHvB,QAGuBA,UAHvB;AAAA,UAIJC,OAJI,QAIJA,OAJI;AAAA,UAIKC,MAJL,QAIKA,MAJL;AAAA,UAIaC,KAJb,QAIaA,KAJb;AAAA,UAMJC,QANI,GAMON,gBAAgBG,OAAhB,IAA2B,EANlC;AAAA,UAOJI,OAPI,GAOMjB,UAAUW,eAAeG,MAAzB,CAPN;AAAA,UAQJI,MARI,GAQKN,cAAcG,KAAd,IAAuB,EAR5B;;AASN,aACE;AAAC,6BAAD;AAAA;AACE,mBAAQ,OADV;AAEE,kBAAQR,MAFV;AAGE,mBAASE;AAHX;AAKG;AAAA;AAAA,YAAK,OAAOU,uBAAOC,MAAnB;AACG;AAAA;AAAA,cAAM,OAAOjC,EAAEC,OAAf;AACE;AAAA;AAAA;AAAO4B;AAAP,aADF;AAEE;AAAA;AAAA;AAAA;AAAA,aAFF;AAGE;AAAA;AAAA,gBAAM,OAAO7B,EAAES,OAAf,EAAwB,OAAOqB,OAA/B;AACGA;AADH;AAHF;AADH,SALH;AAcG;AAAA;AAAA,YAAK,OAAOE,uBAAOC,MAAnB;AACG;AAAA;AAAA,cAAG,OAAOjC,EAAEU,KAAZ;AAAoBqB;AAApB;AADH;AAdH,OADF;AAoBD;;;EAtDuBG,gB,UAYjBC,Y,GAAe;AACpBd,QAAM,EADc;AAEpBC,WAAS,mBAAM,CAAE;AAFG,C;kBA8CTN,W","file":"AlertDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport ModalDialog from '../zhnMoleculs/ModalDialog'\r\nimport styles from '../styles/DialogStyles'\r\n\r\nconst S = {\r\n  CAPTION : {\r\n    display : 'inline-block',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    color : '#F44336',\r\n    fontSize: '18px',\r\n    fontWeight : 'bold',\r\n    lineHeight : 2\r\n  },\r\n  ITEM_ID : {\r\n    color: 'rgba(164, 135, 212,1)',\r\n    fontWeight : 'bold'\r\n  },\r\n  DESCR : {\r\n    color: 'gray',\r\n    width : '400px',\r\n    paddingLeft : '10px',\r\n    fontWeight: 'bold',\r\n    lineHeight : 1.4,\r\n    whiteSpace: 'pre-line'\r\n  }\r\n};\r\n\r\nconst ELLIPSIS = '...';\r\nconst _crItemId = str => str\r\n  ? str.substring(0,20) + ELLIPSIS\r\n  : '';\r\n\r\n\r\nclass AlertDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      alertCaption: PropTypes.string,\r\n      alertItemId: PropTypes.string,\r\n      alertDescr: PropTypes.string\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    data: {},\r\n    onClose: () => {}\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props &&\r\n        nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data, onClose } = this.props\r\n    , {\r\n      alertCaption, alertItemId, alertDescr,\r\n      caption, itemId, descr\r\n    } = data || {}\r\n    , _caption = alertCaption || caption || ''\r\n    , _itemId = _crItemId(alertItemId || itemId)\r\n    , _descr = alertDescr || descr || '';\r\n    return (\r\n      <ModalDialog\r\n        caption=\"Alert\"\r\n        isShow={isShow}\r\n        onClose={onClose}\r\n      >\r\n         <div style={styles.rowDiv}>\r\n            <span style={S.CAPTION}>\r\n              <span>{_caption}</span>\r\n              <span>:</span>\r\n              <span style={S.ITEM_ID} title={_itemId}>\r\n                {_itemId}\r\n              </span>\r\n            </span>\r\n         </div>\r\n         <div style={styles.rowDiv}>\r\n            <p style={S.DESCR}>{_descr}</p>\r\n         </div>\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AlertDialog\r\n"]}