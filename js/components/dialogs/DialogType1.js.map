{"version":3,"sources":["../../../src/components/dialogs/DialogType1.jsx"],"names":["DialogType1","createClass","displayName","getInitialState","stock","validationMessages","shouldComponentUpdate","nextProps","nextState","props","isShow","_handlerClear","inputRepo","setValue","setState","_handlerLoad","_handlerLoadWithValidation","_createValidationMessages","_createLoadOption","msg","value","getValue","concat","oneTitle","isValid","length","requestType","repo","_handlerClose","_handlerCloseWithValidation","render","caption","onShow","onePlaceholder","state","_commandButtons","c"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,gBAAMC,WAAN;;AAIlBC,eAAc,aAJI;;AAMlBC,iBANkB,6BAMD;AACf,SAAKC,KAAL,GAAa,IAAb;;AAEA,WAAO;AACLC,0BAAqB;AADhB,KAAP;AAGD,GAZiB;AAclBC,uBAdkB,iCAcIC,SAdJ,EAceC,SAdf,EAcyB;AACzC,QAAI,KAAKC,KAAL,KAAeF,SAAnB,EAA6B;AAC1B,UAAI,KAAKE,KAAL,CAAWC,MAAX,KAAsBH,UAAUG,MAApC,EAA2C;AACxC,eAAO,KAAP;AACF;AACH;AACD,WAAO,IAAP;AACD,GArBiB;AAuBnBC,eAvBmB,2BAuBJ;AACb,SAAKC,SAAL,CAAeC,QAAf,CAAwB,EAAxB;AACA,SAAKC,QAAL,CAAc,EAAET,oBAAoB,EAAtB,EAAd;AACD,GA1BkB;AA4BnBU,cA5BmB,0BA4BL;AACX,SAAKC,0BAAL,CACE,KAAKC,yBAAL,EADF,EAEE,KAAKC,iBAFP;AAID,GAjCiB;AAkClBD,2BAlCkB,uCAkCS;AACzB,QAAIE,MAAM,EAAV;;AAEA,QAAMC,QAAQ,KAAKR,SAAL,CAAeS,QAAf,EAAd;AACA,QAAI,CAACD,KAAL,EAAY;AACVD,YAAMA,IAAIG,MAAJ,CAAc,KAAKb,KAAL,CAAWc,QAAzB,kBAAN;AACD;;AAEDJ,QAAIK,OAAJ,GAAeL,IAAIM,MAAJ,KAAe,CAAhB,GAAqB,IAArB,GAA4B,KAA1C;AACA,WAAON,GAAP;AACD,GA5CiB;AA6ClBD,mBA7CkB,+BA6CC;AAAA,QACTQ,WADS,GACO,KAAKjB,KADZ,CACTiB,WADS;;AAEjB,WAAO;AACLC,YAAO,KAAKf,SAAL,CAAeS,QAAf,EADF;AAELK;AAFK,KAAP;AAID,GAnDiB;AAqDlBE,eArDkB,2BAqDH;AACZ,SAAKC,2BAAL,CACG,KAAKZ,yBADR;AAGD,GAzDgB;AA2DlBa,QA3DkB,oBA2DV;AAAA;;AAAA,iBAII,KAAKrB,KAJT;AAAA,QAEEsB,OAFF,UAEEA,OAFF;AAAA,QAEWrB,MAFX,UAEWA,MAFX;AAAA,QAEmBsB,MAFnB,UAEmBA,MAFnB;AAAA,QAGET,QAHF,UAGEA,QAHF;AAAA,QAGYU,cAHZ,UAGYA,cAHZ;AAAA,QAKE5B,kBALF,GAKyB,KAAK6B,KAL9B,CAKE7B,kBALF;AAAA,QAMA8B,eANA,GAMkB,CACrB;AACG,WAAI,GADP;AAEG,YAAK,OAFR;AAGG,eAAQ,OAHX;AAIG,eAAS,KAAKxB;AAJjB,MADqB,EAOrB;AACG,WAAI,GADP;AAEG,YAAK,OAFR;AAGG,eAAQ,MAHX;AAIG,eAAS,KAAKI;AAJjB,MAPqB,CANlB;;;AAqBN,WACG;AAAA;AAAA;AACI,iBAASgB,OADb;AAEI,gBAAQrB,MAFZ;AAGI,wBAAgByB,eAHpB;AAII,qBAAaH,MAJjB;AAKI,iBAAS,KAAKJ;AALlB;AAOC;AACG,aAAK;AAAA,iBAAK,MAAKhB,SAAL,GAAiBwB,CAAtB;AAAA,SADR;AAEG,iBAASb,QAFZ;AAGG,qBAAaU;AAHhB,QAPD;AAYC;AACG,4BAAoB5B;AADvB;AAZD,KADH;AAkBD;AAlGiB,GAApB;;kBAqGeL,W","file":"DialogType1.js","sourcesContent":["import React from 'react';\r\n\r\nimport WithValidation from './WithValidation';\r\nimport Dialog from '../zhnMoleculs/Dialog';\r\nimport ToolBarButton from '../header/ToolBarButton';\r\nimport RowInputText from './RowInputText';\r\nimport ValidationMessagesFragment from './ValidationMessagesFragment';\r\n\r\nconst DialogType1 = React.createClass({\r\n\r\n   ...WithValidation,\r\n\r\n  displayName : 'DialogType1',\r\n\r\n  getInitialState(){\r\n    this.stock = null;\r\n\r\n    return {\r\n      validationMessages : []\r\n    };\r\n  },\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  },\r\n\r\n _handlerClear(){\r\n   this.inputRepo.setValue('');\r\n   this.setState({ validationMessages: [] });\r\n },\r\n\r\n _handlerLoad(){\r\n    this._handlerLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  },\r\n  _createValidationMessages(){\r\n    let msg = [];\r\n\r\n    const value = this.inputRepo.getValue();\r\n    if (!value) {\r\n      msg = msg.concat(`${this.props.oneTitle} is required`);\r\n    }\r\n\r\n    msg.isValid = (msg.length === 0) ? true : false;\r\n    return msg;\r\n  },\r\n  _createLoadOption(){\r\n    const { requestType } = this.props;\r\n    return {\r\n      repo : this.inputRepo.getValue(),\r\n      requestType\r\n    }\r\n  },\r\n\r\n  _handlerClose(){\r\n     this._handlerCloseWithValidation(\r\n        this._createValidationMessages\r\n     );\r\n   },\r\n\r\n  render(){\r\n    const {\r\n            caption, isShow, onShow,\r\n            oneTitle, onePlaceholder\r\n          } = this.props\r\n        , { validationMessages } = this.state\r\n        , _commandButtons = [\r\n       <ToolBarButton\r\n          key=\"a\"\r\n          type=\"TypeC\"\r\n          caption=\"Clear\"\r\n          onClick={this._handlerClear}\r\n       />,\r\n       <ToolBarButton\r\n          key=\"b\"\r\n          type=\"TypeC\"\r\n          caption=\"Load\"\r\n          onClick={this._handlerLoad}\r\n       />\r\n    ];\r\n\r\n    return (\r\n       <Dialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={_commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handlerClose}\r\n       >\r\n        <RowInputText\r\n           ref={c => this.inputRepo = c}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n        />\r\n        <ValidationMessagesFragment\r\n           validationMessages={validationMessages}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n});\r\n\r\nexport default DialogType1;\r\n"]}