{"version":3,"sources":["../../../src/components/dialogs/DialogType1.jsx"],"names":["crMenuMore","helperFns","crButtons","DialogType1","Decor","dialog","props","_handleClear","inputOne","setValue","setState","validationMessages","_handleLoad","_handleLoadWithValidation","_createValidationMessages","_createLoadOption","msg","value","getValue","concat","oneTitle","isValid","length","requestType","repo","_handleClose","_handleCloseWithValidation","_refInputOne","c","stock","toolbarButtons","_createType2WithToolbar","_menuMore","toggleLabels","_clickLabelWithToolbar","toggleToolBar","_toggleWithToolbar","_commandButtons","inst","state","_withInitialState","shouldComponentUpdate","nextProps","nextState","isShow","render","caption","onShow","onePlaceholder","isToolbar","isShowLabels","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport Decor from './decorators/Decorators'\r\nimport helperFns from './helperFns/helperFns'\r\nimport D from './DialogCell'\r\n\r\nconst { crMenuMore, crButtons } = helperFns;\r\n\r\n@Decor.dialog\r\nclass DialogType1 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    requestType: PropTypes.string,\r\n    oneTitle: PropTypes.string,\r\n    onePlaceholder: PropTypes.string,\r\n    isShow: PropTypes.bool,\r\n    onShow: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.stock = null\r\n    this.toolbarButtons = this._createType2WithToolbar(props)\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleLabels: this._clickLabelWithToolbar,\r\n      toggleToolBar: this._toggleWithToolbar,\r\n    })\r\n    this._commandButtons = crButtons({ inst: this })\r\n    this.state = {\r\n      ...this._withInitialState()\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n _handleClear = () => {\r\n   this.inputOne.setValue('');\r\n   this.setState({ validationMessages: [] });\r\n }\r\n\r\n _handleLoad = () => {\r\n    this._handleLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n  _createValidationMessages = () => {\r\n    let msg = [];\r\n\r\n    const value = this.inputOne.getValue();\r\n    if (!value) {\r\n      msg = msg.concat(`${this.props.oneTitle} is required`)\r\n    }\r\n\r\n    msg.isValid = (msg.length === 0) ? true : false;\r\n    return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const { requestType } = this.props;\r\n    return {\r\n      repo : this.inputOne.getValue(),\r\n      requestType\r\n    };\r\n  }\r\n\r\n  _handleClose = () => {\r\n     this._handleCloseWithValidation(\r\n        this._createValidationMessages\r\n     )\r\n   }\r\n\r\n  _refInputOne = c => this.inputOne = c\r\n\r\n  render(){\r\n    const {\r\n      caption, isShow, onShow,\r\n      oneTitle, onePlaceholder\r\n    } = this.props\r\n    , {\r\n      isToolbar,\r\n      isShowLabels,\r\n      validationMessages\r\n    } = this.state;\r\n\r\n    return (\r\n       <D.DraggableDialog\r\n           isShow={isShow}\r\n           caption={caption}\r\n           menuModel={this._menuMore}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n        <D.Toolbar\r\n           isShow={isToolbar}\r\n           buttons={this.toolbarButtons}\r\n        />\r\n        <D.RowInputText\r\n           ref={this._refInputOne}\r\n           isShowLabel={isShowLabels}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n           onEnter={this._handleLoad}\r\n        />\r\n        <D.ValidationMessages\r\n           validationMessages={validationMessages}\r\n        />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType1\r\n"],"file":"DialogType1.js"}