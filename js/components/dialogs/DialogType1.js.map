{"version":3,"sources":["../../../src/components/dialogs/DialogType1.jsx"],"names":["DialogType1","withValidationLoad","props","_handleClear","inputOne","setValue","setState","validationMessages","_handleLoad","_handleLoadWithValidation","_createValidationMessages","_createLoadOption","msg","value","getValue","concat","oneTitle","isValid","length","requestType","repo","_handleClose","_handleCloseWithValidation","_refInputOne","c","stock","_commandButtons","inst","state","nextProps","nextState","isShow","caption","onShow","onePlaceholder","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAGMA,W,OADLC,4B;;;AAEC;;;;;;;;;;;AAWA,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA,wIACVA,KADU;;AAAA,UAkBnBC,YAlBmB,GAkBJ,YAAM;AACnB,YAAKC,QAAL,CAAcC,QAAd,CAAuB,EAAvB;AACA,YAAKC,QAAL,CAAc,EAAEC,oBAAoB,EAAtB,EAAd;AACD,KArBkB;;AAAA,UAuBnBC,WAvBmB,GAuBL,YAAM;AACjB,YAAKC,yBAAL,CACE,MAAKC,yBAAL,EADF,EAEE,MAAKC,iBAFP;AAID,KA5BiB;;AAAA,UA6BlBD,yBA7BkB,GA6BU,YAAM;AAChC,UAAIE,MAAM,EAAV;;AAEA,UAAMC,QAAQ,MAAKT,QAAL,CAAcU,QAAd,EAAd;AACA,UAAI,CAACD,KAAL,EAAY;AACVD,cAAMA,IAAIG,MAAJ,CAAc,MAAKb,KAAL,CAAWc,QAAzB,kBAAN;AACD;;AAEDJ,UAAIK,OAAJ,GAAeL,IAAIM,MAAJ,KAAe,CAAhB,GAAqB,IAArB,GAA4B,KAA1C;AACA,aAAON,GAAP;AACD,KAvCiB;;AAAA,UAwClBD,iBAxCkB,GAwCE,YAAM;AAAA,UAChBQ,WADgB,GACA,MAAKjB,KADL,CAChBiB,WADgB;;AAExB,aAAO;AACLC,cAAO,MAAKhB,QAAL,CAAcU,QAAd,EADF;AAELK;AAFK,OAAP;AAID,KA9CiB;;AAAA,UAgDlBE,YAhDkB,GAgDH,YAAM;AAClB,YAAKC,0BAAL,CACG,MAAKZ,yBADR;AAGD,KApDgB;;AAAA,UAsDlBa,YAtDkB,GAsDH;AAAA,aAAK,MAAKnB,QAAL,GAAgBoB,CAArB;AAAA,KAtDG;;AAEhB,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKC,eAAL,GAAuB,gCAAU,EAAEC,WAAF,EAAV,CAAvB;AACA,UAAKC,KAAL,GAAa;AACXrB,0BAAoB;AADT,KAAb;AAJgB;AAOjB;;;;0CAEqBsB,S,EAAWC,S,EAAU;AACzC,UAAI,KAAK5B,KAAL,KAAe2B,SAAnB,EAA6B;AAC1B,YAAI,KAAK3B,KAAL,CAAW6B,MAAX,KAAsBF,UAAUE,MAApC,EAA2C;AACxC,iBAAO,KAAP;AACF;AACH;AACD,aAAO,IAAP;AACD;;;6BAwCO;AAAA,mBAIF,KAAK7B,KAJH;AAAA,UAEJ8B,OAFI,UAEJA,OAFI;AAAA,UAEKD,MAFL,UAEKA,MAFL;AAAA,UAEaE,MAFb,UAEaA,MAFb;AAAA,UAGJjB,QAHI,UAGJA,QAHI;AAAA,UAGMkB,cAHN,UAGMA,cAHN;AAAA,UAKF3B,kBALE,GAKqB,KAAKqB,KAL1B,CAKFrB,kBALE;;;AAON,aACG;AAAC,wBAAD;AAAA;AACI,mBAASyB,OADb;AAEI,kBAAQD,MAFZ;AAGI,0BAAgB,KAAKL,eAHzB;AAII,uBAAaO,MAJjB;AAKI,mBAAS,KAAKZ;AALlB;AAOC,sCAAC,sBAAD;AACG,eAAK,KAAKE,YADb;AAEG,mBAASP,QAFZ;AAGG,uBAAakB,cAHhB;AAIG,mBAAS,KAAK1B;AAJjB,UAPD;AAaC,sCAAC,oCAAD;AACG,8BAAoBD;AADvB;AAbD,OADH;AAmBD;;;EA9FuB4B,gB;;kBAiGXnC,W","file":"DialogType1.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport crButtons from './crCommandButtons'\r\nimport Dialog from '../zhnMoleculs/Dialog'\r\nimport RowInputText from './RowInputText'\r\nimport ValidationMessagesFragment from './ValidationMessagesFragment'\r\n\r\nimport withValidationLoad from './decorators/withValidationLoad'\r\n\r\n@withValidationLoad\r\nclass DialogType1 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    requestType: PropTypes.string,\r\n    oneTitle: PropTypes.string,\r\n    onePlaceholder: PropTypes.string,\r\n    isShow: PropTypes.bool,\r\n    onShow: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.stock = null\r\n    this._commandButtons = crButtons({ inst: this })\r\n    this.state = {\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n _handleClear = () => {\r\n   this.inputOne.setValue('');\r\n   this.setState({ validationMessages: [] });\r\n }\r\n\r\n _handleLoad = () => {\r\n    this._handleLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n  _createValidationMessages = () => {\r\n    let msg = [];\r\n\r\n    const value = this.inputOne.getValue();\r\n    if (!value) {\r\n      msg = msg.concat(`${this.props.oneTitle} is required`)\r\n    }\r\n\r\n    msg.isValid = (msg.length === 0) ? true : false;\r\n    return msg;\r\n  }\r\n  _createLoadOption = () => {\r\n    const { requestType } = this.props;\r\n    return {\r\n      repo : this.inputOne.getValue(),\r\n      requestType\r\n    };\r\n  }\r\n\r\n  _handleClose = () => {\r\n     this._handleCloseWithValidation(\r\n        this._createValidationMessages\r\n     )\r\n   }\r\n\r\n  _refInputOne = c => this.inputOne = c\r\n\r\n  render(){\r\n    const {\r\n      caption, isShow, onShow,\r\n      oneTitle, onePlaceholder\r\n    } = this.props\r\n    , { validationMessages } = this.state;\r\n\r\n    return (\r\n       <Dialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n        <RowInputText\r\n           ref={this._refInputOne}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n           onEnter={this._handleLoad}\r\n        />\r\n        <ValidationMessagesFragment\r\n           validationMessages={validationMessages}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType1\r\n"]}