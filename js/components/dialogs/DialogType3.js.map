{"version":3,"sources":["../../../src/components/dialogs/DialogType3.jsx"],"names":["crMenuMore","helperFns","crButtons","_sortOptions","caption","value","_initFromDate","DateUtils","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType3","Decor","withToolbar","withValidationLoad","props","_handleSelectSortBy","item","sortByItem","_handleDefault","datesFragment","setValues","setState","validationMessages","_handleClear","inputOne","setValue","inputTwo","_handleLoad","_handleLoadWithValidation","_createValidationMessages","_createLoadOption","msg","getValidation","isValid","datesMsg","concat","length","getValue","intitle","getValues","fromDate","toDate","_fromDate","toUTCMillis","_toDate","requestType","repo","sort","fromdate","todate","_handleClose","_handleCloseWithValidation","_refInputOne","c","_refInputTwo","_refDatesFragment","stock","toolbarButtons","_createType2WithToolbar","hasDate","_menuMore","toggleDates","_clickDateWithToolbar","toggleLabels","_clickLabelWithToolbar","toggleToolBar","_toggleWithToolbar","_commandButtons","inst","isDefault","state","isToolbar","isShowLabels","isShowDate","nextProps","nextState","isShow","onShow","oneTitle","onePlaceholder","twoTitle","twoPlaceholder","Component"],"mappings":"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","file":"DialogType3.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport DateUtils from '../../utils/DateUtils'\r\n\r\nimport D from './DialogCell'\r\nimport Decor from './decorators/Decorators'\r\nimport helperFns from './helperFns/helperFns'\r\n\r\nconst { crMenuMore, crButtons } = helperFns;\r\n\r\nconst _sortOptions = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Relevance\", value: \"relevance\" }\r\n];\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate;\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\nclass DialogType3 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    requestType: PropTypes.string,\r\n    oneTitle: PropTypes.string,\r\n    onePlaceholder: PropTypes.string,\r\n    twoTitle: PropTypes.string,\r\n    twoPlaceholder: PropTypes.string,\r\n    isShow: PropTypes.bool,\r\n    onShow: PropTypes.func\r\n  }\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    this.stock = null\r\n    this.sortByItem = {}\r\n    this.toolbarButtons = this._createType2WithToolbar(props, {\r\n      hasDate: true\r\n    })\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleDates: this._clickDateWithToolbar,\r\n      toggleLabels: this._clickLabelWithToolbar,\r\n      toggleToolBar: this._toggleWithToolbar,\r\n    })\r\n    this._commandButtons = crButtons({\r\n      inst: this, isDefault: true\r\n    })\r\n    this.state = {\r\n      isToolbar: true,\r\n      isShowLabels: true,\r\n      isShowDate: true,\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n _handleSelectSortBy = (item) => {\r\n   this.sortByItem = item\r\n }\r\n\r\n _handleDefault = () => {\r\n   this.datesFragment.setValues(_initFromDate, _initToDate)\r\n   this.setState({ validationMessages: [] })\r\n }\r\n\r\n _handleClear = () => {\r\n    this.inputOne.setValue('')\r\n    this.inputTwo.setValue('')\r\n    this.setState({ validationMessages: [] })\r\n }\r\n\r\n _handleLoad = () => {\r\n    this._handleLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n\r\n  _createValidationMessages = () => {\r\n      let msg = [];\r\n\r\n      const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n      if (!isValid) { msg = msg.concat(datesMsg) }\r\n\r\n      msg.isValid = (msg.length === 0) ? true : false;\r\n      return msg;\r\n  }\r\n _createLoadOption = () => {\r\n   const repo = this.inputOne.getValue()\r\n       , intitle = this.inputTwo.getValue()\r\n       , { fromDate, toDate } = this.datesFragment.getValues()\r\n       , _fromDate = DateUtils.toUTCMillis(fromDate)/1000\r\n       , _toDate = DateUtils.toUTCMillis(toDate)/1000\r\n       , { requestType } = this.props\r\n       , { value } = this.sortByItem;\r\n\r\n   return {\r\n     repo, requestType, intitle,\r\n     sort : value,\r\n     fromdate : _fromDate,\r\n     todate : _toDate\r\n   };\r\n }\r\n\r\n _handleClose = () => {\r\n    this._handleCloseWithValidation(\r\n       this._createValidationMessages\r\n    )\r\n  }\r\n\r\n  _refInputOne = c => this.inputOne = c\r\n  _refInputTwo = c => this.inputTwo = c\r\n  _refDatesFragment = c => this.datesFragment = c\r\n\r\n  render(){\r\n    const {\r\n        caption, isShow, onShow,\r\n        oneTitle, onePlaceholder,\r\n        twoTitle, twoPlaceholder\r\n      } = this.props\r\n    , {\r\n      isToolbar,\r\n      isShowLabels,\r\n      isShowDate,\r\n      validationMessages\r\n    } = this.state;\r\n\r\n    return (\r\n       <D.DraggableDialog\r\n           isShow={isShow}\r\n           caption={caption}\r\n           menuModel={this._menuMore}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n         <D.Toolbar\r\n            isShow={isToolbar}\r\n            buttons={this.toolbarButtons}\r\n         />\r\n        <D.RowInputText\r\n           ref={this._refInputOne}\r\n           isShowLabel={isShowLabels}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n           onEnter={this._handleLoad}\r\n        />\r\n        <D.RowInputText\r\n           ref={this._refInputTwo}\r\n           isShowLabel={isShowLabels}\r\n           caption={twoTitle}\r\n           placeholder={twoPlaceholder}\r\n        />\r\n        <D.RowInputSelect\r\n           isShowLabel={isShowLabels}\r\n           caption=\"Sort By\"\r\n           placeholder=\"Default: Activity\"\r\n           options={_sortOptions}\r\n           onSelect={this._handleSelectSortBy}\r\n        />\r\n        <D.ShowHide isShow={isShowDate}>\r\n          <D.Dates\r\n              ref={this._refDatesFragment}\r\n              isShowLabels={isShowLabels}\r\n              initFromDate={_initFromDate}\r\n              initToDate={_initToDate}\r\n              onTestDate={_onTestDate}\r\n          />\r\n        </D.ShowHide>\r\n        <D.ValidationMessages\r\n           validationMessages={validationMessages}\r\n        />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType3\r\n"]}