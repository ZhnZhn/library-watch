{"version":3,"file":"DialogType3.js","names":["_uiApi","require","_memoFn","_useToggle","_interopRequireDefault","_useDialog","_useSelectItem","_useDialogButtons","_getRefItemValue","_Dialog","_DialogCell","_helperFns","_jsxRuntime","_SORT_OPTIONS","caption","value","_createValidationMessages","isValid","datesMsg","msg","push","length","DialogType3","memoIsShow","_ref","isShow","oneTitle","onePlaceholder","twoTitle","twoPlaceholder","requestType","onShow","onLoad","onClose","isShowDate","toggleIsShowDate","useToggle","MENU_MODEL","TOOLBAR_BUTTONS","isToolbar","isShowLabels","useDialog","_refInputOne","useRef","_refInputTwo","_refInputDates","_refSortBy","_hSelectSortBy","useSelectItem","validationMessages","COMMAND_BUTTONS","hClose","hLoad","useDialogButtons","setValidationMessages","clearValidationMessages","repo","getRefValue","getValue","intitle","_dateInst","getValidation","fromDate","toDate","getValues","_validationMessage","sort","getRefItemValue","fromdate","ymdToUTCSecond","todate","jsxs","default","menuModel","toolbarButtons","commandButtons","children","jsx","RowInputText","refEl","isShowLabel","placeholder","onEnter","RowInputSelect","options","onSelect","RowInputDatePeriod","_default","exports"],"sources":["../../../src/components/dialogs/DialogType3.jsx"],"sourcesContent":["import {\r\n  useRef,\r\n  getRefValue\r\n} from '../uiApi';\r\n\r\nimport { memoIsShow } from '../hoc/memoFn';\r\n\r\nimport useToggle from '../hooks/useToggle';\r\nimport useDialog from './useDialog';\r\nimport useSelectItem from './useSelectItem';\r\nimport useDialogButtons from './useDialogButtons';\r\nimport getRefItemValue from './getRefItemValue';\r\n\r\nimport Dialog from './Dialog';\r\nimport D from './DialogCell';\r\n\r\nimport { ymdToUTCSecond } from './helperFns';\r\n\r\nconst _SORT_OPTIONS = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Relevance\", value: \"relevance\" }\r\n];\r\n\r\nconst _createValidationMessages = (\r\n  isValid,\r\n  datesMsg\r\n) => {\r\n  const msg = [];\r\n  if (!isValid) {\r\n    msg.push(datesMsg)\r\n  }\r\n  msg.isValid = (msg.length === 0);\r\n  return msg;\r\n};\r\n\r\nconst DialogType3 = memoIsShow(({\r\n  isShow,\r\n  caption,\r\n  oneTitle,\r\n  onePlaceholder,\r\n  twoTitle,\r\n  twoPlaceholder,\r\n  requestType,\r\n  onShow,\r\n  onLoad,\r\n  onClose\r\n}) => {\r\n  const [\r\n    isShowDate,\r\n    toggleIsShowDate\r\n  ] = useToggle()\r\n  , [\r\n    MENU_MODEL,\r\n    TOOLBAR_BUTTONS,\r\n    isToolbar,\r\n    isShowLabels\r\n  ] = useDialog(toggleIsShowDate)\r\n  , _refInputOne = useRef()\r\n  , _refInputTwo = useRef()\r\n  , _refInputDates = useRef()\r\n  , [\r\n    _refSortBy,\r\n    _hSelectSortBy\r\n  ] = useSelectItem()\r\n  , [\r\n    validationMessages,\r\n    COMMAND_BUTTONS,\r\n    hClose,\r\n    hLoad\r\n  ] = useDialogButtons((\r\n    setValidationMessages,\r\n    clearValidationMessages\r\n  ) => {\r\n    const repo = getRefValue(_refInputOne).getValue()\r\n    , intitle = getRefValue(_refInputTwo).getValue()\r\n    , _dateInst = getRefValue(_refInputDates)\r\n    , { isValid, datesMsg } = _dateInst.getValidation()\r\n    , { fromDate, toDate } = _dateInst.getValues()\r\n    , _validationMessage = _createValidationMessages(\r\n      isValid, datesMsg\r\n    )\r\n    if (_validationMessage.isValid) {\r\n      onLoad({\r\n        repo,\r\n        requestType,\r\n        intitle,\r\n        sort: getRefItemValue(_refSortBy),\r\n        fromdate: ymdToUTCSecond(fromDate),\r\n        todate: ymdToUTCSecond(toDate)\r\n      })\r\n    } else {\r\n      setValidationMessages(_validationMessage)\r\n    }\r\n  }, onClose);\r\n\r\n  return (\r\n    <Dialog\r\n       isShow={isShow}\r\n       isToolbar={isToolbar}\r\n       caption={caption}\r\n       menuModel={MENU_MODEL}\r\n       toolbarButtons={TOOLBAR_BUTTONS}\r\n       commandButtons={COMMAND_BUTTONS}\r\n       validationMessages={validationMessages}\r\n       onShow={onShow}\r\n       onClose={hClose}\r\n    >\r\n      <D.RowInputText\r\n         refEl={_refInputOne}\r\n         isShowLabel={isShowLabels}\r\n         caption={oneTitle}\r\n         placeholder={onePlaceholder}\r\n         onEnter={hLoad}\r\n      />\r\n      <D.RowInputText\r\n         refEl={_refInputTwo}\r\n         isShowLabel={isShowLabels}\r\n         caption={twoTitle}\r\n         placeholder={twoPlaceholder}\r\n      />\r\n      <D.RowInputSelect\r\n         isShowLabel={isShowLabels}\r\n         caption=\"Sort By\"\r\n         placeholder=\"Default: Activity\"\r\n         options={_SORT_OPTIONS}\r\n         onSelect={_hSelectSortBy}\r\n      />\r\n      <D.RowInputDatePeriod\r\n        refEl={_refInputDates}\r\n        isShow={isShowDate}\r\n        isShowLabels={isShowLabels}\r\n      />\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default DialogType3\r\n"],"mappings":"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","ignoreList":[]}