{"version":3,"sources":["../../../src/components/dialogs/DialogType3.jsx"],"names":["_sortOptions","caption","value","_initFromDate","DateUtils","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType3","withValidationLoad","props","_handleSelectSortBy","item","sortByItem","_handleDefault","datesFragment","setValues","setState","validationMessages","_handleClear","inputOne","setValue","inputTwo","_handleLoad","_handleLoadWithValidation","_createValidationMessages","_createLoadOption","msg","getValidation","isValid","datesMsg","concat","length","getValue","intitle","getValues","fromDate","toDate","_fromDate","toUTCMillis","_toDate","requestType","repo","sort","fromdate","todate","_handleClose","_handleCloseWithValidation","_refInputOne","c","_refInputTwo","_refDatesFragment","stock","_commandButtons","inst","isDefault","state","nextProps","nextState","isShow","onShow","oneTitle","onePlaceholder","twoTitle","twoPlaceholder","Component"],"mappings":"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","file":"DialogType3.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport DateUtils from '../../utils/DateUtils'\r\n\r\nimport crButtons from './crCommandButtons'\r\nimport Dialog from '../zhnMoleculs/Dialog'\r\nimport RowInputText from './RowInputText'\r\nimport RowInputSelect from './RowInputSelect'\r\nimport DatesFragment from './DatesFragment'\r\nimport ValidationMessagesFragment from './ValidationMessagesFragment'\r\n\r\nimport withValidationLoad from './decorators/withValidationLoad'\r\n\r\nconst _sortOptions = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Relevance\", value: \"relevance\" }\r\n]\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate;\r\n\r\n\r\n@withValidationLoad\r\nclass DialogType3 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    requestType: PropTypes.string,\r\n    oneTitle: PropTypes.string,\r\n    onePlaceholder: PropTypes.string,\r\n    twoTitle: PropTypes.string,\r\n    twoPlaceholder: PropTypes.string,\r\n    isShow: PropTypes.bool,\r\n    onShow: PropTypes.func\r\n  }\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    this.stock = null\r\n    this.sortByItem = {}\r\n    this._commandButtons = crButtons({\r\n      inst: this, isDefault: true\r\n    })\r\n    this.state = {\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n _handleSelectSortBy = (item) => {\r\n   this.sortByItem = item\r\n }\r\n\r\n _handleDefault = () => {\r\n   this.datesFragment.setValues(_initFromDate, _initToDate)\r\n   this.setState({ validationMessages: [] })\r\n }\r\n\r\n _handleClear = () => {\r\n    this.inputOne.setValue('')\r\n    this.inputTwo.setValue('')\r\n    this.setState({ validationMessages: [] })\r\n }\r\n\r\n _handleLoad = () => {\r\n    this._handleLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n\r\n  _createValidationMessages = () => {\r\n      let msg = [];\r\n\r\n      const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n      if (!isValid) { msg = msg.concat(datesMsg) }\r\n\r\n      msg.isValid = (msg.length === 0) ? true : false;\r\n      return msg;\r\n  }\r\n _createLoadOption = () => {\r\n   const repo = this.inputOne.getValue()\r\n       , intitle = this.inputTwo.getValue()\r\n       , { fromDate, toDate } = this.datesFragment.getValues()\r\n       , _fromDate = DateUtils.toUTCMillis(fromDate)/1000\r\n       , _toDate = DateUtils.toUTCMillis(toDate)/1000\r\n       , { requestType } = this.props\r\n       , { value } = this.sortByItem;\r\n\r\n   return {\r\n     repo, requestType, intitle,\r\n     sort : value,\r\n     fromdate : _fromDate,\r\n     todate : _toDate\r\n   };\r\n }\r\n\r\n _handleClose = () => {\r\n    this._handleCloseWithValidation(\r\n       this._createValidationMessages\r\n    )\r\n  }\r\n\r\n  _refInputOne = c => this.inputOne = c\r\n  _refInputTwo = c => this.inputTwo = c\r\n  _refDatesFragment = c => this.datesFragment = c\r\n\r\n  render(){\r\n    const {\r\n            caption, isShow, onShow,\r\n            oneTitle, onePlaceholder,\r\n            twoTitle, twoPlaceholder\r\n          } = this.props\r\n        , { validationMessages } = this.state;\r\n\r\n    return (\r\n       <Dialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n        <RowInputText\r\n           ref={this._refInputOne}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n           onEnter={this._handleLoad}\r\n        />\r\n        <RowInputText\r\n           ref={this._refInputTwo}\r\n           caption={twoTitle}\r\n           placeholder={twoPlaceholder}\r\n        />\r\n        <RowInputSelect\r\n           caption=\"Sort By:\"\r\n           placeholder=\"Default: Activity\"\r\n           options={_sortOptions}\r\n           onSelect={this._handleSelectSortBy}\r\n        />\r\n        <DatesFragment\r\n            ref={this._refDatesFragment}\r\n            initFromDate={_initFromDate}\r\n            initToDate={_initToDate}\r\n            onTestDate={_onTestDate}\r\n        />\r\n        <ValidationMessagesFragment\r\n           validationMessages={validationMessages}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType3\r\n"]}