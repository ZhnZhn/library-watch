{"version":3,"sources":["../../../src/components/dialogs/DialogType3.jsx"],"names":["crMenuMore","helperFns","crButtons","_sortOptions","caption","value","_initFromDate","DateUtils","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType3","Decor","withToolbar","withValidationLoad","withInitialState","props","_handleSelectSortBy","item","sortByItem","_handleClear","inputOne","setValue","inputTwo","setState","validationMessages","_handleLoad","_handleLoadWithValidation","_createValidationMessages","_createLoadOption","msg","datesFragment","getValidation","isValid","datesMsg","concat","length","repo","getValue","intitle","getValues","fromDate","toDate","_fromDate","toUTCMillis","_toDate","requestType","sort","fromdate","todate","_handleClose","_handleCloseWithValidation","_refInputOne","c","_refInputTwo","_refDatesFragment","stock","toolbarButtons","_createType2WithToolbar","hasDate","_menuMore","toggleDates","_clickDateWithToolbar","toggleLabels","_clickLabelWithToolbar","toggleToolBar","_toggleWithToolbar","_commandButtons","inst","state","_withInitialState","shouldComponentUpdate","nextProps","nextState","isShow","render","onShow","oneTitle","onePlaceholder","twoTitle","twoPlaceholder","isToolbar","isShowLabels","isShowDate","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport DateUtils from '../../utils/DateUtils'\r\n\r\nimport D from './DialogCell'\r\nimport Decor from './decorators/Decorators'\r\nimport helperFns from './helperFns/helperFns'\r\n\r\nconst { crMenuMore, crButtons } = helperFns;\r\n\r\nconst _sortOptions = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Relevance\", value: \"relevance\" }\r\n];\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate;\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\n@Decor.withInitialState\r\nclass DialogType3 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    requestType: PropTypes.string,\r\n    oneTitle: PropTypes.string,\r\n    onePlaceholder: PropTypes.string,\r\n    twoTitle: PropTypes.string,\r\n    twoPlaceholder: PropTypes.string,\r\n    isShow: PropTypes.bool,\r\n    onShow: PropTypes.func\r\n  }\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    this.stock = null\r\n    this.sortByItem = {}\r\n    this.toolbarButtons = this._createType2WithToolbar(props, {\r\n      hasDate: true\r\n    })\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleDates: this._clickDateWithToolbar,\r\n      toggleLabels: this._clickLabelWithToolbar,\r\n      toggleToolBar: this._toggleWithToolbar,\r\n    })\r\n    this._commandButtons = crButtons({ inst: this })\r\n    this.state = {\r\n      ...this._withInitialState()\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n _handleSelectSortBy = (item) => {\r\n   this.sortByItem = item\r\n }\r\n\r\n _handleClear = () => {\r\n    this.inputOne.setValue('')\r\n    this.inputTwo.setValue('')\r\n    this.setState({ validationMessages: [] })\r\n }\r\n\r\n _handleLoad = () => {\r\n    this._handleLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    )\r\n  }\r\n\r\n  _createValidationMessages = () => {\r\n      let msg = [];\r\n\r\n      const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n      if (!isValid) { msg = msg.concat(datesMsg) }\r\n\r\n      msg.isValid = (msg.length === 0) ? true : false;\r\n      return msg;\r\n  }\r\n _createLoadOption = () => {\r\n   const repo = this.inputOne.getValue()\r\n       , intitle = this.inputTwo.getValue()\r\n       , { fromDate, toDate } = this.datesFragment.getValues()\r\n       , _fromDate = DateUtils.toUTCMillis(fromDate)/1000\r\n       , _toDate = DateUtils.toUTCMillis(toDate)/1000\r\n       , { requestType } = this.props\r\n       , { value } = this.sortByItem;\r\n\r\n   return {\r\n     repo, requestType, intitle,\r\n     sort : value,\r\n     fromdate : _fromDate,\r\n     todate : _toDate\r\n   };\r\n }\r\n\r\n _handleClose = () => {\r\n    this._handleCloseWithValidation(\r\n       this._createValidationMessages\r\n    )\r\n  }\r\n\r\n  _refInputOne = c => this.inputOne = c\r\n  _refInputTwo = c => this.inputTwo = c\r\n  _refDatesFragment = c => this.datesFragment = c\r\n\r\n  render(){\r\n    const {\r\n        caption, isShow, onShow,\r\n        oneTitle, onePlaceholder,\r\n        twoTitle, twoPlaceholder\r\n      } = this.props\r\n    , {\r\n      isToolbar,\r\n      isShowLabels,\r\n      isShowDate,\r\n      validationMessages\r\n    } = this.state;\r\n\r\n    return (\r\n       <D.DraggableDialog\r\n           isShow={isShow}\r\n           caption={caption}\r\n           menuModel={this._menuMore}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n         <D.Toolbar\r\n            isShow={isToolbar}\r\n            buttons={this.toolbarButtons}\r\n         />\r\n        <D.RowInputText\r\n           ref={this._refInputOne}\r\n           isShowLabel={isShowLabels}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n           onEnter={this._handleLoad}\r\n        />\r\n        <D.RowInputText\r\n           ref={this._refInputTwo}\r\n           isShowLabel={isShowLabels}\r\n           caption={twoTitle}\r\n           placeholder={twoPlaceholder}\r\n        />\r\n        <D.RowInputSelect\r\n           isShowLabel={isShowLabels}\r\n           caption=\"Sort By\"\r\n           placeholder=\"Default: Activity\"\r\n           options={_sortOptions}\r\n           onSelect={this._handleSelectSortBy}\r\n        />\r\n        <D.ShowHide isShow={isShowDate}>\r\n          <D.Dates\r\n              ref={this._refDatesFragment}\r\n              isShowLabels={isShowLabels}\r\n              initFromDate={_initFromDate}\r\n              initToDate={_initToDate}\r\n              onTestDate={_onTestDate}\r\n          />\r\n        </D.ShowHide>\r\n        <D.ValidationMessages\r\n           validationMessages={validationMessages}\r\n        />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType3\r\n"],"file":"DialogType3.js"}