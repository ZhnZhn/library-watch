{"version":3,"sources":["../../../src/components/dialogs/DialogType3.jsx"],"names":["_sortOptions","caption","value","_initFromDate","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType3","createClass","displayName","getInitialState","stock","sortByItem","validationMessages","shouldComponentUpdate","nextProps","nextState","props","isShow","_handlerSelectSortBy","item","_handlerDefault","datesFragment","setValues","setState","_handlerClear","inputRepo","setValue","inputTwo","_handlerLoad","_handlerLoadWithValidation","_createValidationMessages","_createLoadOption","msg","getValidation","isValid","datesMsg","concat","length","getValue","intitle","getValues","fromDate","toDate","_fromDate","toUTCMillis","_toDate","requestType","repo","sort","fromdate","todate","_handlerClose","_handlerCloseWithValidation","render","onShow","oneTitle","onePlaceholder","twoTitle","twoPlaceholder","_commandButtons","state","c"],"mappings":"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","file":"DialogType3.js","sourcesContent":["import React from 'react';\r\n\r\nimport DateUtils from '../../utils/DateUtils';\r\n\r\nimport WithValidation from './WithValidation';\r\nimport Dialog from '../zhnMoleculs/Dialog';\r\nimport ToolBarButton from '../header/ToolBarButton';\r\nimport RowInputText from './RowInputText';\r\nimport RowInputSelect from './RowInputSelect';\r\nimport DatesFragment from './DatesFragment';\r\nimport ValidationMessagesFragment from './ValidationMessagesFragment';\r\n\r\nconst _sortOptions = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Relevance\", value: \"relevance\" }\r\n]\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate\r\n\r\nconst DialogType3 = React.createClass({\r\n  ...WithValidation,\r\n\r\n  displayName : 'DialogType2',\r\n\r\n  getInitialState(){\r\n    this.stock = null;\r\n    this.sortByItem = {};\r\n    return {\r\n      validationMessages : []\r\n    };\r\n  },\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  },\r\n\r\n _handlerSelectSortBy(item){\r\n   this.sortByItem = item;\r\n },\r\n\r\n _handlerDefault(){\r\n   this.datesFragment.setValues(_initFromDate, _initToDate);\r\n   this.setState({ validationMessages: [] });\r\n },\r\n\r\n _handlerClear(){\r\n    this.inputRepo.setValue('');\r\n    this.inputTwo.setValue('');\r\n    this.setState({ validationMessages: [] });\r\n },\r\n\r\n _handlerLoad(){\r\n    this._handlerLoadWithValidation(\r\n      this._createValidationMessages(),\r\n      this._createLoadOption\r\n    );\r\n  },\r\n\r\n  _createValidationMessages(){\r\n      let msg = [];\r\n\r\n      const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n      if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n      msg.isValid = (msg.length === 0) ? true : false;\r\n      return msg;\r\n  },\r\n _createLoadOption(){\r\n   const repo = this.inputRepo.getValue()\r\n       , intitle = this.inputTwo.getValue()\r\n       , { fromDate, toDate } = this.datesFragment.getValues()\r\n       , _fromDate = DateUtils.toUTCMillis(fromDate)/1000\r\n       , _toDate = DateUtils.toUTCMillis(toDate)/1000\r\n       , { requestType } = this.props\r\n       , { value } = this.sortByItem\r\n\r\n   return {\r\n     repo, requestType, intitle,\r\n     sort : value,\r\n     fromdate : _fromDate,\r\n     todate : _toDate\r\n   };\r\n },\r\n\r\n _handlerClose(){\r\n    this._handlerCloseWithValidation(\r\n       this._createValidationMessages\r\n    );\r\n  },\r\n\r\n  render(){\r\n    const {\r\n            caption, isShow, onShow,\r\n            oneTitle, onePlaceholder,\r\n            twoTitle, twoPlaceholder\r\n          } = this.props\r\n        , _commandButtons = [\r\n            <ToolBarButton\r\n              key=\"a\"\r\n              type=\"TypeC\"\r\n              caption=\"Default\"\r\n              onClick={this._handlerDefault}\r\n             />,\r\n            <ToolBarButton\r\n              key=\"b\"\r\n              type=\"TypeC\"\r\n              caption=\"Clear\"\r\n              onClick={this._handlerClear}\r\n             />,\r\n             <ToolBarButton\r\n               key=\"c\"\r\n               type=\"TypeC\"\r\n               caption=\"Load\"\r\n               onClick={this._handlerLoad}\r\n              />\r\n           ]\r\n        , { validationMessages } = this.state;\r\n\r\n    return (\r\n       <Dialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={_commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handlerClose}\r\n       >\r\n        <RowInputText\r\n           ref={c => this.inputRepo = c}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n        />\r\n        <RowInputText\r\n           ref={c => this.inputTwo = c}\r\n           caption={twoTitle}\r\n           placeholder={twoPlaceholder}\r\n        />\r\n        <RowInputSelect\r\n           caption=\"Sort By:\"\r\n           placeholder=\"Default: Activity\"\r\n           options={_sortOptions}\r\n           onSelect={this._handlerSelectSortBy}\r\n        />\r\n        <DatesFragment\r\n            ref={c => this.datesFragment = c}\r\n            initFromDate={_initFromDate}\r\n            initToDate={_initToDate}\r\n            onTestDate={_onTestDate}\r\n        />\r\n        <ValidationMessagesFragment\r\n           validationMessages={validationMessages}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n});\r\n\r\nexport default DialogType3;\r\n"]}