{"version":3,"sources":["../../../src/components/dialogs/DialogType3A.jsx"],"names":["_initFromDate","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType3A","createClass","displayName","getInitialState","stock","validationMessages","shouldComponentUpdate","nextProps","nextState","props","isShow","_handlerDefault","datesFragment","setValues","_handlerClear","inputRepo","setValue","setState","_handlerLoad","_handlerLoadWithValidation","_createValidationMessages","_createLoadOption","msg","repo","getValue","concat","oneTitle","getValidation","isValid","datesMsg","length","getValues","fromDate","toDate","requestType","_handlerClose","_handlerCloseWithValidation","render","caption","onShow","onePlaceholder","_commandButtons","state","c"],"mappings":"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","file":"DialogType3A.js","sourcesContent":["import React from 'react';\r\n\r\nimport DateUtils from '../../utils/DateUtils';\r\n\r\nimport WithValidation from './WithValidation';\r\nimport Dialog from '../zhnMoleculs/Dialog';\r\nimport ToolBarButton from '../header/ToolBarButton';\r\nimport RowInputText from './RowInputText';\r\nimport DatesFragment from './DatesFragment';\r\nimport ValidationMessagesFragment from './ValidationMessagesFragment';\r\n\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate\r\n\r\nconst DialogType3A = React.createClass({\r\n  ...WithValidation,\r\n\r\n  displayName : 'DialogType3A',\r\n\r\n  getInitialState(){\r\n    this.stock = null;\r\n\r\n    return {\r\n      validationMessages : []\r\n    };\r\n  },\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  },\r\n\r\n _handlerDefault(){\r\n    this.datesFragment.setValues(_initFromDate, _initToDate);\r\n },\r\n\r\n _handlerClear(){\r\n    this.inputRepo.setValue('');\r\n    this.setState({ validationMessages: []});\r\n },\r\n\r\n  _handlerLoad(){\r\n     this._handlerLoadWithValidation(\r\n       this._createValidationMessages(),\r\n       this._createLoadOption\r\n     );\r\n   },\r\n   _createValidationMessages(){\r\n       let msg = [];\r\n\r\n       const repo = this.inputRepo.getValue();\r\n       if (!repo) {\r\n          msg = msg.concat(`${this.props.oneTitle} is required`);\r\n       }\r\n\r\n       const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n       if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n       msg.isValid = (msg.length === 0) ? true : false;\r\n       return msg;\r\n   },\r\n   _createLoadOption(){\r\n     const repo = this.inputRepo.getValue()\r\n         , { fromDate, toDate } = this.datesFragment.getValues()\r\n         , { requestType } = this.props\r\n\r\n     return {\r\n       repo, requestType,\r\n       fromDate, toDate\r\n     };\r\n   },\r\n\r\n   _handlerClose(){\r\n      this._handlerCloseWithValidation(\r\n         this._createValidationMessages\r\n      );\r\n    },\r\n\r\n   render(){\r\n     const {\r\n            caption, isShow, onShow,\r\n            oneTitle, onePlaceholder\r\n          } = this.props\r\n        , _commandButtons = [\r\n              <ToolBarButton\r\n                key=\"a\"\r\n                type=\"TypeC\"\r\n                caption=\"Default\"\r\n                onClick={this._handlerDefault}\r\n              />,\r\n              <ToolBarButton\r\n                key=\"b\"\r\n                type=\"TypeC\"\r\n                caption=\"Clear\"\r\n                onClick={this._handlerClear}\r\n              />,\r\n             <ToolBarButton\r\n               key=\"c\"\r\n               type=\"TypeC\"\r\n               caption=\"Load\"\r\n               onClick={this._handlerLoad}\r\n             />\r\n           ]\r\n        , {validationMessages} = this.state;\r\n\r\n    return (\r\n       <Dialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={_commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handlerClose}\r\n       >\r\n        <RowInputText\r\n           ref={c => this.inputRepo = c}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n        />\r\n        <DatesFragment\r\n            ref={c => this.datesFragment = c}\r\n            initFromDate={_initFromDate}\r\n            initToDate={_initToDate}\r\n            onTestDate={_onTestDate}\r\n        />\r\n        <ValidationMessagesFragment\r\n           validationMessages={validationMessages}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n});\r\n\r\nexport default DialogType3A;\r\n"]}