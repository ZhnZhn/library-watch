{"version":3,"sources":["../../../src/components/dialogs/DialogType3A.jsx"],"names":["_initFromDate","DateUtils","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType3A","withValidationLoad","props","_handleDefault","datesFragment","setValues","_handleClear","inputOne","setValue","setState","validationMessages","_handleLoad","_handleLoadWithValidation","_createValidationMessages","_createLoadOption","msg","repo","getValue","concat","oneTitle","getValidation","isValid","datesMsg","length","getValues","fromDate","toDate","requestType","_handleClose","_handleCloseWithValidation","_refInputOne","c","_refInputDates","stock","_commandButtons","inst","isDefault","state","nextProps","nextState","isShow","caption","onShow","onePlaceholder","Component"],"mappings":"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","file":"DialogType3A.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport DateUtils from '../../utils/DateUtils'\r\n\r\nimport crButtons from './crCommandButtons'\r\nimport Dialog from '../zhnMoleculs/Dialog'\r\nimport RowInputText from './RowInputText'\r\nimport DatesFragment from './DatesFragment'\r\nimport ValidationMessagesFragment from './ValidationMessagesFragment'\r\n\r\nimport withValidationLoad from './decorators/withValidationLoad'\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate;\r\n\r\n@withValidationLoad\r\nclass DialogType3A extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    requestType: PropTypes.string,\r\n    oneTitle: PropTypes.string,\r\n    onePlaceholder: PropTypes.string,\r\n    isShow: PropTypes.bool,\r\n    onShow: PropTypes.func\r\n  }\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    this.stock = null\r\n    this._commandButtons = crButtons({\r\n      inst: this, isDefault: true\r\n    })\r\n    this.state = {\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n _handleDefault = () => {\r\n    this.datesFragment.setValues(_initFromDate, _initToDate)\r\n }\r\n\r\n _handleClear = () => {\r\n    this.inputOne.setValue('')\r\n    this.setState({ validationMessages: []})\r\n }\r\n\r\n  _handleLoad = () => {\r\n     this._handleLoadWithValidation(\r\n       this._createValidationMessages(),\r\n       this._createLoadOption\r\n     )\r\n   }\r\n   _createValidationMessages = () => {\r\n       let msg = [];\r\n\r\n       const repo = this.inputOne.getValue()\r\n       if (!repo) {\r\n          msg = msg.concat(`${this.props.oneTitle} is required`);\r\n       }\r\n\r\n       const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n       if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n       msg.isValid = (msg.length === 0) ? true : false;\r\n       return msg;\r\n   }\r\n   _createLoadOption = () => {\r\n     const repo = this.inputOne.getValue()\r\n         , { fromDate, toDate } = this.datesFragment.getValues()\r\n         , { requestType } = this.props;\r\n\r\n     return {\r\n       repo, requestType,\r\n       fromDate, toDate\r\n     };\r\n   }\r\n\r\n   _handleClose = () => {\r\n      this._handleCloseWithValidation(\r\n         this._createValidationMessages\r\n      );\r\n    }\r\n\r\n  _refInputOne = c => this.inputOne = c\r\n  _refInputDates = c => this.datesFragment = c\r\n\r\n   render(){\r\n     const {\r\n            caption, isShow, onShow,\r\n            oneTitle, onePlaceholder\r\n          } = this.props\r\n        , {validationMessages} = this.state;\r\n\r\n    return (\r\n       <Dialog\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n        <RowInputText\r\n           ref={this._refInputOne}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n           onEnter={this._handleLoad}\r\n        />\r\n        <DatesFragment\r\n            ref={this._refInputDates}\r\n            initFromDate={_initFromDate}\r\n            initToDate={_initToDate}\r\n            onTestDate={_onTestDate}\r\n        />\r\n        <ValidationMessagesFragment\r\n           validationMessages={validationMessages}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType3A\r\n"]}