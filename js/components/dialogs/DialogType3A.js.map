{"version":3,"sources":["../../../src/components/dialogs/DialogType3A.jsx"],"names":["crMenuMore","helperFns","crButtons","_initFromDate","DateUtils","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DialogType3A","Decor","withToolbar","withValidationLoad","withInitialState","props","_handleClear","inputOne","setValue","setState","validationMessages","_handleLoad","_handleLoadWithValidation","_createValidationMessages","_createLoadOption","msg","repo","getValue","concat","oneTitle","datesFragment","getValidation","isValid","datesMsg","length","getValues","fromDate","toDate","requestType","_handleClose","_handleCloseWithValidation","_refInputOne","c","_refInputDates","stock","toolbarButtons","_createType2WithToolbar","hasDate","_menuMore","toggleDates","_clickDateWithToolbar","toggleLabels","_clickLabelWithToolbar","toggleToolBar","_toggleWithToolbar","_commandButtons","inst","state","_withInitialState","shouldComponentUpdate","nextProps","nextState","isShow","render","caption","onShow","onePlaceholder","isToolbar","isShowLabels","isShowDate","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport DateUtils from '../../utils/DateUtils'\r\n\r\nimport D from './DialogCell'\r\nimport Decor from './decorators/Decorators'\r\nimport helperFns from './helperFns/helperFns'\r\n\r\nconst { crMenuMore, crButtons } = helperFns;\r\n\r\nconst _initFromDate = DateUtils.getFromDate(1)\r\n    , _initToDate = DateUtils.getToDate()\r\n    , _onTestDate = DateUtils.isValidDate;\r\n\r\n@Decor.withToolbar\r\n@Decor.withValidationLoad\r\n@Decor.withInitialState\r\nclass DialogType3A extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    requestType: PropTypes.string,\r\n    oneTitle: PropTypes.string,\r\n    onePlaceholder: PropTypes.string,\r\n    isShow: PropTypes.bool,\r\n    onShow: PropTypes.func\r\n  }\r\n  */\r\n  constructor(props){\r\n    super(props)\r\n    this.stock = null\r\n    this.toolbarButtons = this._createType2WithToolbar(props, {\r\n      hasDate: true\r\n    })\r\n    this._menuMore = crMenuMore(this, {\r\n      toggleDates: this._clickDateWithToolbar,\r\n      toggleLabels: this._clickLabelWithToolbar,\r\n      toggleToolBar: this._toggleWithToolbar,\r\n    })\r\n    this._commandButtons = crButtons({ inst: this })\r\n    this.state = {\r\n      ...this._withInitialState()\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (this.props.isShow === nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n _handleClear = () => {\r\n    this.inputOne.setValue('')\r\n    this.setState({ validationMessages: []})\r\n }\r\n\r\n  _handleLoad = () => {\r\n     this._handleLoadWithValidation(\r\n       this._createValidationMessages(),\r\n       this._createLoadOption\r\n     )\r\n   }\r\n   _createValidationMessages = () => {\r\n       let msg = [];\r\n\r\n       const repo = this.inputOne.getValue()\r\n       if (!repo) {\r\n          msg = msg.concat(`${this.props.oneTitle} is required`);\r\n       }\r\n\r\n       const { isValid, datesMsg } = this.datesFragment.getValidation();\r\n       if (!isValid) { msg = msg.concat(datesMsg); }\r\n\r\n       msg.isValid = (msg.length === 0) ? true : false;\r\n       return msg;\r\n   }\r\n   _createLoadOption = () => {\r\n     const repo = this.inputOne.getValue()\r\n         , { fromDate, toDate } = this.datesFragment.getValues()\r\n         , { requestType } = this.props;\r\n\r\n     return {\r\n       repo, requestType,\r\n       fromDate, toDate\r\n     };\r\n   }\r\n\r\n   _handleClose = () => {\r\n      this._handleCloseWithValidation(\r\n         this._createValidationMessages\r\n      );\r\n    }\r\n\r\n  _refInputOne = c => this.inputOne = c\r\n  _refInputDates = c => this.datesFragment = c\r\n\r\n   render(){\r\n     const {\r\n        caption, isShow, onShow,\r\n        oneTitle, onePlaceholder\r\n      } = this.props\r\n    , {\r\n      isToolbar,\r\n      isShowLabels,\r\n      isShowDate,\r\n      validationMessages\r\n    } = this.state;\r\n\r\n    return (\r\n       <D.DraggableDialog\r\n           isShow={isShow}\r\n           caption={caption}\r\n           menuModel={this._menuMore}\r\n           commandButtons={this._commandButtons}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n         <D.Toolbar\r\n            isShow={isToolbar}\r\n            buttons={this.toolbarButtons}\r\n         />\r\n        <D.RowInputText\r\n           ref={this._refInputOne}\r\n           isShowLabel={isShowLabels}\r\n           caption={oneTitle}\r\n           placeholder={onePlaceholder}\r\n           onEnter={this._handleLoad}\r\n        />\r\n        <D.ShowHide isShow={isShowDate}>\r\n          <D.Dates\r\n              ref={this._refInputDates}\r\n              isShowLabels={isShowLabels}\r\n              initFromDate={_initFromDate}\r\n              initToDate={_initToDate}\r\n              onTestDate={_onTestDate}\r\n          />\r\n        </D.ShowHide>\r\n        <D.ValidationMessages\r\n           validationMessages={validationMessages}\r\n        />\r\n      </D.DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogType3A\r\n"],"file":"DialogType3A.js"}