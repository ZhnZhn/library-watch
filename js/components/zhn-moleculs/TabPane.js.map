{"version":3,"sources":["../../../src/components/zhn-moleculs/TabPane.jsx"],"names":["STYLE","UL","listStyle","marginTop","marginLeft","marginRight","borderBottom","DIV","width","height","TabPane","props","components","children","map","tab","index","React","cloneElement","key","state","selectedTabIndex","_renderTabs","_renderComponents","Component","_handlerClickTab","setState","isSelected","onClick","bind","comp","divStyle","display"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA;;AAEA,IAAMA,QAAQ;AACZC,MAAK;AACHC,eAAY,mBADT;AAEHC,eAAW,MAFR;AAGHC,gBAAY,MAHT;AAIHC,iBAAa,KAJV;AAKHC,kBAAe;AALZ,GADO;AAQZC,OAAM;AACJC,WAAO,MADH;AAEJC,YAAS;AAFL;AARM,CAAd;;IAcMC,O;;;AACJ;;;;;;;;AAQA,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA;;AAEhB,QAAMC,aAAaD,MAAME,QAAN,CAAeC,GAAf,CAAmB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACnD,aAAQC,gBAAMC,YAAN,CAAmBH,IAAIJ,KAAJ,CAAUE,QAA7B,EAAuC,EAAEM,KAAM,SAASH,KAAjB,EAAvC,CAAR;AACF,KAFkB,CAAnB;AAGA,UAAKI,KAAL,GAAa;AACXC,wBAAmB,CADR;AAEXT;AAFW,KAAb;AALgB;AASjB;;;;6BA4BO;AAAA,mBAC8B,KAAKD,KADnC;AAAA,UACEE,QADF,UACEA,QADF;AAAA,UACYL,KADZ,UACYA,KADZ;AAAA,UACmBC,MADnB,UACmBA,MADnB;;AAEN,aACE;AAAA;AAAA,UAAK,OAAO,EAAED,YAAF,EAASC,cAAT,EAAZ;AACE;AAAA;AAAA,YAAI,WAAU,eAAd,EAA8B,OAAOT,MAAMC,EAA3C;AACI,eAAKqB,WAAL,CAAiBT,QAAjB;AADJ,SADF;AAIE;AAAA;AAAA,YAAK,OAAOb,MAAMO,GAAlB;AACI,eAAKgB,iBAAL;AADJ;AAJF,OADF;AAUD;;;0CAEoB;AACnB,aAAO,KAAKH,KAAL,CAAWC,gBAAlB;AACD;;;EA9DmBG,gB;;;OAoBpBC,gB,GAAmB,UAACT,KAAD,EAAW;AAC5B,WAAKU,QAAL,CAAc,EAACL,kBAAmBL,KAApB,EAAd;AACD,G;;OAEDM,W,GAAc,UAACT,QAAD,EAAc;AAAA,QAChBQ,gBADgB,GACI,OAAKD,KADT,CAChBC,gBADgB;;AAEvB,WAAOR,SAASC,GAAT,CAAa,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACjC,UAAMW,aAAcX,UAAUK,gBAAX,GAA+B,IAA/B,GAAsC,KAAzD;AACA,aAAOJ,gBAAMC,YAAN,CAAmBH,GAAnB,EAAwB,EAAEI,KAAMH,KAAR,EAAeY,SAAU,OAAKH,gBAAL,CAAsBI,IAAtB,CAA2B,IAA3B,EAAiCb,KAAjC,CAAzB,EAAkEW,sBAAlE,EAAxB,CAAP;AACF,KAHM,CAAP;AAIJ,G;;OAEDJ,iB,GAAoB,YAAM;AAAA,iBACiB,OAAKH,KADtB;AAAA,QACfC,gBADe,UACfA,gBADe;AAAA,QACGT,UADH,UACGA,UADH;;AAEtB,WAAOA,WAAWE,GAAX,CAAe,UAACgB,IAAD,EAAOd,KAAP,EAAiB;AACpC,UAAMe,WAAYf,UAAUK,gBAAX,GACJ,EAACW,SAAS,OAAV,EAAmBxB,OAAO,MAA1B,EAAkCC,QAAS,MAA3C,EADI,GAEJ,EAACuB,SAAU,MAAX,EAFb;AAGC,aACG;AAAA;AAAA,UAAK,OAAOD,QAAZ,EAAsB,KAAK,MAAIf,KAA/B;AACIc;AADJ,OADH;AAKH,KATM,CAAP;AAUH,G;;kBAqBYpB,O","file":"TabPane.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst STYLE = {\r\n  UL : {\r\n    listStyle : 'outside none none',\r\n    marginTop: '10px',\r\n    marginLeft: '10px',\r\n    marginRight: '5px',\r\n    borderBottom : '2px solid rgba(164, 135, 212, 1)'\r\n  },\r\n  DIV : {\r\n    width: \"100%\",\r\n    height : \"100%\"\r\n  }\r\n};\r\n\r\nclass TabPane extends Component {\r\n  /*\r\n  static propTypes = {\r\n     width: PropTypes.number,\r\n     height: PropTypes.number,\r\n     children: PropTypes.arrayOf(PropTypes.node)\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    const components = props.children.map((tab, index) => {\r\n       return  React.cloneElement(tab.props.children, { key : 'comp' + index });\r\n    })\r\n    this.state = {\r\n      selectedTabIndex : 0,\r\n      components\r\n    }\r\n  }\r\n\r\n  _handlerClickTab = (index) => {\r\n    this.setState({selectedTabIndex : index});\r\n  }\r\n\r\n  _renderTabs = (children) => {\r\n       const {selectedTabIndex} = this.state;\r\n       return children.map((tab, index) => {\r\n          const isSelected = (index === selectedTabIndex) ? true : false;\r\n          return React.cloneElement(tab, { key : index, onClick : this._handlerClickTab.bind(null, index), isSelected })\r\n       })\r\n  }\r\n\r\n  _renderComponents = () => {\r\n      const {selectedTabIndex, components} = this.state;\r\n      return components.map((comp, index) => {\r\n         const divStyle = (index === selectedTabIndex)\r\n                    ? {display: 'block', width: \"100%\", height : \"100%\"}\r\n                    : {display : 'none'};\r\n          return (\r\n             <div style={divStyle} key={'a'+index}>\r\n                {comp}\r\n             </div>\r\n           )\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const { children, width, height } = this.props;\r\n    return (\r\n      <div style={{ width, height }}>\r\n        <ul className=\"tabpane__tabs\" style={STYLE.UL}>\r\n           {this._renderTabs(children)}\r\n        </ul>\r\n        <div style={STYLE.DIV}>\r\n           {this._renderComponents()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getSelectedTabIndex(){\r\n    return this.state.selectedTabIndex;\r\n  }\r\n}\r\n\r\nexport default TabPane\r\n"]}