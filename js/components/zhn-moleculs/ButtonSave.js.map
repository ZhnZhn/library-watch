{"version":3,"sources":["../../../src/components/zhn-moleculs/ButtonSave.jsx"],"names":["CAPTION","TITLE","STYLE","NOT_WATCH_EDITED","borderColor","color","ButtonSave","props","_onStore","actionType","value","WatchActionTypes","SET_WATCH_EDITED","setState","isWatchEdited","state","store","getWatchEdited","nextProps","nextState","unsubcribe","listen","className","style","_style","Object","assign","WatchActions","saveWatch","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;;;AACA;;;;;;AAHA;;AAKA,IAAMA,UAAU,GAAhB;AAAA,IACMC,QAAQ,oCADd;AAAA,IAEMC,QAAQ;AACNC,oBAAmB;AACjBC,iBAAc,MADG;AAEjBC,WAAQ;AAFS;AADb,CAFd;;IASMC,U;;;AACJ;;;;;;;AAOA,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAmBlBC,QAnBkB,GAmBP,UAACC,UAAD,EAAaC,KAAb,EAAuB;AAChC,UAAID,eAAeE,+BAAiBC,gBAApC,EAAqD;AACnD,cAAKC,QAAL,CAAc,EAAEC,eAAgBJ,KAAlB,EAAd;AACD;AACF,KAvBiB;;AAEhB,UAAKK,KAAL,GAAa;AACXD,qBAAgBP,MAAMS,KAAN,CAAYC,cAAZ;AADL,KAAb;AAFgB;AAKjB;;;;0CAEqBC,S,EAAWC,S,EAAU;AACzC,UAAIA,UAAUL,aAAV,KAA4B,KAAKC,KAAL,CAAWD,aAA3C,EAAyD;AACvD,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;wCAEkB;AAAA,UACTE,KADS,GACC,KAAKT,KADN,CACTS,KADS;;AAEjB,WAAKI,UAAL,GAAkBJ,MAAMK,MAAN,CAAa,KAAKb,QAAlB,CAAlB;AACA,WAAKK,QAAL,CAAc,EAAEC,eAAgBE,MAAMC,cAAN,EAAlB,EAAd;AACD;;;2CAMqB;AACpB,WAAKG,UAAL;AACD;;;6BAEO;AAAA,mBACuB,KAAKb,KAD5B;AAAA,UACEe,SADF,UACEA,SADF;AAAA,UACaC,KADb,UACaA,KADb;AAAA,UAEET,aAFF,GAEoB,KAAKC,KAFzB,CAEED,aAFF;AAAA,UAGAU,MAHA,GAGUV,aAAD,GACJS,KADI,GAEJE,OAAOC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyBrB,MAAMC,gBAA/B,CALL;;AAON,aACE,8BAAC,sBAAD;AACG,mBAAWmB,SADd;AAEG,iBAAStB,OAFZ;AAGG,eAAOC,KAHV;AAIG,eAAOuB,MAJV;AAKG,iBAASG,uBAAaC;AALzB,QADF;AASD;;;EApDsBC,gB;;kBAuDVvB,U","file":"ButtonSave.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport WatchActions, { WatchActionTypes } from '../../flux/actions/WatchActions';\r\nimport ButtonCircle from '../zhn-atoms/ButtonCircle';\r\n\r\nconst CAPTION = \"S\"\r\n    , TITLE = \"Save Watch Items to Locale Storage\"\r\n    , STYLE = {\r\n        NOT_WATCH_EDITED : {\r\n          borderColor : 'gray',\r\n          color : 'gray'\r\n      }\r\n}\r\n\r\nclass ButtonSave extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store : PropTypes.object.isRequired,\r\n    style : PropTypes.object\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      isWatchEdited : props.store.getWatchEdited()\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextState.isWatchEdited === this.state.isWatchEdited){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { store } = this.props\r\n    this.unsubcribe = store.listen(this._onStore)\r\n    this.setState({ isWatchEdited : store.getWatchEdited() })\r\n  }\r\n  _onStore = (actionType, value) => {\r\n    if (actionType === WatchActionTypes.SET_WATCH_EDITED){\r\n      this.setState({ isWatchEdited : value })\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubcribe()\r\n  }\r\n\r\n  render(){\r\n    const { className, style } = this.props\r\n        , { isWatchEdited } = this.state\r\n        , _style = (isWatchEdited)\r\n             ? style\r\n             : Object.assign({}, style, STYLE.NOT_WATCH_EDITED)\r\n\r\n    return (\r\n      <ButtonCircle\r\n         className={className}\r\n         caption={CAPTION}\r\n         title={TITLE}\r\n         style={_style}\r\n         onClick={WatchActions.saveWatch}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonSave\r\n"]}