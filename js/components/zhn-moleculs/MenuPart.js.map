{"version":3,"sources":["../../../src/components/zhn-moleculs/MenuPart.jsx"],"names":["CL","NOT_SELECTED","ROW_EVEN","ROW_ODD","FILL_OPEN","FILL_CLOSE","S","CAPTION_ROW","paddingLeft","MenuItem","title","className","menuBadge","onClick","_hKeyDown","event","_renderMenuItems","rowClass","items","map","item","index","counter","_className","isOpen","onBadgeOpen","onBadgeClose","MenuPart","caption","isInitClose"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,EAAE,GAAG;AACTC,EAAAA,YAAY,EAAE,cADL;AAETC,EAAAA,QAAQ,EAAE,+BAFD;AAGTC,EAAAA,OAAO,EAAE;AAHA,CAAX;AAMA,IAAMC,SAAS,GAAG,SAAlB;AACA,IAAMC,UAAU,GAAG,aAAnB;AAGA,IAAMC,CAAC,GAAG;AACRC,EAAAA,WAAW,EAAE;AACXC,IAAAA,WAAW,EAAE;AADF;AADL,CAAV;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8C;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC7D,MAAMC,SAAS,GAAG,wBAAY,UAACC,KAAD,EAAS;AACrC,QAAG,4BAAWA,KAAX,CAAH,EAAsB;AACpBF,MAAAA,OAAO;AACR;AACF,GAJiB,EAIf,EAJe,CAAlB;;AAKA,sBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,SAAS,EAAEF,SAHb;AAIE,IAAA,OAAO,EAAEE,OAJX;AAKE,IAAA,SAAS,EAAEC,SALb;AAAA,eAOIJ,KAPJ,EAQIE,SARJ;AAAA,IADF;AAYD,CAlBD;;AAoBA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAASC,QAAT,EAAmBC,KAAnB,EAA4B;AAAA,MAATA,KAAS;AAATA,IAAAA,KAAS,GAAH,EAAG;AAAA;;AACnD,SAAOA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAAA,QACxBC,OADwB,GACIF,IADJ,CACxBE,OADwB;AAAA,QACfZ,KADe,GACIU,IADJ,CACfV,KADe;AAAA,QACRG,OADQ,GACIO,IADJ,CACRP,OADQ;;AAEhC,QAAMU,UAAU,GAAGN,QAAQ,GAChBA,QAAQ,GAAG,GAAX,GAAiBjB,EAAE,CAACC,YADJ,GAEfoB,KAAK,GAAG,CAAT,GACIrB,EAAE,CAACE,QADP,GAEIF,EAAE,CAACG,OAJlB;AAAA,QAKMS,SAAS,GAAIU,OAAO,KAAK,CAAb,gBAEJ,qBAAC,qBAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAEE,MAAA,MAAM,EAAEF,IAAI,CAACI,MAFf;AAGE,MAAA,WAAW,EAAEJ,IAAI,CAACK,WAHpB;AAIE,MAAA,YAAY,EAAEL,IAAI,CAACM;AAJrB,MAFI,GASN,IAdZ;;AAeA,wBACE,qBAAC,QAAD;AAEG,MAAA,SAAS,EAAEH,UAFd;AAGG,MAAA,KAAK,EAAEb,KAHV;AAIG,MAAA,SAAS,EAAEE,SAJd;AAKG,MAAA,OAAO,EAAEC;AALZ,OACQQ,KADR,CADF;AASD,GA1BM,CAAP;AA2BD,CA5BD;;AA8BA,IAAMM,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGV,QAAH,SAAGA,QAAH;AAAA,MAAaW,OAAb,SAAaA,OAAb;AAAA,MAAsBV,KAAtB,SAAsBA,KAAtB;AAAA,MAA6BW,WAA7B,SAA6BA,WAA7B;AAAA,sBACf,qBAAC,qBAAD;AACG,IAAA,eAAe,EAAEvB,CAAC,CAACC,WADtB;AAEG,IAAA,QAAQ,EAAEH,SAFb;AAGG,IAAA,SAAS,EAAEC,UAHd;AAIG,IAAA,OAAO,EAAEuB,OAJZ;AAKG,IAAA,OAAO,EAAEC,WALZ;AAAA,cAOIb,gBAAgB,CAACC,QAAD,EAAWC,KAAX;AAPpB,IADe;AAAA,CAAjB;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;;eAEeS,Q","sourcesContent":["import React, { useCallback } from 'react';\r\nimport isKeyEnter from '../zhn-atoms/isKeyEnter'\r\nimport MenuBadge from '../zhn-atoms/MenuBadge';\r\nimport OpenClose2 from '../zhn-atoms/OpenClose2';\r\n\r\nconst CL = {\r\n  NOT_SELECTED: 'not-selected',\r\n  ROW_EVEN: 'row__topic__even not-selected',\r\n  ROW_ODD: 'row__topic__odd not-selected'\r\n};\r\n\r\nconst FILL_OPEN = '#1b2836';\r\nconst FILL_CLOSE = 'transparent';\r\n\r\n\r\nconst S = {\r\n  CAPTION_ROW: {\r\n    paddingLeft: 6\r\n  }\r\n};\r\n\r\nconst MenuItem = ({ title, className, menuBadge, onClick }) => {\r\n  const _hKeyDown = useCallback((event)=>{\r\n    if(isKeyEnter(event)) {\r\n      onClick()\r\n    }\r\n  }, []);\r\n  return (\r\n    <div\r\n      role=\"menuitem\"\r\n      tabIndex={0}\r\n      className={className}\r\n      onClick={onClick}\r\n      onKeyDown={_hKeyDown}\r\n     >\r\n       {title}\r\n       {menuBadge}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst _renderMenuItems = function(rowClass, items=[]){\r\n  return items.map((item, index) => {\r\n    const { counter, title, onClick } = item\r\n    const _className = rowClass\r\n             ? rowClass + ' ' + CL.NOT_SELECTED\r\n             : (index % 2)\r\n                 ? CL.ROW_EVEN\r\n                 : CL.ROW_ODD\r\n        , menuBadge = (counter !== 0)\r\n             ? (\r\n                  <MenuBadge\r\n                    counter={counter}\r\n                    isOpen={item.isOpen}\r\n                    onBadgeOpen={item.onBadgeOpen}\r\n                    onBadgeClose={item.onBadgeClose}\r\n                 />\r\n                )\r\n              : null;\r\n    return (\r\n      <MenuItem\r\n         key={index}\r\n         className={_className}\r\n         title={title}\r\n         menuBadge={menuBadge}\r\n         onClick={onClick}\r\n      />\r\n    )\r\n  })\r\n}\r\n\r\nconst MenuPart = ({ rowClass, caption, items, isInitClose }) => (\r\n  <OpenClose2\r\n     styleCaptionRow={S.CAPTION_ROW}\r\n     fillOpen={FILL_OPEN}\r\n     fillClose={FILL_CLOSE}\r\n     caption={caption}\r\n     isClose={isInitClose}\r\n  >\r\n     {_renderMenuItems(rowClass, items)}\r\n  </OpenClose2>\r\n)\r\n\r\n/*\r\nMenuPart.propTypes = {\r\n  caption: PropTypes.string,\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n  isInitClose: PropTypes.bool\r\n}\r\n*/\r\n\r\nexport default MenuPart\r\n"],"file":"MenuPart.js"}