{"version":3,"sources":["../../../src/components/zhn-moleculs/DraggableDialog.jsx"],"names":["CL","ROOT","SHOWING","NOT_SELECTED","MENU_MORE","S","STYLE","ROOT_DIV_DRAG","position","top","left","zIndex","BT_MORE","BT_MORE_SVG","stroke","fill","CHILDREN_DIV","cursor","_isFn","fn","DraggableDialog","state","isMore","_hKeyDown","evt","preventDefault","stopPropagation","_hClose","props","onClose","focusPrev","_toggleMore","setState","prevState","_renderMenuMore","menuModel","_renderBtMore","_refBtMore","_renderCommandButton","commandButtons","onShowChart","COMMAND_DIV","BT_ROOT","btMore","node","_refRootDiv","rootDiv","Interact","makeDragable","focus","prevProps","isShow","_hasShowed","caption","children","onFront","_styleShow","SHOW","HIDE","_classShow","_className","ROOT_DIV","CAPTION_DIV","SVG_CLOSE","_prevFocused","document","activeElement","Component","defaultProps"],"mappings":"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","file":"DraggableDialog.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  isKeyEscape,\r\n  focusNode\r\n} from '../zhn-utils/utils'\r\n\r\nimport ModalSlider from '../zhn-modal-slider/ModalSlider'\r\nimport SvgMore from '../zhn-atoms/SvgMore';\r\nimport SvgClose from '../zhn-atoms/SvgClose';\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nimport Interact from '../../utils/Interact'\r\n\r\nimport STYLE from './Dialog.Style'\r\n\r\nconst CL = {\r\n  ROOT: \"draggable-dialog\",\r\n  SHOWING: 'show-popup',\r\n  NOT_SELECTED: 'not-selected',\r\n  MENU_MORE: 'popup-menu dialog__menu-more'\r\n};\r\n\r\nconst S = {\r\n  ...STYLE,\r\n  ROOT_DIV_DRAG: {\r\n    position: 'absolute',\r\n    top: '30px',\r\n    left: '50px',\r\n    zIndex: 10\r\n  },\r\n  BT_MORE: {\r\n    position: 'absolute',\r\n    left: 0\r\n  },\r\n  BT_MORE_SVG: {\r\n    stroke: 'inherit',\r\n    fill: 'inherit'\r\n  },\r\n  CHILDREN_DIV: {\r\n    cursor: 'default'\r\n  }\r\n};\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nclass DraggableDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    caption: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node\r\n    ]),\r\n    commandButtons: PropTypes.arrayOf(PropTypes.element),\r\n    onShowChart: PropTypes.func,\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    onClose: () => {}\r\n  }\r\n\r\n  state = {\r\n    isMore: false\r\n  }\r\n\r\n  componentDidMount(){\r\n     Interact.makeDragable(this.rootDiv);\r\n     this.focus()\r\n  }\r\n\r\n  _hasShowed(prevProps) {\r\n    return !prevProps.isShow\r\n      && this.props.isShow;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if ( this._hasShowed(prevProps) ) {\r\n      this.focus()\r\n    }\r\n  }\r\n\r\n  _hKeyDown = evt => {\r\n    if ( isKeyEscape(evt) ) {\r\n      evt.preventDefault()\r\n      evt.stopPropagation()\r\n      this._hClose()\r\n    }\r\n  }\r\n  _hClose = () => {\r\n     this.props.onClose()\r\n     this.focusPrev()\r\n  }\r\n\r\n  _toggleMore = () => {    \r\n    this.setState(prevState => ({\r\n      isMore: !prevState.isMore\r\n    }))\r\n  }\r\n\r\n  _renderMenuMore = (menuModel, isMore) => {\r\n     return menuModel && <ModalSlider\r\n      isShow={isMore}\r\n      className={CL.MENU_MORE}\r\n      //style={TS.EL_BORDER}\r\n      model={menuModel}\r\n      onClose={this._toggleMore}\r\n    />\r\n  }\r\n\r\n  _renderBtMore = (menuModel) => {\r\n    return menuModel && <SvgMore\r\n      btRef={this._refBtMore}\r\n      style={S.BT_MORE}\r\n      svgStyle={S.BT_MORE_SVG}\r\n      onClick={this._toggleMore}\r\n    />\r\n  }\r\n\r\n  _renderCommandButton = (commandButtons, onShowChart, onClose) => {\r\n    return (\r\n      <div style={S.COMMAND_DIV}>\r\n        {commandButtons}\r\n        {\r\n          _isFn(onShowChart) && <FlatButton\r\n            key=\"show\"\r\n            rootStyle={S.BT_ROOT}\r\n            caption=\"Show\"\r\n            title=\"Show Pane Container\"\r\n            //accessKey=\"s\"\r\n            onClick={onShowChart}\r\n          />\r\n        }\r\n        <FlatButton\r\n          key=\"close\"\r\n          rootStyle={S.BT_ROOT}\r\n          caption=\"Close\"\r\n          title=\"Close Draggable Dialog\"\r\n          //accessKey=\"c\"\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _refBtMore = node => this.btMore = node\r\n  _refRootDiv = node => this.rootDiv = node\r\n\r\n\r\n  render(){\r\n    const {\r\n       menuModel,\r\n       isShow, caption, children,\r\n       commandButtons,\r\n       onShowChart, onFront\r\n     } = this.props\r\n    , { isMore } = this.state\r\n    , _styleShow = isShow ? S.SHOW : S.HIDE\r\n    , _classShow = isShow ? CL.SHOWING : ''\r\n    , _className = `${CL.ROOT} ${_classShow}`;\r\n    return (\r\n  /*eslint-disable jsx-a11y/no-noninteractive-element-interactions*/\r\n      <div\r\n        ref={this._refRootDiv}\r\n        role=\"dialog\"\r\n        tabIndex=\"-1\"\r\n        aria-label={caption}\r\n        aria-hidden={!isShow}\r\n        className={_className}\r\n        style={{\r\n          ...S.ROOT_DIV, ...S.ROOT_DIV_DRAG,\r\n          ..._styleShow\r\n        }}\r\n        onClick={onFront}\r\n        onKeyDown={this._hKeyDown}\r\n       >\r\n    {/*eslint-enable jsx-a11y/no-noninteractive-element-interactions*/}\r\n        <div style={S.CAPTION_DIV}>\r\n          { this._renderMenuMore(menuModel, isMore) }\r\n          { this._renderBtMore(menuModel) }\r\n          <span className={CL.NOT_SELECTED}>\r\n            {caption}\r\n          </span>\r\n          <SvgClose\r\n             style={S.SVG_CLOSE}\r\n             onClose={this._hClose}\r\n          />\r\n        </div>\r\n        <div style={S.CHILDREN_DIV}>\r\n           {children}\r\n        </div>\r\n        {this._renderCommandButton(commandButtons, onShowChart, this._hClose)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  focus() {\r\n    this._prevFocused = document.activeElement\r\n    focusNode(this.btMore || this.rootDiv)\r\n  }\r\n\r\n  focusPrev() {\r\n    focusNode(this._prevFocused)\r\n    this._prevFocused = null\r\n  }\r\n\r\n}\r\n\r\nexport default DraggableDialog\r\n"]}