{"version":3,"sources":["../../../src/components/zhn-moleculs/MenuBrowserDynamic.jsx"],"names":["STYLE","BROWSER","paddingRight","SCROLL_DIV","overflowY","height","MenuBrowserDynamic","props","_loadMenu","browserType","caption","sourceMenuUrl","onLoadMenu","_onStore","actionType","data","store","showAction","updateAction","loadCompletedAction","_handleShow","setState","menuItems","isLoaded","getBrowserMenu","_handleHide","isShow","state","isInitShow","componentDidMount","unsubscribe","listen","UNSAFE_componentWillUpdate","nextProps","nextState","componentWillUnmount","_renderMenuParts","rowClass","map","menuPart","index","render","children","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Browser from '../zhn-atoms/Browser';\r\nimport CaptionRow from '../zhn-atoms/CaptionRow';\r\nimport ScrollPane from '../zhn-atoms/ScrollPane';\r\nimport MenuPart from './MenuPart';\r\n\r\nconst STYLE = {\r\n  BROWSER : {\r\n    paddingRight: 0\r\n  },\r\n  SCROLL_DIV : {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    //height: 'calc(100vh - 90px)',\r\n    paddingRight: 10\r\n  }\r\n};\r\n\r\nclass MenuBrowserDynamic extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isInitShow: PropTypes.bool,\r\n    browserType: PropTypes.string,\r\n    caption: PropTypes.string,\r\n    sourceMenuUrl: PropTypes.string,\r\n    onLoadMenu: PropTypes.func,\r\n\r\n    store: PropTypes.object,\r\n    showAction: PropTypes.string,\r\n    updateAction: PropTypes.string,\r\n    loadCompletedAction: PropTypes.string\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      isShow : !!props.isInitShow,\r\n      isLoaded : false,\r\n      menuItems: []\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore);\r\n    this._loadMenu();\r\n  }\r\n  UNSAFE_componentWillUpdate(nextProps, nextState){\r\n     if (!nextState.isLoaded && nextState.isShow){\r\n       this._loadMenu();\r\n     }\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  _loadMenu = () => {\r\n    const {\r\n      browserType,\r\n      caption,\r\n      sourceMenuUrl,\r\n      onLoadMenu\r\n    } = this.props;\r\n    onLoadMenu({ browserType, caption, sourceMenuUrl });\r\n  }\r\n\r\n  _onStore = (actionType, data) => {\r\n    const { browserType, store, showAction, updateAction, loadCompletedAction } = this.props;\r\n    if (actionType === showAction && data === browserType){\r\n      this._handleShow();\r\n    } else if (actionType === loadCompletedAction && data.browserType === browserType){\r\n      this.setState({\r\n        menuItems: data.menuItems,\r\n        isLoaded : true\r\n      });\r\n    } else if (actionType === updateAction && data === browserType){\r\n      this.setState({\r\n        menuItems: store.getBrowserMenu(browserType)\r\n      });\r\n    }\r\n  }\r\n\r\n  _handleHide = () => {\r\n    this.setState({ isShow : false })\r\n  }\r\n  _handleShow = () => {\r\n    this.setState({ isShow : true })\r\n  }\r\n\r\n  _renderMenuParts(rowClass, menuItems=[]){\r\n    return menuItems.map((menuPart, index) => {\r\n      return (\r\n         <MenuPart\r\n            {...menuPart}\r\n            key={index}\r\n            rowClass={rowClass}\r\n        />);\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const { caption, children, rowClass } = this.props\r\n        , { menuItems, isShow } = this.state;\r\n\r\n    return (\r\n       <Browser isShow={isShow} style={STYLE.BROWSER}>\r\n          <CaptionRow\r\n             caption={caption}\r\n             onClose={this._handleHide}\r\n          />\r\n          <ScrollPane style={STYLE.SCROLL_DIV}>\r\n            {this._renderMenuParts(rowClass, menuItems)}\r\n            {children}\r\n          </ScrollPane>\r\n       </Browser>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuBrowserDynamic\r\n"],"file":"MenuBrowserDynamic.js"}