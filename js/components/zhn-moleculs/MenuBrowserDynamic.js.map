{"version":3,"sources":["../../../src/components/zhn-moleculs/MenuBrowserDynamic.jsx"],"names":["STYLE","BROWSER","paddingRight","SCROLL_DIV","overflowY","height","MenuBrowserDynamic","props","_loadMenu","browserType","caption","sourceMenuUrl","onLoadMenu","_onStore","actionType","data","store","showAction","updateAction","loadCompletedAction","_handleShow","setState","menuItems","isLoaded","getBrowserMenu","_handleHide","isShow","state","isInitShow","unsubscribe","listen","nextProps","nextState","rowClass","map","menuPart","index","children","_renderMenuParts","Component"],"mappings":"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","file":"MenuBrowserDynamic.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Browser from '../zhn-atoms/Browser';\r\nimport CaptionRow from '../zhn-atoms/CaptionRow';\r\nimport ScrollPane from '../zhn-atoms/ScrollPane';\r\nimport MenuPart from './MenuPart';\r\n\r\nconst STYLE = {\r\n  BROWSER : {\r\n    paddingRight: '0'\r\n  },\r\n  SCROLL_DIV : {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    //height: 'calc(100vh - 90px)',\r\n    paddingRight: '10px'\r\n  }\r\n};\r\n\r\nclass MenuBrowserDynamic extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isInitShow: PropTypes.bool,\r\n    browserType: PropTypes.string,\r\n    caption: PropTypes.string,\r\n    sourceMenuUrl: PropTypes.string,\r\n    onLoadMenu: PropTypes.func,\r\n\r\n    store: PropTypes.object,\r\n    showAction: PropTypes.string,\r\n    updateAction: PropTypes.string,\r\n    loadCompletedAction: PropTypes.string\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      isShow : !!props.isInitShow,\r\n      isLoaded : false,\r\n      menuItems: []\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore);\r\n  }\r\n  componentDidMount(){\r\n    this._loadMenu();\r\n  }\r\n  componentWillUpdate(nextProps, nextState){\r\n     if (!nextState.isLoaded && nextState.isShow){\r\n       this._loadMenu();\r\n     }\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n\r\n  _loadMenu = () => {\r\n    const { browserType, caption, sourceMenuUrl, onLoadMenu } = this.props;\r\n    onLoadMenu({ browserType, caption, sourceMenuUrl });\r\n  }\r\n\r\n  _onStore = (actionType, data) => {\r\n    const { browserType, store, showAction, updateAction, loadCompletedAction } = this.props;\r\n    if (actionType === showAction && data === browserType){\r\n      this._handleShow();\r\n    } else if (actionType === loadCompletedAction && data.browserType === browserType){\r\n      this.setState({ menuItems: data.menuItems, isLoaded : true });\r\n    } else if (actionType === updateAction && data === browserType){\r\n      this.setState({ menuItems: store.getBrowserMenu(browserType) });\r\n    }\r\n  }\r\n\r\n  _handleHide = () => {\r\n    this.setState({ isShow : false })\r\n  }\r\n  _handleShow = () => {\r\n    this.setState({ isShow : true })\r\n  }\r\n\r\n  _renderMenuParts(rowClass, menuItems=[]){\r\n    return menuItems.map((menuPart, index) => {\r\n      return (\r\n         <MenuPart\r\n            {...menuPart}\r\n            key={index}\r\n            rowClass={rowClass}\r\n        />);\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const { caption, children, rowClass } = this.props\r\n        , { menuItems, isShow } = this.state;\r\n    \r\n    return (\r\n       <Browser isShow={isShow} style={STYLE.BROWSER}>\r\n          <CaptionRow\r\n             caption={caption}\r\n             onClose={this._handleHide}\r\n          />\r\n          <ScrollPane style={STYLE.SCROLL_DIV}>\r\n            {this._renderMenuParts(rowClass, menuItems)}\r\n            {children}\r\n          </ScrollPane>\r\n       </Browser>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuBrowserDynamic\r\n"]}