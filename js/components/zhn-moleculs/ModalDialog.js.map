{"version":3,"sources":["../../../src/components/zhn-moleculs/ModalDialog.jsx"],"names":["CL","SHOWING","HIDING","STYLE","SHOW","display","HIDE","HIDE_POPUP","opacity","transform","ROOT_DIV","position","top","left","backgroundColor","border","borderRadius","boxShadow","zIndex","COMMAND_DIV","cursor","float","marginTop","marginBottom","marginRight","ModalDialog","wasClosing","state","_handleClickDialog","event","stopPropagation","_renderCommandButton","commandButtons","onClose","nextProps","nextState","props","isNotUpdate","prevProps","prevState","setTimeout","setState","timeout","isShow","isWithButton","caption","style","children","_className","_style","Component","defaultProps"],"mappings":"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","file":"ModalDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport Caption from './DialogCaption'\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nconst CL = {\r\n  SHOWING: 'show-popup',\r\n  HIDING: 'hide-popup'\r\n};\r\n\r\nconst STYLE = {\r\n  SHOW : {\r\n    display : 'block'\r\n  },\r\n  HIDE : {\r\n    display : 'none'\r\n  },\r\n  HIDE_POPUP : {\r\n    opacity: 0,\r\n    transform : 'scaleY(0)'\r\n  },\r\n  ROOT_DIV: {\r\n    position: 'absolute',\r\n    top: '20%',\r\n    left: '40%',\r\n    display: 'block',\r\n    backgroundColor: '#4D4D4D',\r\n    border: 'solid 2px #232F3B',\r\n    borderRadius: '5px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 6px',\r\n    zIndex: 10\r\n  },\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n};\r\n\r\nclass ModalDialog extends Component {\r\n  /*\r\n   static propTypes = {\r\n     isShow: PropTypes.bool,\r\n     isWithButton: PropTypes.bool,\r\n     timeout: PropTypes.number,\r\n     caption: PropTypes.string,\r\n     style: PropTypes.object,\r\n\r\n     isNotUpdate: PropTypes.bool,\r\n\r\n     children: PropTypes.oneOfType([\r\n       PropTypes.arrayOf(PropTypes.node),\r\n       PropTypes.node\r\n     ]),\r\n     commandButtons: PropTypes.arrayOf(PropTypes.node),\r\n     onClose: PropTypes.func\r\n   }\r\n   */\r\n   static defaultProps = {\r\n     isWithButton: true,\r\n     isNotUpdate: false,\r\n     timeout: 450\r\n   }\r\n\r\n   wasClosing = false\r\n   state = {}\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (nextProps !== this.props){\r\n       if (nextProps.isNotUpdate){\r\n         return false;\r\n       }\r\n     }\r\n     return true;\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState){\r\n     if (this.wasClosing){\r\n       setTimeout(()=>{\r\n         this.setState({});\r\n       }, this.props.timeout)\r\n     }\r\n   }\r\n\r\n  _handleClickDialog = (event) => {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  _renderCommandButton = (commandButtons, onClose) => (\r\n      <div style={STYLE.COMMAND_DIV}>\r\n        {commandButtons}\r\n        <FlatButton\r\n          key=\"close\"\r\n          caption=\"Close\"\r\n          title=\"Click to close modal dialog\"\r\n          timeout={0}\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n  )\r\n\r\n  render(){\r\n    const {\r\n            isShow, isWithButton, caption, style,\r\n            children, commandButtons, onClose\r\n          } = this.props;\r\n\r\n    let _className, _style;\r\n\r\n    if (this.wasClosing){\r\n      _style = STYLE.HIDE;\r\n      this.wasClosing = false;\r\n    } else {\r\n      _className = isShow ? CL.SHOWING : CL.HIDING;\r\n      _style = isShow ? STYLE.SHOW : STYLE.HIDE_POPUP;\r\n      if (!isShow){\r\n        this.wasClosing = true;\r\n      }\r\n    }\r\n\r\n    return (\r\n         <div\r\n             className={_className}\r\n             style={{ ...STYLE.ROOT_DIV, ...style, ..._style }}\r\n             onClick={this._handleClickDialog}\r\n         >\r\n             <Caption\r\n               caption={caption}\r\n               onClose={onClose}\r\n             />\r\n             <div>\r\n               {children}\r\n             </div>\r\n            {isWithButton && this._renderCommandButton(commandButtons, onClose)}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalDialog\r\n"]}