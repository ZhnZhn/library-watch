{"version":3,"sources":["../../../src/components/zhn-moleculs/ModalDialog.jsx"],"names":["CL","SHOWING","HIDING","STYLE","SHOW","display","HIDE","HIDE_POPUP","opacity","transform","ROOT_DIV","position","top","left","backgroundColor","border","borderRadius","boxShadow","zIndex","COMMAND_DIV","cursor","marginTop","marginBottom","marginRight","ModalDialog","wasClosing","state","_handleClickDialog","event","stopPropagation","_renderCommandButton","commandButtons","onClose","shouldComponentUpdate","nextProps","nextState","props","isNotUpdate","componentDidUpdate","prevProps","prevState","setTimeout","setState","timeout","render","isShow","isWithButton","caption","style","children","_className","_style","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport Caption from './DialogCaption'\r\nimport FlatButton from '../zhn-m/FlatButton'\r\n\r\nconst CL = {\r\n  SHOWING: 'show-popup',\r\n  HIDING: 'hide-popup'\r\n};\r\n\r\nconst STYLE = {\r\n  SHOW : {\r\n    display : 'block'\r\n  },\r\n  HIDE : {\r\n    display : 'none'\r\n  },\r\n  HIDE_POPUP : {\r\n    opacity: 0,\r\n    transform : 'scaleY(0)'\r\n  },\r\n  ROOT_DIV: {\r\n    position: 'absolute',\r\n    top: '20%',\r\n    left: '40%',\r\n    display: 'block',\r\n    backgroundColor: '#4D4D4D',\r\n    border: 'solid 2px #232F3B',\r\n    borderRadius: '5px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 6px',\r\n    zIndex: 10\r\n  },\r\n  COMMAND_DIV : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n};\r\n\r\nclass ModalDialog extends Component {\r\n  /*\r\n   static propTypes = {\r\n     isShow: PropTypes.bool,\r\n     isWithButton: PropTypes.bool,\r\n     timeout: PropTypes.number,\r\n     caption: PropTypes.string,\r\n     style: PropTypes.object,\r\n\r\n     isNotUpdate: PropTypes.bool,\r\n\r\n     children: PropTypes.oneOfType([\r\n       PropTypes.arrayOf(PropTypes.node),\r\n       PropTypes.node\r\n     ]),\r\n     commandButtons: PropTypes.arrayOf(PropTypes.node),\r\n     onClose: PropTypes.func\r\n   }\r\n   */\r\n   static defaultProps = {\r\n     isWithButton: true,\r\n     isNotUpdate: false,\r\n     timeout: 450\r\n   }\r\n\r\n   wasClosing = false\r\n   state = {}\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n     if (nextProps !== this.props){\r\n       if (nextProps.isNotUpdate){\r\n         return false;\r\n       }\r\n     }\r\n     return true;\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState){\r\n     if (this.wasClosing){\r\n       setTimeout(()=>{\r\n         this.setState({});\r\n       }, this.props.timeout)\r\n     }\r\n   }\r\n\r\n  _handleClickDialog = (event) => {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  _renderCommandButton = (commandButtons, onClose) => (\r\n      <div style={STYLE.COMMAND_DIV}>\r\n        {commandButtons}\r\n        <FlatButton\r\n          key=\"close\"\r\n          caption=\"Close\"\r\n          title=\"Click to close modal dialog\"\r\n          timeout={0}\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n  )\r\n\r\n  render(){\r\n    const {\r\n            isShow, isWithButton, caption, style,\r\n            children, commandButtons, onClose\r\n          } = this.props;\r\n\r\n    let _className, _style;\r\n\r\n    if (this.wasClosing){\r\n      _style = STYLE.HIDE;\r\n      this.wasClosing = false;\r\n    } else {\r\n      _className = isShow ? CL.SHOWING : CL.HIDING;\r\n      _style = isShow ? STYLE.SHOW : STYLE.HIDE_POPUP;\r\n      if (!isShow){\r\n        this.wasClosing = true;\r\n      }\r\n    }\r\n\r\n    return (\r\n         <div\r\n             className={_className}\r\n             style={{ ...STYLE.ROOT_DIV, ...style, ..._style }}\r\n             onClick={this._handleClickDialog}\r\n         >\r\n             <Caption\r\n               caption={caption}\r\n               onClose={onClose}\r\n             />\r\n             <div>\r\n               {children}\r\n             </div>\r\n            {isWithButton && this._renderCommandButton(commandButtons, onClose)}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalDialog\r\n"],"file":"ModalDialog.js"}