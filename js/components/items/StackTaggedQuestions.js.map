{"version":3,"sources":["../../../src/components/items/StackTaggedQuestions.jsx"],"names":["ITEM_DESCRIPTION","styles","rootDiv","lineHeight","marginBottom","marginRight","position","headerDiv","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingLeft","width","height","captionSpanOpen","display","color","cursor","maxWidth","fontWeight","whiteSpace","textOverflow","overflow","float","SPAN_VERSION","paddingRight","BTN_CIRCLE","marginLeft","SPAN_TAG","paddingBottom","marginTop","borderRadius","PURPLE_BADGE","fontSize","GREEN_BADGE","BLACK_BAGDE","StackTaggedQuestions","createClass","getInitialState","isShow","_handlerToggleOpen","setState","state","_handlerClickWatch","props","repo","requestType","onWatchItem","caption","descr","config","version","_renderCommits","items","map","item","index","answer_count","score","view_count","title","dateAgo","link","owner","tags","reputation","display_name","className","_renderTags","tag","render","onCloseItem","_items_count","length","_styleCaption"],"mappings":"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","file":"StackTaggedQuestions.js","sourcesContent":["import React from 'react';\r\n\r\n//import ButtonCircle from '../zhnAtoms/ButtonCircle';\r\nimport SvgClose from '../zhnAtoms/SvgClose';\r\nimport ShowHide from '../zhnAtoms/ShowHide';\r\nimport DateAgo from '../zhnAtoms/DateAgo';\r\n\r\nconst ITEM_DESCRIPTION = \"GitHub Repository Commits\"\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    lineHeight : 1.5,\r\n    marginBottom: '10px',\r\n    marginRight: '25px',\r\n    //marginRight: '10px',\r\n    position : 'relative'\r\n  },\r\n  headerDiv: {\r\n    backgroundColor: '#232F3B',\r\n    borderTopLeftRadius: '10px',\r\n    borderTopRightRadius: '10px',\r\n    paddingTop: '4px',\r\n    paddingLeft: '10px',\r\n    lineHeight: 1.5,\r\n    //height: '25px',\r\n    //width: '600px'\r\n    width : '100%',\r\n    height: '30px'\r\n  },\r\n  captionSpanOpen : {\r\n    display : 'inline-block',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    cursor: 'pointer',\r\n    maxWidth: '500px',\r\n    fontWeight : 'bold',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow : 'ellipsis',\r\n    overflow : 'hidden',\r\n    float : 'left'\r\n  },\r\n\r\n  SPAN_VERSION : {\r\n    color: '#80c040',\r\n    paddingLeft : '10px',\r\n    paddingRight : '10px'\r\n  },\r\n  BTN_CIRCLE : {\r\n    marginLeft: '10px'\r\n  },\r\n  SPAN_TAG : {\r\n    display: 'inline-block',\r\n    color: 'black',\r\n    backgroundColor: 'gray',\r\n    paddingTop: '4px',\r\n    paddingLeft: '8px',\r\n    paddingRight: '8px',\r\n    paddingBottom: '4px',\r\n    marginLeft: '8px',\r\n    marginRight: '8px',\r\n    marginTop: '6px',\r\n    marginBottom: '2px',\r\n    borderRadius: '16px'\r\n  },\r\n\r\n  PURPLE_BADGE : {\r\n    color: '#a487d4', fontSize: '18px', paddingRight: '8px'\r\n  },\r\n  GREEN_BADGE : {\r\n    color: '#80c040', fontSize: '18px', paddingRight: '8px'\r\n  },\r\n  BLACK_BAGDE : {\r\n    color: 'black', fontSize: '18px', paddingRight: '8px'\r\n  }\r\n}\r\n\r\nconst StackTaggedQuestions = React.createClass({\r\n  getInitialState(){\r\n    return {\r\n      isShow : true\r\n    }\r\n  },\r\n\r\n  _handlerToggleOpen(){\r\n    this.setState({ isShow: !this.state.isShow })\r\n  },\r\n\r\n  _handlerClickWatch(){\r\n    const { repo, requestType, onWatchItem } = this.props\r\n        , caption = `${repo}`\r\n        , descr = ITEM_DESCRIPTION\r\n    onWatchItem({\r\n       caption : caption,\r\n       config : { repo, requestType, version : '', caption, descr }\r\n    });\r\n  },\r\n\r\n  _renderCommits(items){\r\n     return items.map((item, index) => {\r\n        const {\r\n                 answer_count, score, view_count,\r\n                 title, dateAgo, link,\r\n                 owner, tags\r\n               } = item\r\n            , { reputation, display_name } = owner\r\n            , className = (index % 2)\r\n                     ? 'row-even not-selected'\r\n                     : 'row-odd not-selected'\r\n\r\n        return (\r\n           <div key={index} className={className}>\r\n              <a href={link}>\r\n              <div style={{ paddingBottom: '8px' }}>\r\n                <span style={styles.PURPLE_BADGE}>\r\n                  &#9874;&nbsp;{answer_count}\r\n                </span>\r\n                <span style={styles.GREEN_BADGE}>\r\n                  &#9918;&nbsp;{score}\r\n                </span>\r\n                <span style={styles.BLACK_BAGDE}>\r\n                  &#9784;&nbsp;{view_count}\r\n                </span>\r\n                <span style={styles.GREEN_BADGE}>\r\n                  &#9752;&nbsp;{reputation}\r\n                </span>\r\n                <span style={styles.BLACK_BAGDE}>\r\n                  {display_name}\r\n                </span>\r\n                <DateAgo\r\n                   dateAgo={dateAgo}\r\n                   date={\"\"}\r\n                />\r\n              </div>\r\n                <div>\r\n                  {title}\r\n                </div>\r\n                <div>\r\n                  {this._renderTags(tags)}\r\n                </div>\r\n              </a>\r\n           </div>\r\n        );\r\n     })\r\n  },\r\n\r\n  _renderTags(tags){\r\n    return tags.map((tag, index) => {\r\n       return (\r\n         <span key={index} style={styles.SPAN_TAG}>\r\n            {tag}\r\n         </span>\r\n       );\r\n    })\r\n  },\r\n\r\n  render(){\r\n    const {\r\n            repo, caption, items=[],\r\n            onCloseItem\r\n           } = this.props\r\n        , _items_count = items.length\r\n        , _styleCaption = styles.captionSpanOpen\r\n        , { isShow } = this.state;\r\n\r\n     return (\r\n       <div style={styles.rootDiv}>\r\n         <div style={styles.headerDiv}>\r\n           <span\r\n              className=\"not-selected\"\r\n              title={caption}\r\n              style={_styleCaption}\r\n              onClick={this._handlerToggleOpen}\r\n           >\r\n             <span>\r\n               {repo}\r\n             </span>\r\n             <span style={{ color: '#a9a9a9', paddingLeft: '12px' }}>\r\n                {_items_count}\r\n             </span>\r\n           </span>\r\n           {/*\r\n           <ButtonCircle\r\n              caption={'W'}\r\n              title=\"Add to Watch\"\r\n              style={styles.BTN_CIRCLE}\r\n              onClick={this._handlerClickWatch}\r\n           />\r\n           */}\r\n           <SvgClose onClose={onCloseItem} />\r\n         </div>\r\n         <ShowHide isShow={isShow}>\r\n           {this._renderCommits(items)}\r\n         </ShowHide>\r\n       </div>\r\n     );\r\n  }\r\n});\r\n\r\nexport default StackTaggedQuestions\r\n"]}