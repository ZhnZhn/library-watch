{"version":3,"file":"useDnDHandlers.js","names":["_uiApi","require","_has","_dndHandlers","DELTA","HAS_TOUCH_EVENTS","MARK_REMOVE","REMOVE_ITEM","REMOVE_UNDER","_getTouchesClientX","ev","touches","clientX","_getChangedTouches","changedTouches","useDnDHandlers","item","setIsClose","onRemoveItem","onRemoveUnder","_refClientX","useRef","useMemo","_calcDeltaX","Math","abs","getRefValue","onDragStart","setRefValue","styleDragStart","dataTransfer","effectAllowed","dropEffect","onTouchStart","_clientX","onTouchMove","_hEnd","_deltaX","onDragEnd","preventDefault","styleDragEnd","onTouchEnd","draggable","onDrop","onDragOver","onDragEnter","onDragLeave","_default","exports","default"],"sources":["../../../../src/components/items/stack/useDnDHandlers.js"],"sourcesContent":["import {\r\n  useRef,\r\n  useMemo,\r\n  getRefValue,\r\n  setRefValue\r\n} from '../../uiApi';\r\n\r\nimport { HAS_TOUCH_EVENTS } from '../../has';\r\nimport {\r\n  styleDragStart,\r\n  styleDragEnd,\r\n  preventDefault\r\n} from './dnd-handlers';\r\n\r\nconst DELTA = HAS_TOUCH_EVENTS ? {\r\n   MARK_REMOVE: 50,\r\n   REMOVE_ITEM: 90,\r\n   REMOVE_UNDER: 150\r\n} : {\r\n   MARK_REMOVE: 25,\r\n   REMOVE_ITEM: 35,\r\n   REMOVE_UNDER: 150\r\n};\r\n\r\nconst _getTouchesClientX = (ev) =>\r\n  (((ev || {}).touches || [])[0] || {}).clientX || 0;\r\nconst _getChangedTouches = (ev) =>\r\n  (((ev || {}).changedTouches || [])[0] || {}).clientX || 0;\r\n\r\nconst useDnDHandlers = (\r\n  item,\r\n  setIsClose,\r\n  onRemoveItem,\r\n  onRemoveUnder\r\n) => {\r\n  const _refClientX = useRef()\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  return useMemo(() => {\r\n    const _calcDeltaX = clientX =>\r\n      Math.abs(getRefValue(_refClientX) - clientX)\r\n    , onDragStart = (ev) => {\r\n       setRefValue(_refClientX, ev.clientX)\r\n       styleDragStart(ev)\r\n       if (ev && ev.dataTransfer) {\r\n         ev.dataTransfer.effectAllowed=\"move\"\r\n         ev.dataTransfer.dropEffect=\"move\"\r\n       }\r\n    }\r\n    , onTouchStart = (ev) => {\r\n       const _clientX = _getTouchesClientX(ev);\r\n       if (_clientX) {\r\n         setRefValue(_refClientX, _clientX)\r\n       }\r\n    }\r\n    , onTouchMove = (ev) => {\r\n       const _clientX = _getTouchesClientX(ev);\r\n       if (_clientX\r\n         && _calcDeltaX(_clientX) > DELTA.MARK_REMOVE) {\r\n         styleDragStart(ev)\r\n       }\r\n    }\r\n    , _hEnd = (clientX) => {\r\n       if (clientX) {\r\n         const _deltaX = _calcDeltaX(clientX);\r\n         if (_deltaX > DELTA.REMOVE_UNDER) {\r\n           onRemoveUnder(item)\r\n         } else if (_deltaX > DELTA.REMOVE_ITEM){\r\n           onRemoveItem(item)\r\n           setIsClose(true)\r\n         }\r\n       }\r\n    }\r\n  , onDragEnd = (ev) => {\r\n     ev.preventDefault()\r\n     styleDragEnd()\r\n     _hEnd(ev.clientX)\r\n  }\r\n  , onTouchEnd = (ev) => {\r\n     //ev.preventDefault()\r\n     styleDragEnd()\r\n     _hEnd(_getChangedTouches(ev))\r\n  };\r\n  return HAS_TOUCH_EVENTS\r\n    ? {\r\n        onTouchStart,\r\n        onTouchMove,\r\n        onTouchEnd\r\n      }\r\n    : {\r\n        draggable: true,\r\n        onDragStart,\r\n        onDragEnd,\r\n        onDrop: preventDefault,\r\n        onDragOver: preventDefault,\r\n        onDragEnter: preventDefault,\r\n        onDragLeave: preventDefault\r\n      }\r\n  }, []);\r\n  // item, onRemoveItem, setIsClose, onRemoveUnder\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n};\r\n\r\nexport default useDnDHandlers\r\n"],"mappings":"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","ignoreList":[]}