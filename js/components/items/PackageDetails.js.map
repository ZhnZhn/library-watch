{"version":3,"sources":["../../../src/components/items/PackageDetails.jsx"],"names":["S","REPO","paddingTop","paddingLeft","REPO_LINK","marginRight","_crRepositoryCaption","href","indexOf","RowLinks","repoHref","hpHref","_trimTo5","n","substr","_toYear","strDate","split","_crRepositoryHref","type","url","replace","PackageDetails","json","errMsg","analyzedAt","collected","score","github","metadata","starsCount","issues","homepage","openCount","version","license","repository","final","_repositoryHref"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,CADR;AAEJC,IAAAA,WAAW,EAAE;AAFT,GADE;AAKRC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE;AADJ;AALH,CAAV;;AAUA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,IAAI;AAAA,SAC/BA,IAAI,CAACC,OAAL,CAAa,oBAAb,MAAuC,CAAC,CAAxC,GACI,mBADJ,GAEI,YAH2B;AAAA,CAAjC;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0B;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAC1C,MAAI,CAACD,QAAD,IAAa,CAACC,MAAlB,EAA0B;AACxB,WAAO,IAAP;AACD;;AACD,sBACE;AAAK,IAAA,KAAK,EAAEX,CAAC,CAACC,IAAd;AAAA,4BACE,qBAAC,gBAAD;AACG,MAAA,KAAK,EAAED,CAAC,CAACI,SADZ;AAEG,MAAA,IAAI,EAAEM,QAFT;AAGG,MAAA,OAAO,EAAEJ,oBAAoB,CAACI,QAAD;AAHhC,MADF,eAME,qBAAC,gBAAD;AACG,MAAA,IAAI,EAAEC,MADT;AAEG,MAAA,OAAO,EAAC;AAFX,MANF;AAAA,IADF;AAaA,CAjBD;;AAmBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC;AAAA,SAAI,CAAC,KAAGA,CAAJ,EAAOC,MAAP,CAAc,CAAd,EAAiB,CAAjB,CAAJ;AAAA,CAAlB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,OAAO;AAAA,SAAI,CAAC,KAAGA,OAAJ,EACzBC,KADyB,CACnB,GADmB,EACd,CADc,KACR,EADI;AAAA,CAAvB;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,MAASC,GAAT,SAASA,GAAT;AAAA,SAAmBD,IAAI,KAAK,KAAT,GAC1CC,GAAG,CAACC,OAAJ,CAAY,MAAZ,EAAmB,EAAnB,EAAuBA,OAAvB,CAA+B,MAA/B,EAAuC,EAAvC,EAA2CA,OAA3C,CAAmD,QAAnD,EAA4D,UAA5D,CAD0C,GAE1C,KAAK,CAFkB;AAAA,CAA1B;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,QAAc;AAAA,MAAXC,IAAW,SAAXA,IAAW;;AAAA,cACcA,IAAI,IAAI,EADtB;AAAA,MAC3BC,MAD2B,SAC3BA,MAD2B;AAAA,MACnBC,UADmB,SACnBA,UADmB;AAAA,MACPC,SADO,SACPA,SADO;AAAA,MACIC,KADJ,SACIA,KADJ;;AAGnC,MAAIH,MAAJ,EAAY;AACV,wBAAQ,qBAAC,kBAAD;AAAQ,MAAA,MAAM,EAAEA;AAAhB,MAAR;AACD;;AALkC,cAONE,SAAS,IAAI,EAPP;AAAA,MAO3BE,MAP2B,SAO3BA,MAP2B;AAAA,MAOnBC,QAPmB,SAOnBA,QAPmB;AAAA,cAQED,MAAM,IAAI,EARZ;AAAA,MAQ/BE,UAR+B,SAQ/BA,UAR+B;AAAA,MAQnBC,MARmB,SAQnBA,MARmB;AAAA,MAQXC,QARW,SAQXA,QARW;AAAA,cASjBD,MAAM,IAAI,EATO;AAAA,MAS/BE,SAT+B,SAS/BA,SAT+B;AAAA,cAUEJ,QAAQ,IAAI,EAVd;AAAA,MAU/BK,OAV+B,SAU/BA,OAV+B;AAAA,MAUtBC,OAVsB,SAUtBA,OAVsB;AAAA,MAUbC,UAVa,SAUbA,UAVa;AAAA,cAWrBT,KAAK,IAAI,EAXY;AAAA,MAW/BU,MAX+B;AAAA,MAYjCC,eAZiC,GAYfpB,iBAAiB,CAACkB,UAAU,IAAI,EAAf,CAZF;;AAanC,sBACE;AAAA,4BACE;AAAA,8BACE,qBAAC,qBAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,KAAK,EAAEN;AAFT,QADF,eAKE,qBAAC,qBAAD;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,KAAK,EAAEG;AAFT,QALF,eASE,qBAAC,qBAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,KAAK,EAAEC;AAFT,QATF,eAaE,qBAAC,qBAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,KAAK,EAAEtB,QAAQ,CAACyB,MAAD;AAFjB,QAbF,eAiBE,qBAAC,qBAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,KAAK,EAAEF;AAFT,QAjBF,eAqBE,qBAAC,qBAAD;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,KAAK,EAAEpB,OAAO,CAACU,UAAD;AAFhB,QArBF;AAAA,MADF,eA2BE,qBAAC,QAAD;AACE,MAAA,QAAQ,EAAEa,eADZ;AAEE,MAAA,MAAM,EAAEN;AAFV,MA3BF;AAAA,IADF;AAkCD,CA/CD;;eAiDeV,c","sourcesContent":["import ErrMsg from './ErrMsg';\r\nimport CellValue from './CellValue';\r\nimport Link from './Link';\r\n\r\nconst S = {\r\n  REPO: {\r\n    paddingTop: 4,\r\n    paddingLeft: 8\r\n  },\r\n  REPO_LINK: {\r\n    marginRight: 24\r\n  }\r\n};\r\n\r\nconst _crRepositoryCaption = href =>\r\n  href.indexOf('https://github.com') !== -1\r\n    ? 'GitHub Repository'\r\n    : 'Repository';\r\n\r\nconst RowLinks = ({ repoHref, hpHref }) => {\r\n if (!repoHref && !hpHref) {\r\n   return null;\r\n }\r\n return (\r\n   <div style={S.REPO}>\r\n     <Link\r\n        style={S.REPO_LINK}\r\n        href={repoHref}\r\n        caption={_crRepositoryCaption(repoHref)}\r\n     />\r\n     <Link\r\n        href={hpHref}\r\n        caption=\"HomePage\"\r\n     />\r\n   </div>\r\n );\r\n}\r\n\r\nconst _trimTo5 = n => (''+n).substr(0, 5);\r\nconst _toYear = strDate => (''+strDate)\r\n .split('T')[0] || '';\r\n\r\nconst _crRepositoryHref = ({ type, url }) => type === 'git'\r\n ? url.replace('git+','').replace('.git', '').replace('git://','https://')\r\n : void 0;\r\n\r\nconst PackageDetails = ({ json }) => {\r\n  const { errMsg, analyzedAt, collected, score } = json || {}\r\n\r\n  if (errMsg) {\r\n    return (<ErrMsg errMsg={errMsg} />);\r\n  }\r\n\r\n  const { github, metadata } = collected || {}\r\n  , { starsCount, issues, homepage } = github || {}\r\n  , { openCount } = issues || {}\r\n  , { version, license, repository } = metadata || {}\r\n  , { final } = score || {}\r\n  , _repositoryHref = _crRepositoryHref(repository || {})\r\n  return (\r\n    <>\r\n      <div>\r\n        <CellValue\r\n          caption=\"stars\"\r\n          value={starsCount}\r\n        />\r\n        <CellValue\r\n          caption=\"issues\"\r\n          value={openCount}\r\n        />\r\n        <CellValue\r\n          caption=\"version\"\r\n          value={version}\r\n        />\r\n        <CellValue\r\n          caption=\"score\"\r\n          value={_trimTo5(final)}\r\n        />\r\n        <CellValue\r\n          caption=\"license\"\r\n          value={license}\r\n        />\r\n        <CellValue\r\n          caption=\"onDate\"\r\n          value={_toYear(analyzedAt)}\r\n        />\r\n      </div>\r\n      <RowLinks\r\n        repoHref={_repositoryHref}\r\n        hpHref={homepage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PackageDetails\r\n"],"file":"PackageDetails.js"}