{"version":3,"sources":["../../../src/components/items/GitHubIssues.jsx"],"names":["ITEM_DESCRIPTION","styles","rootDiv","lineHeight","marginBottom","marginRight","position","captionSpanOpen","display","color","cursor","maxWidth","fontWeight","whiteSpace","textOverflow","overflow","float","SPAN_VERSION","paddingLeft","paddingRight","BTN_CIRCLE","marginLeft","GitHubIssues","state","isShow","_handlerToggleOpen","setState","_handlerClickWatch","props","repo","requestType","onWatchItem","caption","descr","config","version","_renderIssues","issues","map","item","index","number","created_at","updated_at","title","html_url","className","paddingBottom","replace","onCloseItem","_number","length","_styleCaption","Component"],"mappings":"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","file":"GitHubIssues.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Caption from './ItemCaption'\r\nimport ButtonCircle from '../zhnAtoms/ButtonCircle';\r\nimport ShowHide from '../zhnAtoms/ShowHide';\r\n\r\nconst ITEM_DESCRIPTION = \"GitHub Repository Issues\"\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    lineHeight : 1.5,\r\n    marginBottom: '10px',\r\n    marginRight: '25px',\r\n    //marginRight: '10px',\r\n    position : 'relative'\r\n  },\r\n  captionSpanOpen : {\r\n    display : 'inline-block',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    cursor: 'pointer',\r\n    maxWidth: '500px',\r\n    fontWeight : 'bold',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow : 'ellipsis',\r\n    overflow : 'hidden',\r\n    float : 'left'\r\n  },\r\n\r\n  SPAN_VERSION : {\r\n    color: '#80c040',\r\n    paddingLeft : '10px',\r\n    paddingRight : '10px'\r\n  },\r\n  BTN_CIRCLE : {\r\n    marginLeft: '10px'\r\n  }\r\n}\r\n\r\n\r\nclass GitHubIssues extends Component {\r\n  state = {\r\n    isShow: true\r\n  }\r\n\r\n  _handlerToggleOpen = () => {\r\n    this.setState({ isShow: !this.state.isShow })\r\n  }\r\n\r\n  _handlerClickWatch = () => {\r\n    const { repo, requestType, onWatchItem } = this.props\r\n        , caption = `${repo}`\r\n        , descr = ITEM_DESCRIPTION\r\n    onWatchItem({\r\n       caption : caption,\r\n       config : { repo, requestType, version : '', caption, descr }\r\n    });\r\n  }\r\n\r\n  _renderIssues = (issues) => {\r\n     return issues.map((item, index) => {\r\n        const { state, number, created_at, updated_at, title, html_url } = item\r\n            , className = (index % 2)\r\n                     ? 'row-even not-selected'\r\n                     : 'row-odd not-selected'\r\n        return (\r\n           <div key={index} className={className}>\r\n             <a href={html_url}>\r\n                <div style={{ paddingBottom: '8px' }}>\r\n                  <span style={{ paddingRight: '8px' }}>\r\n                    {state}\r\n                  </span>\r\n                  <span style={{ paddingRight: '8px' }}>\r\n                    {`(#${number})`}\r\n                  </span>\r\n                  <span style={{ paddingRight: '8px' }}>\r\n                    {created_at.replace('T', ' ').replace('Z', '')}\r\n                  </span>\r\n                  <span>\r\n                    {updated_at.replace('T', ' ').replace('Z', '')}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  {title}\r\n                </div>\r\n             </a>\r\n           </div>\r\n        );\r\n     })\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            repo, caption, issues=[],\r\n            onCloseItem\r\n           } = this.props\r\n        ,  _number = issues.length\r\n        , _styleCaption = styles.captionSpanOpen\r\n        , { isShow } = this.state;\r\n\r\n     return (\r\n       <div style={styles.rootDiv}>\r\n         <Caption onClose={onCloseItem}>\r\n           <span\r\n              className=\"not-selected\"\r\n              title={caption}\r\n              style={_styleCaption}\r\n              onClick={this._handlerToggleOpen}\r\n           >\r\n             <span style={{ paddingRight: '8px' }}>\r\n               {repo}\r\n             </span>\r\n             <span>\r\n               {_number}\r\n             </span>\r\n           </span>\r\n           <ButtonCircle\r\n              caption=\"W\"\r\n              title=\"Add to Watch\"\r\n              style={styles.BTN_CIRCLE}\r\n              onClick={this._handlerClickWatch}\r\n           />\r\n         </Caption>\r\n         <ShowHide isShow={isShow}>\r\n           {this._renderIssues(issues)}\r\n         </ShowHide>\r\n       </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default GitHubIssues\r\n"]}