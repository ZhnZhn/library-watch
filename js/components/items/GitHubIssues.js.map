{"version":3,"sources":["../../../src/components/items/GitHubIssues.jsx"],"names":["ITEM_DESCRIPTION","S","STATE","STYLE","PR_8","color","NUMBER","DATE","_toDate","strDate","replace","GitHubIssues","state","isShow","_hToggleOpen","setState","prevState","_hClickWatch","props","repo","requestType","onWatchItem","caption","descr","config","version","_renderIssues","issues","map","item","index","number","created_at","updated_at","title","html_url","_creadedAt","_updatedAt","CL","ROW_ITEM","PB_8","render","onCloseItem","_number","length","ROOT","BT_ITEM","CAPTION_OPEN","BTN_CIRCLE","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport A from '../zhn-atoms/A';\r\nimport Caption from './ItemCaption'\r\n\r\nimport CL from '../styles/CL'\r\nimport STYLE from './Item.Style'\r\n\r\nconst ITEM_DESCRIPTION = \"GitHub Repository Issues\";\r\n\r\nconst S = {\r\n  STATE: {\r\n    ...STYLE.PR_8,\r\n    color: '#d7bb52'\r\n  },\r\n  NUMBER: {\r\n    ...STYLE.PR_8,\r\n    color: '#80c040'\r\n  },\r\n  DATE: {\r\n    ...STYLE.PR_8,\r\n    color: 'gray'\r\n  }\r\n};\r\n\r\nconst _toDate = strDate => (''+strDate)\r\n  .replace('T', ' ')\r\n  .replace('Z', '');\r\n\r\nclass GitHubIssues extends Component {\r\n  state = {\r\n    isShow: true\r\n  }\r\n\r\n  _hToggleOpen = () => {\r\n    this.setState( prevState => ({\r\n      isShow: !prevState.isShow\r\n    }))\r\n  }\r\n\r\n  _hClickWatch = () => {\r\n    const { repo, requestType, onWatchItem } = this.props\r\n        , caption = `${repo}`\r\n        , descr = ITEM_DESCRIPTION;\r\n    onWatchItem({\r\n       caption: caption,\r\n       config: {\r\n         repo,\r\n         requestType,\r\n         version : '',\r\n         caption,\r\n         descr\r\n       }\r\n    });\r\n  }\r\n\r\n  _renderIssues = (issues) => {\r\n     return issues.map((item, index) => {\r\n        const { state, number, created_at, updated_at, title, html_url } = item\r\n        , _creadedAt = _toDate(created_at)\r\n        , _updatedAt = created_at !== updated_at\r\n             ? _toDate(updated_at)\r\n             : '';\r\n        return (\r\n           <div key={index} className={CL.ROW_ITEM}>\r\n             <a href={html_url}>\r\n                <div style={STYLE.PB_8}>\r\n                  <span style={S.STATE}>\r\n                    {state}\r\n                  </span>\r\n                  <span style={S.NUMBER}>\r\n                    {`(#${number})`}\r\n                  </span>\r\n                  <span style={S.DATE}>\r\n                    {_creadedAt}\r\n                  </span>\r\n                  <span style={S.DATE}>\r\n                    {_updatedAt}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  {title}\r\n                </div>\r\n             </a>\r\n           </div>\r\n        );\r\n     })\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            repo, caption, issues=[],\r\n            onCloseItem\r\n           } = this.props\r\n        ,  _number = issues.length\r\n        , { isShow } = this.state;\r\n\r\n     return (\r\n       <div style={STYLE.ROOT}>\r\n         <Caption onClose={onCloseItem}>\r\n           <button\r\n              className={CL.BT_ITEM}\r\n              title={caption}\r\n              style={STYLE.CAPTION_OPEN}\r\n              onClick={this._hToggleOpen}\r\n           >\r\n             <span style={STYLE.PR_8}>\r\n               {repo}\r\n             </span>\r\n             <span>\r\n               {_number}\r\n             </span>\r\n           </button>\r\n           <A.ButtonCircle\r\n              caption=\"W\"\r\n              title=\"Add to Watch\"\r\n              style={STYLE.BTN_CIRCLE}\r\n              onClick={this._hClickWatch}\r\n           />\r\n         </Caption>\r\n         <A.ShowHide isShow={isShow}>\r\n           {this._renderIssues(issues)}\r\n         </A.ShowHide>\r\n       </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default GitHubIssues\r\n"],"file":"GitHubIssues.js"}