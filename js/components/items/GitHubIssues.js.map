{"version":3,"sources":["../../../src/components/items/GitHubIssues.jsx"],"names":["ITEM_DESCRIPTION","styles","rootDiv","lineHeight","marginBottom","marginRight","position","headerDiv","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingLeft","width","height","captionSpanOpen","display","color","cursor","maxWidth","fontWeight","whiteSpace","textOverflow","overflow","float","SPAN_VERSION","paddingRight","BTN_CIRCLE","marginLeft","GitHubIssues","createClass","getInitialState","isShow","_handlerToggleOpen","setState","state","_handlerClickWatch","props","repo","requestType","onWatchItem","caption","descr","config","version","_renderIssues","issues","map","item","index","number","created_at","updated_at","title","html_url","className","paddingBottom","replace","render","onCloseItem","_number","length","_styleCaption"],"mappings":"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","file":"GitHubIssues.js","sourcesContent":["import React from 'react';\r\n\r\nimport ButtonCircle from '../zhnAtoms/ButtonCircle';\r\nimport SvgClose from '../zhnAtoms/SvgClose';\r\nimport ShowHide from '../zhnAtoms/ShowHide';\r\n\r\nconst ITEM_DESCRIPTION = \"GitHub Repository Issues\"\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    lineHeight : 1.5,\r\n    marginBottom: '10px',\r\n    marginRight: '25px',\r\n    //marginRight: '10px',\r\n    position : 'relative'\r\n  },\r\n  headerDiv: {\r\n    backgroundColor: '#232F3B',\r\n    borderTopLeftRadius: '10px',\r\n    borderTopRightRadius: '10px',\r\n    paddingTop: '4px',\r\n    paddingLeft: '10px',\r\n    lineHeight: 1.5,\r\n    //height: '25px',\r\n    //width: '600px'\r\n    width : '100%',\r\n    height: '30px'\r\n  },\r\n  captionSpanOpen : {\r\n    display : 'inline-block',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    cursor: 'pointer',\r\n    maxWidth: '500px',\r\n    fontWeight : 'bold',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow : 'ellipsis',\r\n    overflow : 'hidden',\r\n    float : 'left'\r\n  },\r\n\r\n  SPAN_VERSION : {\r\n    color: '#80c040',\r\n    paddingLeft : '10px',\r\n    paddingRight : '10px'\r\n  },\r\n  BTN_CIRCLE : {\r\n    marginLeft: '10px'\r\n  }\r\n}\r\n\r\n\r\nconst GitHubIssues = React.createClass({\r\n  getInitialState(){\r\n    return {\r\n      isShow : true\r\n    }\r\n  },\r\n\r\n  _handlerToggleOpen(){\r\n    this.setState({ isShow: !this.state.isShow })\r\n  },\r\n\r\n  _handlerClickWatch(){\r\n    const { repo, requestType, onWatchItem } = this.props\r\n        , caption = `${repo}`\r\n        , descr = ITEM_DESCRIPTION\r\n    onWatchItem({\r\n       caption : caption,\r\n       config : { repo, requestType, version : '', caption, descr }\r\n    });\r\n  },\r\n\r\n  _renderIssues(issues){\r\n     return issues.map((item, index) => {\r\n        const { state, number, created_at, updated_at, title, html_url } = item\r\n            , className = (index % 2)\r\n                     ? 'row-even not-selected'\r\n                     : 'row-odd not-selected'\r\n        return (\r\n           <div key={index} className={className}>\r\n             <a href={html_url}>\r\n                <div style={{ paddingBottom: '8px' }}>\r\n                  <span style={{ paddingRight: '8px' }}>\r\n                    {state}\r\n                  </span>\r\n                  <span style={{ paddingRight: '8px' }}>\r\n                    {`(#${number})`}\r\n                  </span>\r\n                  <span style={{ paddingRight: '8px' }}>\r\n                    {created_at.replace('T', ' ').replace('Z', '')}\r\n                  </span>\r\n                  <span>\r\n                    {updated_at.replace('T', ' ').replace('Z', '')}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  {title}\r\n                </div>\r\n             </a>\r\n           </div>\r\n        );\r\n     })\r\n  },\r\n\r\n  render(){\r\n    const {\r\n            repo, caption, issues=[],\r\n            onCloseItem\r\n           } = this.props\r\n        ,  _number = issues.length\r\n        , _styleCaption = styles.captionSpanOpen\r\n        , { isShow } = this.state;\r\n\r\n     return (\r\n       <div style={styles.rootDiv}>\r\n         <div style={styles.headerDiv}>\r\n           <span\r\n              className=\"not-selected\"\r\n              title={caption}\r\n              style={_styleCaption}\r\n              onClick={this._handlerToggleOpen}\r\n           >\r\n             <span style={{ paddingRight: '8px' }}>\r\n               {repo}\r\n             </span>\r\n             <span>\r\n               {_number}\r\n             </span>\r\n           </span>\r\n           <ButtonCircle\r\n              caption={'W'}\r\n              title=\"Add to Watch\"\r\n              style={styles.BTN_CIRCLE}\r\n              onClick={this._handlerClickWatch}\r\n           />\r\n           <SvgClose onClose={onCloseItem} />\r\n         </div>\r\n         <ShowHide isShow={isShow}>\r\n           {this._renderIssues(issues)}\r\n         </ShowHide>\r\n       </div>\r\n     );\r\n  }\r\n});\r\n\r\nexport default GitHubIssues\r\n"]}