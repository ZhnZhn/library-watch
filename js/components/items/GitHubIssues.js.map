{"version":3,"sources":["../../../src/components/items/GitHubIssues.jsx"],"names":["ITEM_DESCRIPTION","_toDate","strDate","replace","GitHubIssues","state","isShow","_hToggleOpen","setState","prevState","_hClickWatch","props","repo","requestType","onWatchItem","caption","descr","config","version","_renderIssues","issues","map","item","index","number","created_at","updated_at","title","html_url","className","STYLE","PB_8","PR_8","onCloseItem","_number","length","ROOT","CAPTION_OPEN","BTN_CIRCLE","Component"],"mappings":"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","file":"GitHubIssues.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport A from '../zhn-atoms/A';\r\nimport Caption from './ItemCaption'\r\nimport STYLE from './Item.Style'\r\n\r\nconst ITEM_DESCRIPTION = \"GitHub Repository Issues\"\r\n\r\nconst _toDate = strDate => (''+strDate)\r\n  .replace('T', ' ')\r\n  .replace('Z', '');\r\n\r\nclass GitHubIssues extends Component {\r\n  state = {\r\n    isShow: true\r\n  }\r\n\r\n  _hToggleOpen = () => {\r\n    this.setState( prevState => ({\r\n      isShow: !prevState.isShow\r\n    }))\r\n  }\r\n\r\n  _hClickWatch = () => {\r\n    const { repo, requestType, onWatchItem } = this.props\r\n        , caption = `${repo}`\r\n        , descr = ITEM_DESCRIPTION\r\n    onWatchItem({\r\n       caption: caption,\r\n       config: { repo, requestType, version : '', caption, descr }\r\n    });\r\n  }\r\n\r\n  _renderIssues = (issues) => {\r\n     return issues.map((item, index) => {\r\n        const { state, number, created_at, updated_at, title, html_url } = item\r\n            , className = (index % 2)\r\n                     ? 'row-even not-selected'\r\n                     : 'row-odd not-selected';\r\n        return (\r\n           <div key={index} className={className}>\r\n             <a href={html_url}>\r\n                <div style={STYLE.PB_8}>\r\n                  <span style={STYLE.PR_8}>\r\n                    {state}\r\n                  </span>\r\n                  <span style={STYLE.PR_8}>\r\n                    {`(#${number})`}\r\n                  </span>\r\n                  <span style={STYLE.PR_8}>\r\n                    {_toDate(created_at)}\r\n                  </span>\r\n                  <span>\r\n                    {_toDate(updated_at)}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  {title}\r\n                </div>\r\n             </a>\r\n           </div>\r\n        );\r\n     })\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            repo, caption, issues=[],\r\n            onCloseItem\r\n           } = this.props\r\n        ,  _number = issues.length\r\n        , { isShow } = this.state;\r\n\r\n     return (\r\n       <div style={STYLE.ROOT}>\r\n         <Caption onClose={onCloseItem}>\r\n           <button\r\n              className=\"not-selected\"\r\n              title={caption}\r\n              style={STYLE.CAPTION_OPEN}\r\n              onClick={this._hToggleOpen}\r\n           >\r\n             <span style={STYLE.PR_8}>\r\n               {repo}\r\n             </span>\r\n             <span>\r\n               {_number}\r\n             </span>\r\n           </button>\r\n           <A.ButtonCircle\r\n              caption=\"W\"\r\n              title=\"Add to Watch\"\r\n              style={STYLE.BTN_CIRCLE}\r\n              onClick={this._hClickWatch}\r\n           />\r\n         </Caption>\r\n         <A.ShowHide isShow={isShow}>\r\n           {this._renderIssues(issues)}\r\n         </A.ShowHide>\r\n       </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default GitHubIssues\r\n"]}