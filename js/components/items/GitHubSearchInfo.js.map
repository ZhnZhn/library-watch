{"version":3,"sources":["../../../src/components/items/GitHubSearchInfo.jsx"],"names":["styles","rootDiv","lineHeight","marginBottom","marginRight","position","headerDiv","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingLeft","width","height","captionSpanOpen","display","color","cursor","maxWidth","fontWeight","whiteSpace","textOverflow","overflow","float","SPAN_VERSION","paddingRight","ItemDescription","props","library","name","description","size","created_at","pushed_at","stargazers_count","open_issues","watchers_count","html_url","_dateCreatedAt","replace","_datePushedAt","GitHubSearchInfo","createClass","getInitialState","isShow","_handlerToggleOpen","setState","state","render","repo","stars_count","caption","onCloseItem","_styleCaption"],"mappings":"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","file":"GitHubSearchInfo.js","sourcesContent":["import React from 'react';\r\n\r\nimport SvgClose from '../zhnAtoms/SvgClose';\r\nimport ShowHide from '../zhnAtoms/ShowHide';\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    lineHeight : 1.5,\r\n    marginBottom: '10px',\r\n    marginRight: '25px',\r\n    //marginRight: '10px',\r\n    position : 'relative'\r\n  },\r\n  headerDiv: {\r\n    backgroundColor: '#232F3B',\r\n    borderTopLeftRadius: '10px',\r\n    borderTopRightRadius: '10px',\r\n    paddingTop: '4px',\r\n    paddingLeft: '10px',\r\n    lineHeight: 1.5,\r\n    //height: '25px',\r\n    //width: '600px'\r\n    width : '100%',\r\n    height: '30px'\r\n  },\r\n  captionSpanOpen : {\r\n    display : 'inline-block',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    cursor: 'pointer',\r\n    maxWidth: '500px',\r\n    fontWeight : 'bold',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow : 'ellipsis',\r\n    overflow : 'hidden',\r\n    float : 'left'\r\n  },\r\n  SPAN_VERSION : {\r\n    color: '#80c040',\r\n    paddingLeft : '10px',\r\n    paddingRight : '10px'\r\n  }\r\n}\r\n\r\nconst ItemDescription = (props) => {\r\n  const { library={} } = props\r\n      , {\r\n          name, description, size, created_at, pushed_at, stargazers_count,\r\n          open_issues, watchers_count, html_url\r\n        } = library\r\n      , _dateCreatedAt = created_at.replace('T', ' ').replace('Z', '')\r\n      , _datePushedAt = pushed_at.replace('T', ' ').replace('Z', '')\r\n  return (\r\n    <div className=\"library\">\r\n          <div>\r\n             <span className=\"library__title\">\r\n               {name}\r\n             </span>\r\n          </div>\r\n          <div>\r\n            <span>\r\n              {description}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"library__value-title\">\r\n              Size:\r\n            </span>\r\n            <span className=\"library__value\">\r\n              {size}\r\n            </span>\r\n          </div>\r\n          <div>\r\n             <span className=\"library__value-title\">\r\n               Created At:\r\n             </span>\r\n             <span className=\"library__value\">\r\n               {_dateCreatedAt}\r\n             </span>\r\n             <span className=\"library__value-title\">\r\n              Pushed At:\r\n             </span>\r\n             <span className=\"library__value\">\r\n               {_datePushedAt}\r\n             </span>\r\n          </div>\r\n          <div>\r\n            <span className=\"library__value-title\">\r\n              Stars:\r\n            </span>\r\n            <span className=\"library__value\">\r\n              {stargazers_count}\r\n            </span>\r\n            <span className=\"library__value-title\">\r\n              Issues:\r\n            </span>\r\n            <span className=\"library__value\">\r\n              {open_issues}\r\n            </span>\r\n            <span className=\"library__value-title\">\r\n              Watchers:\r\n            </span>\r\n            <span className=\"library__value\">\r\n              {watchers_count}\r\n            </span>\r\n          </div>\r\n          <div>\r\n             <a\r\n                className=\"library__link\"\r\n                href={html_url}\r\n              >\r\n                Link to GitHub Repository\r\n             </a>\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\n\r\nconst GitHubSearchInfo = React.createClass({\r\n   getInitialState(){\r\n     return {\r\n       isShow : true\r\n     }\r\n   },\r\n\r\n\r\n  _handlerToggleOpen(){\r\n    this.setState({ isShow : !this.state.isShow });\r\n  },\r\n\r\n  render(){\r\n    const { repo, stars_count, pushed_at, caption, library, onCloseItem } = this.props\r\n        , _styleCaption = styles.captionSpanOpen\r\n        , { isShow } = this.state;\r\n    return (\r\n      <div style={styles.rootDiv}>\r\n        <div style={styles.headerDiv}>\r\n          <span\r\n             className=\"not-selected\"\r\n             title={caption}\r\n             style={_styleCaption}\r\n             onClick={this._handlerToggleOpen}\r\n          >\r\n            <span>\r\n              {repo}\r\n            </span>\r\n            <span style={styles.SPAN_VERSION}>\r\n              {stars_count}\r\n            </span>\r\n            <span>\r\n              {pushed_at}\r\n            </span>\r\n          </span>\r\n          <SvgClose onClose={onCloseItem} />\r\n        </div>\r\n        <ShowHide isShow={isShow}>\r\n          <ItemDescription\r\n            library={library}\r\n          />\r\n        </ShowHide>\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nexport default GitHubSearchInfo\r\n"]}