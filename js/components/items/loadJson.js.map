{"version":3,"sources":["../../../src/components/items/loadJson.js"],"names":["C","ERR_RES","ERR_FORMAT","_crResponseError","name","_crFormatError","loadJson","uri","onLoad","fetch","then","res","status","json","Error","code","message","err","console","log","errMsg"],"mappings":";;;;AACA,IAAMA,CAAC,GAAG;AACRC,EAAAA,OAAO,EAAE,mBADD;AAERC,EAAAA,UAAU,EAAE;AAFJ,CAAV;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI;AAAA,SAAOA,IAAP,SAAeJ,CAAC,CAACC,OAAjB;AAAA,CAA7B;AAAA,IACEI,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,IAAI;AAAA,SAAOA,IAAP,SAAeJ,CAAC,CAACE,UAAjB;AAAA,CADvB;;AAGA,IAAMI,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGF,IAAH,QAAGA,IAAH;AAAA,MAASG,GAAT,QAASA,GAAT;AAAA,MAAcC,MAAd,QAAcA,MAAd;AAAA,SAA2BC,KAAK,CAACF,GAAD,CAAL,CACzCG,IADyC,CACpC,UAAAC,GAAG,EAAI;AAAA,QACFC,MADE,GACSD,GADT,CACFC,MADE;;AAEV,QAAIA,MAAM,GAAC,GAAP,IAAcA,MAAM,GAAC,GAAzB,EAA8B;AAC5B,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,YAAM,IAAIC,KAAJ,CAAUX,gBAAgB,CAACC,IAAD,CAA1B,CAAN;AACD;AACH,GARyC,EASzCM,IATyC,CASpC,UAAAG,IAAI,EAAI;AACZ,QAAIA,IAAI,IAAI,CAACA,IAAI,CAACE,IAAlB,EAAwB;AACtBP,MAAAA,MAAM,CAACK,IAAD,CAAN;AACD,KAFD,MAEO;AACL,YAAM,IAAIC,KAAJ,CAAUD,IAAI,CAACG,OAAL,IAAgBX,cAAc,CAACD,IAAD,CAAxC,CAAN;AACD;AACF,GAfyC,WAgBnC,UAAAa,GAAG,EAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAT,IAAAA,MAAM,CAAC;AAAEY,MAAAA,MAAM,EAAEH,GAAG,CAACD;AAAd,KAAD,CAAN;AACD,GAnByC,CAA3B;AAAA,CAAjB;;eAqBeV,Q","sourcesContent":["\r\nconst C = {\r\n  ERR_RES: \"response isn't OK\",\r\n  ERR_FORMAT: \"response isn't valid\"\r\n};\r\n\r\nconst _crResponseError = name => `${name} ${C.ERR_RES}`\r\n, _crFormatError = name => `${name} ${C.ERR_FORMAT}`;\r\n\r\nconst loadJson = ({ name, uri, onLoad }) => fetch(uri)\r\n  .then(res => {\r\n     const { status } = res;\r\n     if (status>199 && status<300) {\r\n       return res.json();\r\n     } else {\r\n       throw new Error(_crResponseError(name));\r\n     }\r\n  })\r\n  .then(json => {\r\n    if (json && !json.code) {\r\n      onLoad(json)\r\n    } else {\r\n      throw new Error(json.message || _crFormatError(name))\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.log(err)\r\n    onLoad({ errMsg: err.message })\r\n  });\r\n\r\nexport default loadJson\r\n"],"file":"loadJson.js"}