{"version":3,"sources":["../../../src/components/items/GitHubCommits.jsx"],"names":["ITEM_DESCRIPTION","styles","rootDiv","lineHeight","marginBottom","marginRight","position","headerDiv","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingLeft","width","height","captionSpanOpen","display","color","cursor","maxWidth","fontWeight","whiteSpace","textOverflow","overflow","float","SPAN_VERSION","paddingRight","BTN_CIRCLE","marginLeft","GitHubCommits","createClass","getInitialState","isShow","_handlerToggleOpen","setState","state","_handlerClickWatch","props","repo","requestType","onWatchItem","caption","descr","config","version","_renderCommits","commits","_timeago","Date","now","map","item","index","commit","html_url","message","committer","date","name","_dateTime","replace","_dateAgo","format","className","paddingBottom","render","onCloseItem","_styleCaption"],"mappings":"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","file":"GitHubCommits.js","sourcesContent":["import React from 'react';\r\nimport timeago from 'timeago.js';\r\n\r\nimport ButtonCircle from '../zhnAtoms/ButtonCircle';\r\nimport SvgClose from '../zhnAtoms/SvgClose';\r\nimport ShowHide from '../zhnAtoms/ShowHide';\r\nimport DateAgo from '../zhnAtoms/DateAgo';\r\n\r\nconst ITEM_DESCRIPTION = \"GitHub Repository Commits\"\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    lineHeight : 1.5,\r\n    marginBottom: '10px',\r\n    marginRight: '25px',\r\n    //marginRight: '10px',\r\n    position : 'relative'\r\n  },\r\n  headerDiv: {\r\n    backgroundColor: '#232F3B',\r\n    borderTopLeftRadius: '10px',\r\n    borderTopRightRadius: '10px',\r\n    paddingTop: '4px',\r\n    paddingLeft: '10px',\r\n    lineHeight: 1.5,\r\n    //height: '25px',\r\n    //width: '600px'\r\n    width : '100%',\r\n    height: '30px'\r\n  },\r\n  captionSpanOpen : {\r\n    display : 'inline-block',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    cursor: 'pointer',\r\n    maxWidth: '500px',\r\n    fontWeight : 'bold',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow : 'ellipsis',\r\n    overflow : 'hidden',\r\n    float : 'left'\r\n  },\r\n\r\n  SPAN_VERSION : {\r\n    color: '#80c040',\r\n    paddingLeft : '10px',\r\n    paddingRight : '10px'\r\n  },\r\n  BTN_CIRCLE : {\r\n    marginLeft: '10px'\r\n  }\r\n}\r\n\r\n\r\nconst GitHubCommits = React.createClass({\r\n  getInitialState(){\r\n    return {\r\n      isShow : true\r\n    }\r\n  },\r\n\r\n  _handlerToggleOpen(){\r\n    this.setState({ isShow: !this.state.isShow })\r\n  },\r\n\r\n  _handlerClickWatch(){\r\n    const { repo, requestType, onWatchItem } = this.props\r\n        , caption = `${repo}`\r\n        , descr = ITEM_DESCRIPTION\r\n    onWatchItem({\r\n       caption : caption,\r\n       config : { repo, requestType, version : '', caption, descr }\r\n    });\r\n  },\r\n\r\n  _renderCommits(commits){\r\n     const _timeago = timeago(Date.now());\r\n     return commits.map((item, index) => {\r\n        const { commit={}, html_url } = item\r\n            , { message='', committer={} } = commit\r\n            , { date='', name='' } = committer\r\n            , _dateTime = date.replace('T', ' ').replace('Z', '')\r\n            , _dateAgo = _timeago.format(_dateTime)\r\n            , className = (index % 2)\r\n                     ? 'row-even not-selected'\r\n                     : 'row-odd not-selected'\r\n        return (\r\n           <div key={index} className={className}>\r\n              <a href={html_url}>\r\n              <div style={{ paddingBottom: '8px' }}>\r\n                <span style={{ paddingRight: '8px' }}>\r\n                  {name}\r\n                </span>\r\n                <DateAgo\r\n                   dateAgo={_dateAgo}\r\n                   date={_dateTime}\r\n                />\r\n              </div>              \r\n                <div>\r\n                  {message}\r\n                </div>\r\n              </a>\r\n           </div>\r\n        );\r\n     })\r\n  },\r\n\r\n  render(){\r\n    const {\r\n            repo, caption, commits,\r\n            onCloseItem\r\n           } = this.props\r\n        , _styleCaption = styles.captionSpanOpen\r\n        , { isShow } = this.state;\r\n\r\n     return (\r\n       <div style={styles.rootDiv}>\r\n         <div style={styles.headerDiv}>\r\n           <span\r\n              className=\"not-selected\"\r\n              title={caption}\r\n              style={_styleCaption}\r\n              onClick={this._handlerToggleOpen}\r\n           >\r\n             <span>\r\n               {repo}\r\n             </span>\r\n           </span>\r\n           <ButtonCircle\r\n              caption={'W'}\r\n              title=\"Add to Watch\"\r\n              style={styles.BTN_CIRCLE}\r\n              onClick={this._handlerClickWatch}\r\n           />\r\n           <SvgClose onClose={onCloseItem} />\r\n         </div>\r\n         <ShowHide isShow={isShow}>\r\n           {this._renderCommits(commits)}\r\n         </ShowHide>\r\n       </div>\r\n     );\r\n  }\r\n});\r\n\r\nexport default GitHubCommits\r\n"]}