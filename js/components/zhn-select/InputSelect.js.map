{"version":3,"file":"InputSelect.js","names":["_uiApi","require","_useToggle","_interopRequireDefault","_ItemOptionDf","_DivOptions","_OptionStack","_CL","_crStyleWidth","_crAfterInputEl","_crFilteredOptions","_useStepHandlers","_helperFns","_jsxRuntime","DF_OPTIONS","_crInitialStateFromProps","_ref","optionName","optionNames","options","value","initialOptions","FN_NOOP","InputSelect","props","style","width","optionsStyle","propCaption","ItemOptionComp","ItemOptionDf","isWithInput","onSelect","_refArrowCell","useRef","_refDomInputText","state","setState","useState","isShowOption","toggleIsShowOption","setIsShowOption","useToggle","_refOptionsElement","_refIndexElement","setActiveIndexOption","getActiveIndexOption","_getActiveElement","_decorateActiveElement","_undecorateActiveElement","_stepDownOption","_stepUpOption","useStepHandlers","_initStateFromProps","useCallback","_hInputChange","evt","token","target","tokenLn","length","valueLn","prevState","crFilteredOptions","_hInputKeyDown","keyCode","_indexActiveOption","isNumber","item","crOnEnterItem","preventDefault","_hClickItem","getDataIndex","currentTarget","domOptions","useMemo","jsx","default","indexActiveOption","onClick","useEffect","comp","makeVisibleActiveRowComp","_style","crStyleWidth","placeholder","afterInputEl","crAfterInputEl","nFiltered","nAll","crFooterIndex","jsxs","className","CL_ROOT","children","ref","CL_INPUT","type","name","autoCorrect","autoCapitalize","spellCheck","onChange","onKeyDown","CL_INPUT_HR","refOptionsElement","refIndexElement","onStepUp","onStepDown","onClear","_default","exports"],"sources":["../../../src/components/zhn-select/InputSelect.jsx"],"sourcesContent":["//import PropTypes from 'prop-types'\r\nimport {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useMemo,\r\n  useEffect\r\n} from '../uiApi';\r\n\r\nimport useToggle from '../hooks/useToggle';\r\n\r\nimport ItemOptionDf from './ItemOptionDf'\r\nimport DivOptions from './DivOptions';\r\nimport OptionStack from './OptionStack';\r\nimport {\r\n  CL_ROOT,\r\n  CL_INPUT,\r\n  CL_INPUT_HR\r\n} from './CL';\r\n\r\nimport crStyleWidth from './crStyleWidth';\r\nimport crAfterInputEl from './crAfterInputEl';\r\nimport crFilteredOptions from './crFilteredOptions';\r\n\r\nimport useStepHandlers from './useStepHandlers';\r\n\r\nimport {\r\n  isNumber,\r\n  getDataIndex,\r\n  crOnEnterItem,\r\n  crFooterIndex,\r\n  makeVisibleActiveRowComp\r\n} from './helperFns';\r\n\r\nconst DF_OPTIONS = [];\r\nconst _crInitialStateFromProps = ({\r\n  optionName,\r\n  optionNames,\r\n  options=DF_OPTIONS\r\n}) => ({\r\n  value: '',\r\n  initialOptions: options,\r\n  options: options,\r\n  optionNames: optionNames || optionName || ''\r\n});\r\n\r\nconst FN_NOOP = () => {};\r\n\r\nconst InputSelect = (\r\n  props\r\n) => {\r\n  const {\r\n    style,\r\n    width,\r\n    optionsStyle,\r\n\r\n    propCaption='caption',\r\n    ItemOptionComp=ItemOptionDf,\r\n\r\n    isWithInput=false,\r\n    onSelect=FN_NOOP\r\n  } = props\r\n  , _refArrowCell = useRef()\r\n  , _refDomInputText = useRef()\r\n  , [\r\n    state,\r\n    setState\r\n  ] = useState(() => _crInitialStateFromProps(props))\r\n  , {\r\n    value,\r\n    options,\r\n    initialOptions\r\n  } = state\r\n  , [\r\n    isShowOption,\r\n    toggleIsShowOption,\r\n    setIsShowOption\r\n  ] = useToggle(false)\r\n  , [\r\n    _refOptionsElement,\r\n    _refIndexElement,\r\n    setActiveIndexOption,\r\n    getActiveIndexOption,\r\n    _getActiveElement,\r\n    _decorateActiveElement,\r\n    _undecorateActiveElement,\r\n    _stepDownOption,\r\n    _stepUpOption\r\n  ] = useStepHandlers()\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  , _initStateFromProps = useCallback(() => {\r\n     _undecorateActiveElement()\r\n     setState(() => _crInitialStateFromProps(props))\r\n     setIsShowOption(false)\r\n     setActiveIndexOption(0)\r\n     onSelect()\r\n  }, [props.options, onSelect])\r\n  // _undecorateActiveElement\r\n  // setIsShowOption, setActiveIndexOption\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n\r\n  , _hInputChange = (evt) => {\r\n    const token = evt.target.value\r\n    , tokenLn = token.length\r\n    , valueLn = value.length;\r\n    if (tokenLn !== valueLn){\r\n      if (getActiveIndexOption() !== 0) {\r\n        _undecorateActiveElement()\r\n        setActiveIndexOption(0)\r\n      }\r\n\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        value: token,\r\n        options: crFilteredOptions(\r\n          token,\r\n          tokenLn > valueLn\r\n            ? options\r\n            : initialOptions,\r\n          propCaption,\r\n          isWithInput\r\n        )\r\n      }))\r\n      setIsShowOption(true)\r\n    }\r\n  }\r\n  , _hInputKeyDown = (evt) => {\r\n    switch(evt.keyCode){\r\n      // enter\r\n      case 13:{\r\n         const _indexActiveOption = getActiveIndexOption();\r\n         if (isNumber(_indexActiveOption)) {\r\n            const item = options[_indexActiveOption];\r\n            if (item && item[propCaption]){\r\n              onSelect(crOnEnterItem(\r\n                item,\r\n                propCaption,\r\n                isWithInput\r\n              ))\r\n              setIsShowOption(false)\r\n              setState(prevState => ({\r\n                ...prevState,\r\n                value: item[propCaption]\r\n              }));\r\n            }\r\n         } else {\r\n           onSelect()\r\n         }\r\n         break;\r\n      }\r\n      //escape, delete\r\n      case 27: case 46: {\r\n        evt.preventDefault()\r\n        if (isShowOption){\r\n          setIsShowOption(false)\r\n        } else {\r\n          _initStateFromProps()\r\n        }\r\n        break;\r\n      }\r\n      //down\r\n      case 40: {\r\n        if (!isShowOption){\r\n          setIsShowOption(true)\r\n        } else {\r\n          evt.preventDefault()\r\n          _stepDownOption()\r\n        }\r\n        break;\r\n      }\r\n      //up\r\n      case 38: {\r\n        if (isShowOption){\r\n          evt.preventDefault()\r\n          _stepUpOption()\r\n        }\r\n        break;\r\n      }\r\n      default: return;\r\n    }\r\n  }\r\n\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  , _hClickItem = useCallback((item, evt) => {\r\n      _undecorateActiveElement()\r\n      setActiveIndexOption(getDataIndex(evt.currentTarget))\r\n\r\n      setIsShowOption(false)\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        value: item[propCaption],\r\n      }))\r\n      onSelect(item);\r\n  }, [])\r\n  // _undecorateActiveElement, setActiveIndexOption\r\n  // setIsShowOption\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  , domOptions = useMemo(() => (<OptionStack\r\n       options={options}\r\n       indexActiveOption={getActiveIndexOption()}\r\n       propCaption={propCaption}\r\n       ItemOptionComp={ItemOptionComp}\r\n       onClick={_hClickItem}\r\n     />\r\n   ), [options]);\r\n  // getActiveIndexOption, _hClickItem\r\n  // propCaption, ItemOptionComp\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n\r\n  /*eslint-disable react-hooks/exhaustive-deps */\r\n  useEffect(() => {\r\n    if (isShowOption) {\r\n      const comp = _getActiveElement();\r\n      _decorateActiveElement(comp);\r\n      makeVisibleActiveRowComp(comp);\r\n    }\r\n  }, [isShowOption])\r\n  // _decorateActiveElement, _getActiveElement\r\n  /*eslint-enable react-hooks/exhaustive-deps */\r\n\r\n  if (props.options !== initialOptions) {\r\n    _initStateFromProps()\r\n  }\r\n\r\n  const indexActiveOption = getActiveIndexOption()\r\n  , _style = crStyleWidth(width, style)\r\n  , [\r\n     placeholder,\r\n     afterInputEl\r\n  ] = crAfterInputEl(\r\n     props,\r\n     state,\r\n     _refArrowCell,\r\n     toggleIsShowOption\r\n   )\r\n  , [\r\n     nFiltered,\r\n     nAll\r\n  ] = crFooterIndex(\r\n     options,\r\n     initialOptions\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={CL_ROOT}\r\n      style={_style}\r\n    >\r\n      <input\r\n         ref={_refDomInputText}\r\n         className={CL_INPUT}\r\n         type=\"text\"\r\n         name=\"select\"\r\n         //autoComplete=\"off\"\r\n         autoCorrect=\"off\"\r\n         autoCapitalize=\"off\"\r\n         spellCheck={false}\r\n         value={value}\r\n         placeholder={placeholder}\r\n         onChange={_hInputChange}\r\n         onKeyDown={_hInputKeyDown}\r\n      />\r\n      {afterInputEl}\r\n      <hr className={CL_INPUT_HR} />\r\n      <DivOptions\r\n         refOptionsElement={_refOptionsElement}\r\n         refIndexElement={_refIndexElement}\r\n         optionsStyle={optionsStyle}\r\n         width={width}\r\n         isShowOption={isShowOption}\r\n         indexActiveOption={indexActiveOption}\r\n         nFiltered={nFiltered}\r\n         nAll={nAll}\r\n         onStepUp={_stepUpOption}\r\n         onStepDown={_stepDownOption}\r\n         onClear={_initStateFromProps}\r\n      >\r\n        {domOptions}\r\n      </DivOptions>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\nInputSelect.propTypes = {\r\n   style: PropTypes.object,\r\n   optionsStyle: PropTypes.object,\r\n   propCaption: PropTypes.string,\r\n   ItemOptionComp: PropTypes.element,\r\n   width: PropTypes.string,\r\n   options: PropTypes.arrayOf(PropTypes.shape({\r\n      caption: PropTypes.string,\r\n      value: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n      ])\r\n   })),\r\n   optionName: PropTypes.string,\r\n   optionNames: PropTypes.string,\r\n   placeholder: PropTypes.string,\r\n   isWithInput: PropTypes.bool,\r\n   prefixInput: PropTypes.string\r\n\r\n   onSelect: PropTypes.func,\r\n}\r\n*/\r\n\r\nexport default InputSelect\r\n"],"mappings":"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","ignoreList":[]}