{"version":3,"file":"fCrateDownload.js","names":["_uiApi","require","_CrateDownloads","_interopRequireDefault","_helperFn","_jsxRuntime","COLORS","TOTAL_COLOR","_getDate","item","date","_getDownloads","downloads","_getVersion","version","_getDateValue","_crLabel","_dateTokens","split","getArrLength","_crHm","extraDownloads","_hm","_otherData","value","isNumber","isStr","push","sort","t1","t2","map","t","_sumValuesTo","hm","_hmVersions","_data","seriaName","getObjectKeys","propName","arrA","arrB","_crArrDateValue","Object","keys","key","_crLabelsDataSum","arrDateValue","labels","data","sumDownloads","tuple","_updateSeries","series","color","_updateDataVersions","totalData","otherData","_dataVersions","_dataLength","i","_series","_diffNumber","j","unshift","NaN","_crHmVersions","json1","versions","id","num","fCrateDownload","options","option","json","onMoveToTop","onCloseItem","repo","version_downloads","meta","_extraDownloads","extra_downloads","_extraDownloadsLength","jsx","default","caption","packageName","fromDate","toDate","sourceLink","_default","exports"],"sources":["../../../src/components/factories/fCrateDownload.jsx"],"sourcesContent":["import {\r\n  isNumber,\r\n  isStr\r\n} from \"../uiApi\";\r\n\r\nimport CrateDownloads from \"../items/crate/CrateDownloads\";\r\n\r\nimport {\r\n  getObjectKeys,\r\n  getArrLength\r\n} from \"./helperFn\";\r\n\r\n//112,15,44 #700f2c\r\n//181,34,52 #b52234\r\n//215,103,85 #d76755\r\n//244,165,130 #f4a582\r\n//146,197,222 #92c5de\r\n//82,156,199 #529cc7\r\n\r\nconst COLORS = [\r\n  \"112,15,44\",\r\n  \"181,34,52\",\r\n  \"215,103,85\",\r\n  \"244,165,130\",\r\n  \"146,197,222\",\r\n  \"82,156,199\"\r\n];\r\nconst TOTAL_COLOR = \"128,192,64\"\r\n\r\nconst _getDate = item => (item || {}).date;\r\nconst _getDownloads = item => (item || {}).downloads;\r\nconst _getVersion = item => (item || {}).version;\r\n\r\nconst _getDateValue = item => [\r\n  _getDate(item),\r\n  _getDownloads(item),\r\n  _getVersion(item)\r\n]\r\n\r\nconst _crLabel = (date) => {\r\n  const _dateTokens = date.split(\"-\");\r\n  return getArrLength(_dateTokens) === 3\r\n    ? `${_dateTokens[1]}-${_dateTokens[2]}`\r\n    : date;\r\n};\r\n\r\nconst _crHm = (extraDownloads) => {\r\n  const _hm = {};\r\n  const _otherData = []\r\n  for (const item of extraDownloads) {\r\n    const [\r\n      date,\r\n      value\r\n    ] = _getDateValue(item);\r\n    if (isNumber(value) && isStr(date)) {\r\n      _hm[date] = value\r\n      _otherData.push([date, value])\r\n    }\r\n  }\r\n  _otherData.sort((t1, t2) => t1>t2 ? 1: t1<t2 ? -1 : 0)\r\n  return [\r\n    _hm,\r\n    _otherData.map(t => t[1])\r\n  ];\r\n}\r\n\r\nconst _sumValuesTo = (\r\n  hm,\r\n  downloads\r\n) => {\r\n  const _hmVersions = {};\r\n  for (const item of downloads) {\r\n    const [\r\n      date,\r\n      value,\r\n      version\r\n    ] = _getDateValue(item);\r\n    if (isNumber(value) && isStr(date)) {\r\n      if (isNumber(hm[date])) {\r\n        hm[date] += value\r\n      } else {\r\n        hm[date] = value\r\n      }\r\n\r\n      if (_hmVersions[version]) {\r\n        _hmVersions[version].push(value)\r\n      } else {\r\n        const _data = [value]\r\n        _data.seriaName = version\r\n        _hmVersions[version] = _data\r\n      }\r\n    }\r\n  }\r\n  return getObjectKeys(_hmVersions)\r\n    .map(propName => _hmVersions[propName])\r\n    .sort((arrA, arrB) => arrB.seriaName - arrA.seriaName);\r\n};\r\n\r\nconst _crArrDateValue = (\r\n  hm\r\n) => Object\r\n.keys(hm)\r\n.map(key => [key, hm[key]])\r\n.sort((t1, t2) => t1 > t2 ? 1 : -1);\r\n\r\nconst _crLabelsDataSum = (\r\n  arrDateValue\r\n) => {\r\n  const labels = []\r\n  , data = [];\r\n  let sumDownloads = 0;\r\n  for (const tuple of arrDateValue){\r\n    labels.push(_crLabel(tuple[0]))\r\n    data.push(tuple[1])\r\n    sumDownloads += tuple[1]\r\n  }\r\n  return [\r\n    labels,\r\n    data,\r\n    sumDownloads\r\n  ];\r\n};\r\n\r\nconst _updateSeries = (\r\n  series,\r\n  seriaName,\r\n  color\r\n) => {\r\n  series.seriaName = seriaName\r\n  series.color = color\r\n  return series;\r\n}\r\n\r\nconst _updateDataVersions = (\r\n  totalData,\r\n  otherData,\r\n  _dataVersions,\r\n  _hmVersions\r\n) => {\r\n  const _dataLength = getArrLength(totalData);\r\n  for (let i=0; i<getArrLength(_dataVersions); i++){\r\n    const _series = _dataVersions[i]\r\n    , _diffNumber = _dataLength - getArrLength(_series);\r\n\r\n    _updateSeries(_series, _hmVersions[_series.seriaName], COLORS[i])\r\n\r\n    for (let j=0; j<_diffNumber; j++){\r\n      _series.unshift(NaN)\r\n    }\r\n  }\r\n\r\n  _dataVersions.push(\r\n    _updateSeries(otherData, \"Other\", COLORS[5]),\r\n    _updateSeries(totalData, \"Total\", TOTAL_COLOR)\r\n  )\r\n};\r\n\r\nconst _crHmVersions = (json1) => {\r\n  const _hm = {}\r\n  , versions = json1.versions || [];\r\n  for (let item of versions) {\r\n    _hm[item.id] = item.num\r\n  }\r\n  return _hm;\r\n};\r\n\r\nconst fCrateDownload = (\r\n  options\r\n) => {\r\n  const {\r\n    option,\r\n    json,\r\n    onMoveToTop,\r\n    onCloseItem\r\n  } = options\r\n  , {\r\n    repo,\r\n    key\r\n  } = option\r\n  , {\r\n    version_downloads,\r\n    meta\r\n  } = json\r\n  , _extraDownloads = meta.extra_downloads\r\n  , _extraDownloadsLength = getArrLength(_extraDownloads)\r\n\r\n  , [\r\n    _hm,\r\n    otherData\r\n  ] = _crHm(_extraDownloads)\r\n  , _dataVersions = _sumValuesTo(_hm, version_downloads)\r\n  , arrDateValue = _crArrDateValue(_hm)\r\n  , [\r\n    labels,\r\n    data,\r\n    sumDownloads\r\n  ] = _crLabelsDataSum(arrDateValue);\r\n\r\n  _updateDataVersions(\r\n    data,\r\n    otherData,\r\n    _dataVersions,\r\n    _crHmVersions(option.json1)\r\n  )\r\n\r\n  return (<CrateDownloads\r\n    key={key}\r\n    caption={repo}\r\n    packageName={repo}\r\n    fromDate={_extraDownloadsLength !== 0\r\n      ? _getDate(_extraDownloads[0])\r\n      : \"\"}\r\n    toDate={_extraDownloadsLength > 0\r\n      ? _getDate(_extraDownloads[_extraDownloadsLength-1])\r\n      : \"\"}\r\n    sumDownloads={sumDownloads}\r\n    labels={labels}\r\n    data={_dataVersions}\r\n    sourceLink={option.sourceLink}\r\n    onMoveToTop={onMoveToTop}\r\n    onCloseItem={onCloseItem}\r\n  />);\r\n};\r\n\r\nexport default fCrateDownload\r\n"],"mappings":"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","ignoreList":[]}