{"version":3,"sources":["../../../src/components/factories/fStatCounter.js"],"names":["_filterEmptyDate","json","data","filter","item","Boolean","Date","_crArrFromObj","obj","_arr","propName","push","caption","value","parseFloat","_crTopN","arr","top","length","rest","_arrRecent","sort","a","b","_arrTop","_toIndex","i","_fnTransform","labels","_arrTop5","_maxSeria","arrSeries","map","seriaName","forEach","row","_crCaption","region","fStatCounter","factory","option","parentProps","onMoveToTop","onCloseItem","onWatchItem","requestType","chartType","browserType","key","sourceLink","_data","fromDate","toDate","_caption","createElement","StatCounterShare","bind"],"mappings":"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","sourcesContent":["\r\nimport StatCounterShare from '../items/StatCounterShare';\r\n\r\nconst _filterEmptyDate = json => json\r\n .data.filter(item => Boolean(item.Date));\r\n\r\nconst _crArrFromObj = obj => {\r\n  const _arr = [];\r\n  for(let propName in obj) {\r\n      _arr.push({\r\n        caption: propName,\r\n        value: parseFloat(obj[propName])\r\n      })\r\n  }\r\n  return _arr;\r\n}\r\n\r\nconst _crTopN = (arr, top=5) => {\r\n  /*eslint-disable no-unused-vars */\r\n  const { Date, ...rest } = arr[arr.length-1]\r\n  /*eslint-enable no-unused-vars */  \r\n  , _arrRecent = _crArrFromObj(rest);\r\n  _arrRecent.sort((a, b) => b.value - a.value)\r\n  const _arrTop = []\r\n  , _toIndex = _arrRecent.length;\r\n  for(let i=0; i<_toIndex; i++){\r\n    const caption = _arrRecent[i].caption;\r\n    if (caption) {\r\n      _arrTop.push(caption)\r\n    }\r\n  }\r\n  return _arrTop;\r\n}\r\n\r\nconst _fnTransform = (json) => {\r\n  const labels = []\r\n  , _arrTop5 = _crTopN(json)\r\n  , _maxSeria = _arrTop5.length\r\n  , arrSeries = _arrTop5.map(seriaName => {\r\n    const _arr = [];\r\n    _arr.seriaName = seriaName\r\n    return _arr;\r\n  });\r\n\r\n  json.forEach(row => {\r\n    labels.push(row.Date)\r\n    for(let i=0; i<_maxSeria; i++){\r\n      const _arr = arrSeries[i];\r\n      _arr.push(row[_arr.seriaName])\r\n    }\r\n  })\r\n\r\n  return {\r\n    labels,\r\n    data: arrSeries\r\n  };\r\n};\r\n\r\nconst _crCaption = ({\r\n  caption, region = {}\r\n} = {}\r\n) => `${region.caption || ''}: ${caption}`;\r\n\r\nconst fStatCounter = ({\r\n  factory, option, json,\r\n  parentProps,\r\n  onMoveToTop, onCloseItem,\r\n  onWatchItem\r\n}) => {\r\n  const {\r\n    requestType, chartType, browserType, key,\r\n    sourceLink\r\n  } = option\r\n  , _data = _filterEmptyDate(json)\r\n  , { labels , data } = _fnTransform(_data)\r\n  , fromDate = labels[0]\r\n  , toDate = labels[labels.length - 1]\r\n  , _caption = _crCaption(option);\r\n\r\n\r\n  return factory.createElement(StatCounterShare, {\r\n     key,\r\n     caption: _caption,\r\n     requestType,\r\n     fromDate,\r\n     toDate,\r\n     labels,\r\n     data,\r\n     sourceLink,\r\n     onMoveToTop,\r\n     onCloseItem: onCloseItem.bind(null, chartType, browserType, key),\r\n     ...parentProps\r\n  })\r\n};\r\n\r\nexport default fStatCounter\r\n"],"file":"fStatCounter.js"}