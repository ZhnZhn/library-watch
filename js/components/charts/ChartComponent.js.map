{"version":3,"sources":["../../../src/components/charts/ChartComponent.jsx"],"names":["IGNORED_PROPERTIES","_configMerge","Chart","helpers","configMerge","_isFn","fn","_assign","Object","assign","defaults","global","defaultFontColor","defaultFontSize","defaultFontStyle","tooltips","titleFontColor","titleFontSize","bodyFontColor","bodyFontSize","legend","display","position","DF_OPTIONS","callbacks","labelTextColor","tooltipItem","chartInst","data","datasets","datasetIndex","borderColor","_crObjWithoutProperties","obj","keys","target","propName","indexOf","prototype","hasOwnProperty","call","ChartComponent","updateChart","props","options","chart_instance","config","update","renderChart","type","_options","rootNode","handleOnClick","evt","elems","getElementsAtEvent","length","onElementsClick","_refRoot","n","componentDidMount","componentDidUpdate","redraw","destroy","shouldComponentUpdate","nextProps","nextState","compareNext","compareNow","strict","componentWillUnmount","render","height","width","_onClick","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport Chart from 'chart.js';\r\nimport deepEqual from './deepEqual';\r\n\r\nconst IGNORED_PROPERTIES = [\r\n\t'id', 'width', 'height', 'onElementsClick'\r\n];\r\n\r\nconst _configMerge = Chart.helpers.configMerge;\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\nconst _assign = Object.assign;\r\n\r\n\r\n_assign(Chart.defaults.global, {\r\n\tdefaultFontColor: 'black',\r\n  defaultFontSize: 14,\r\n  defaultFontStyle: 'bold'\r\n})\r\n\r\n_assign(Chart.defaults.global.tooltips, {\r\n\ttitleFontColor: '#a487d4',\r\n\ttitleFontSize: 16,\r\n\tbodyFontColor: '#80c040',\r\n\tbodyFontSize: 16\r\n});\r\n\r\n_assign(Chart.defaults.global.legend, {\r\n\tdisplay: true,\r\n\tposition: 'bottom'\r\n})\r\n\r\nconst DF_OPTIONS = {\r\n\ttooltips: {\r\n\t\tcallbacks: {\r\n\t\t\tlabelTextColor: function(tooltipItem, chartInst) {\r\n\t\t\t\t //console.log(chartInst.data.datasets[tooltipItem.datasetIndex].borderColor);\r\n\t\t\t\t return chartInst.data.datasets[tooltipItem.datasetIndex].borderColor;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst _crObjWithoutProperties = (obj, keys) => {\r\n\tconst target = {};\r\n\tfor (let propName in obj) {\r\n\t\tif (keys.indexOf(propName) >= 0) continue;\r\n\t\tif (!Object.prototype.hasOwnProperty.call(obj, propName)) continue;\r\n\t\ttarget[propName] = obj[propName];\r\n\t}\r\n\treturn target;\r\n};\r\n\r\nclass ChartComponent extends Component {\r\n\r\n\t//displayName: 'ChartComponent',\r\n\r\n  /*\r\n\tstatic propTypes = {\r\n\t\tdata: PropTypes.object.isRequired,\r\n\t\theight: PropTypes.number,\r\n\t\tlegend: PropTypes.object,\r\n\t\tonElementsClick: PropTypes.func,\r\n\t\toptions: PropTypes.object,\r\n\t\tredraw: PropTypes.bool,\r\n\t\ttype: PropTypes.oneOf(['doughnut', 'pie', 'line', 'bar', 'horizontalBar', 'radar', 'polarArea']),\r\n\t\twidth: PropTypes.number\r\n\t\tlegendOptions: PropTypes.object\r\n\t},\r\n\t*/\r\n\r\n\tstatic defaultProps = {\r\n\t\t\ttype: 'doughnut',\r\n\t\t\theight: 150,\r\n\t\t\twidth: 300,\r\n\t\t\tredraw: false,\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.chart_instance = void 0;\r\n\t\tthis.renderChart();\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tif (this.props.redraw) {\r\n\t\t\tthis.chart_instance.destroy();\r\n\t\t\tthis.renderChart();\r\n\t\t} else {\r\n\t\t\tthis.updateChart();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\tconst compareNext = _crObjWithoutProperties(nextProps, IGNORED_PROPERTIES)\r\n\t\t, compareNow = _crObjWithoutProperties(this.props, IGNORED_PROPERTIES);\r\n\t\treturn !deepEqual(compareNext, compareNow, { strict: true });\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.chart_instance.destroy();\r\n\t}\r\n\r\n\tupdateChart = () => {\r\n\t\tconst { data, options } = this.props;\r\n\r\n\t\tif (!this.chart_instance) return;\r\n\r\n\t\tif (options) {\r\n\t\t\tthis.chart_instance.options = _configMerge(this.chart_instance.options, options);\r\n\t\t}\r\n\r\n\t\tthis.chart_instance.config.data = {\r\n\t\t\t...this.chart_instance.config.data,\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\tthis.chart_instance.update();\r\n\t}\r\n\r\n\trenderChart = () => {\r\n\t\tconst { data, options, type } = this.props\r\n\t\t, _options = _configMerge(DF_OPTIONS, options);\r\n\t\tthis.chart_instance = new Chart(this.rootNode, {\r\n\t\t\ttype,\r\n\t\t\tdata,\r\n\t\t\toptions: _options\r\n\t\t});\r\n\t}\r\n\r\n\thandleOnClick = (evt) => {\r\n\t\tconst elems = this.chart_instance.getElementsAtEvent(evt);\r\n\t\tif (elems.length) {\r\n\t\t\tconst {onElementsClick} = this.props;\r\n\t\t\tonElementsClick(elems);\r\n\t\t}\r\n\t}\r\n\r\n  _refRoot = n => this.rootNode = n\r\n\r\n\trender() {\r\n\t\tconst { height, width, onElementsClick } = this.props\r\n\t\t    , _onClick = _isFn(onElementsClick)\r\n\t\t         ? this.handleOnClick\r\n\t\t\t\t     : null;\r\n\t\treturn (\r\n\t\t\t<canvas\r\n\t\t\t\t ref={this._refRoot}\r\n\t\t\t\t height={height}\r\n\t\t\t\t width={width}\r\n\t\t\t\t onClick={_onClick}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChartComponent;\r\n"],"file":"ChartComponent.js"}