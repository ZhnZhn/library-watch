{"version":3,"sources":["../../../src/components/zhn-containers/ChartContainer2.jsx"],"names":["CHILD_MARGIN","RESIZE_INIT_WIDTH","RESIZE_MIN_WIDTH","RESIZE_MAX_WIDTH","DELTA","S","ROOT","position","backgroundColor","padding","width","height","minHeight","marginLeft","borderRadius","boxShadow","overflowY","overflowX","BLOCK","display","NONE","SCROLL","paddingRight","isInArray","arr","value","len","length","i","compActions","CHAT","SHOW_CHART","LOAD_STOCK_COMPLETED","CLOSE_CHART","_getWidth","parseInt","style","ChartContainer2","props","chartType","onRemoveAll","childMargin","_MORE","onMinWidth","_resizeTo","bind","onInitialWidth","onPlusWidth","_plusToWidth","onMinusWidth","_minusToWidth","state","isMore","unsubscribe","Store","listen","_onStore","setState","getConfigs","caption","isShow","configs","_styleOpen","_classOpen","CL","SHOW_POPUP","undefined","_refRootNode","MENU_MORE","_hToggleMore","_showMore","_handleHide","_refScroll","Component","actionType","data","_scrollComp","scrollTop","CAT","CLOSE_CHART_CONTAINER_2","_getRootNodeStyle","_rootNode","w","prevState","browserType","onCloseContainer","node","c"],"mappings":"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","file":"ChartContainer2.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport Store from '../../flux/stores/AppStore';\r\nimport { ChartActionTypes as CHAT } from '../../flux/actions/ChartActions';\r\nimport { ComponentActionTypes as CAT } from '../../flux/actions/ComponentActions';\r\n\r\nimport ModalSlider from '../zhn-modal-slider/ModalSlider'\r\nimport crModelMore from './ModelMore'\r\nimport ContainerCaption from '../zhn-atoms/ContainerCaption';\r\nimport SvgHrzResize from '../zhn-moleculs/SvgHrzResize';\r\nimport ScrollPane from '../zhn-atoms/ScrollPane';\r\nimport CL from '../styles/CL';\r\n\r\nconst CHILD_MARGIN = 36\r\n, RESIZE_INIT_WIDTH = 635\r\n, RESIZE_MIN_WIDTH = 375\r\n, RESIZE_MAX_WIDTH = 1200\r\n, DELTA = 10;\r\n\r\nconst S = {\r\n  ROOT: {\r\n    position: 'relative',\r\n    backgroundColor: '#4D4D4D',\r\n    padding: '0px 0px 3px 0px',\r\n    width: 635,\r\n    height: 'calc(100vh - 71px)',\r\n    minHeight: 500,\r\n    marginLeft: 16,\r\n    borderRadius: 4,\r\n    boxShadow: '1px 4px 6px 1px rgba(0, 0, 0, 0.6)',\r\n    overflowY: 'hidden',\r\n    overflowX : 'hidden'\r\n  },\r\n  BLOCK: {\r\n    display: 'inline-block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  },\r\n  SCROLL: {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: 10\r\n  }\r\n};\r\n\r\nconst isInArray = function(arr=[], value){\r\n  const len = arr.length;\r\n  for (let i=0; i<len; i++){\r\n    if (arr[i] === value){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst compActions = [\r\n  CHAT.SHOW_CHART,\r\n  CHAT.LOAD_STOCK_COMPLETED,\r\n  CHAT.CLOSE_CHART\r\n];\r\n\r\nconst _getWidth = style => parseInt(style.width, 10)\r\n  || RESIZE_INIT_WIDTH;\r\n\r\nclass ChartContainer2 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    browserType: PropTypes.string,\r\n    chartType: PropTypes.string,\r\n    onCloseContainer: PropTypes.func\r\n  }\r\n  */\r\n   constructor(props){\r\n     super(props)\r\n     const { chartType, onRemoveAll } = props;\r\n     this.childMargin = CHILD_MARGIN\r\n     this._MORE = crModelMore({\r\n       chartType,\r\n       onMinWidth: this._resizeTo.bind(this, RESIZE_MIN_WIDTH),\r\n       onInitialWidth: this._resizeTo.bind(this, RESIZE_INIT_WIDTH),\r\n       onPlusWidth: this._plusToWidth,\r\n       onMinusWidth: this._minusToWidth,\r\n       onRemoveAll\r\n     })\r\n     this.state = {\r\n       isMore: false\r\n     }\r\n   }\r\n\r\n   componentWillMount(){\r\n     this.unsubscribe = Store.listen(this._onStore);\r\n     this.setState(Store.getConfigs(this.props.chartType));\r\n   }\r\n   componentWillUnmount(){\r\n     this.unsubscribe();\r\n   }\r\n\r\n   _onStore = (actionType, data) => {\r\n      if (isInArray(compActions, actionType)) {\r\n        if (data && data.chartType === this.props.chartType){\r\n          if (this._scrollComp) {\r\n            this._scrollComp.scrollTop()\r\n          }\r\n          this.setState(data);\r\n        }\r\n      } else if (actionType === CAT.CLOSE_CHART_CONTAINER_2){\r\n         if (data === this.props.chartType){\r\n           this._handleHide();\r\n         }\r\n      }\r\n   }\r\n\r\n   _getRootNodeStyle = () => {\r\n     const { _rootNode={} } = this\r\n     , { style={} } = _rootNode;\r\n     return style;\r\n   }\r\n\r\n   _resizeTo = (width) => {\r\n     this._getRootNodeStyle().width = width + 'px'\r\n   }\r\n\r\n   _plusToWidth = () => {\r\n     const style = this._getRootNodeStyle()\r\n     , w = _getWidth(style) + DELTA;\r\n     if (w < RESIZE_MAX_WIDTH) {\r\n        style.width = w + 'px'\r\n     }\r\n   }\r\n   _minusToWidth = () => {\r\n     const style = this._getRootNodeStyle()\r\n     , w = _getWidth(style) - DELTA;\r\n     if (w > RESIZE_MIN_WIDTH) {\r\n       style.width = w  + 'px'\r\n     }\r\n   }\r\n\r\n   _showMore = () => {\r\n      this.setState({ isMore: true })\r\n   }\r\n   _hToggleMore = () => {\r\n     this.setState(prevState => ({\r\n       isMore: !prevState.isMore\r\n     }))\r\n   }\r\n\r\n   _handleHide = () => {\r\n      const { chartType, browserType, onCloseContainer } = this.props;\r\n      onCloseContainer(chartType, browserType);\r\n      this.setState({ isShow: false });\r\n   }\r\n\r\n   _refRootNode = node => this._rootNode = node\r\n   _refScroll = c => this._scrollComp = c\r\n\r\n   render(){\r\n    const  { caption } = this.props\r\n     , { isShow, isMore, configs } = this.state\r\n     , _styleOpen = isShow ? S.BLOCK : S.NONE\r\n     , _classOpen = isShow ? CL.SHOW_POPUP : undefined;\r\n     return(\r\n        <div\r\n           ref={this._refRootNode}\r\n           className={_classOpen}\r\n           style={{ ...S.ROOT, ..._styleOpen }}\r\n        >\r\n          <ModalSlider\r\n            isShow={isMore}\r\n            className={CL.MENU_MORE}\r\n            model={this._MORE}\r\n            onClose={this._hToggleMore}\r\n          />\r\n          <ContainerCaption\r\n             caption={caption}\r\n             onMore={this._showMore}\r\n             onClose={this._handleHide}\r\n          >\r\n            <SvgHrzResize\r\n              minWidth={500}\r\n              maxWidth={1200}\r\n              comp={this}\r\n            />\r\n          </ContainerCaption>\r\n          <ScrollPane\r\n            ref={this._refScroll}\r\n            style={S.SCROLL}\r\n          >\r\n            {configs}\r\n          </ScrollPane>\r\n        </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default ChartContainer2\r\n"]}