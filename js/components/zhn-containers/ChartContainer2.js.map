{"version":3,"sources":["../../../src/components/zhn-containers/ChartContainer2.jsx"],"names":["CHILD_MARGIN","RESIZE_INIT_WIDTH","RESIZE_MIN_WIDTH","RESIZE_MAX_WIDTH","DELTA","S","ROOT","position","backgroundColor","padding","width","height","minHeight","marginLeft","borderRadius","boxShadow","overflowY","overflowX","BLOCK","display","NONE","SCROLL","paddingRight","_isInArray","arr","value","Boolean","indexOf","COMP_ACTIONS","CHAT","SHOW_CHART","LOAD_STOCK_COMPLETED","CLOSE_CHART","_getWidth","style","parseInt","_toStyleWidth","ChartContainer2","props","_onStore","actionType","data","chartType","_scrollComp","scrollTop","setState","CAT","CLOSE_CHART_CONTAINER_2","_handleHide","_getRootNodeStyle","_rootNode","_resizeTo","_plusToWidth","w","_minusToWidth","_showMore","isMore","_hToggleMore","prevState","browserType","onCloseContainer","isShow","_refRootNode","node","_refScroll","c","onRemoveAll","childMargin","_MORE","onMinWidth","bind","onInitialWidth","onPlusWidth","onMinusWidth","state","componentDidMount","unsubscribe","Store","listen","getConfigs","componentWillUnmount","render","caption","configs","_styleOpen","_classOpen","CL","SHOW_POPUP","undefined","MENU_MORE","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport Store from '../../flux/stores/AppStore';\r\nimport { ChartActionTypes as CHAT } from '../../flux/actions/ChartActions';\r\nimport { ComponentActionTypes as CAT } from '../../flux/actions/ComponentActions';\r\n\r\nimport ModalSlider from '../zhn-modal-slider/ModalSlider'\r\nimport crModelMore from './ModelMore'\r\nimport ContainerCaption from '../zhn-atoms/ContainerCaption';\r\nimport SvgHrzResize from '../zhn-moleculs/SvgHrzResize';\r\nimport ScrollPane from '../zhn-atoms/ScrollPane';\r\nimport CL from '../styles/CL';\r\n\r\nconst CHILD_MARGIN = 36\r\n, RESIZE_INIT_WIDTH = 635\r\n, RESIZE_MIN_WIDTH = 375\r\n, RESIZE_MAX_WIDTH = 1200\r\n, DELTA = 10;\r\n\r\nconst S = {\r\n  ROOT: {\r\n    position: 'relative',\r\n    backgroundColor: '#4D4D4D',\r\n    padding: '0px 0px 3px 0px',\r\n    width: 635,\r\n    height: 'calc(100vh - 71px)',\r\n    minHeight: 500,\r\n    marginLeft: 16,\r\n    borderRadius: 4,\r\n    boxShadow: '1px 4px 6px 1px rgba(0, 0, 0, 0.6)',\r\n    overflowY: 'hidden',\r\n    overflowX : 'hidden'\r\n  },\r\n  BLOCK: {\r\n    display: 'inline-block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  },\r\n  SCROLL: {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: 10\r\n  }\r\n};\r\n\r\nconst _isInArray = (arr=[], value) => Boolean(~arr.indexOf(value));\r\n\r\nconst COMP_ACTIONS = [\r\n  CHAT.SHOW_CHART,\r\n  CHAT.LOAD_STOCK_COMPLETED,\r\n  CHAT.CLOSE_CHART\r\n];\r\n\r\nconst _getWidth = style => parseInt(style.width, 10)\r\n  || RESIZE_INIT_WIDTH;\r\nconst _toStyleWidth = width => width + 'px';\r\n\r\nclass ChartContainer2 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    caption: PropTypes.string,\r\n    browserType: PropTypes.string,\r\n    chartType: PropTypes.string,\r\n    onCloseContainer: PropTypes.func\r\n  }\r\n  */\r\n   constructor(props){\r\n     super(props)\r\n     const { chartType, onRemoveAll } = props;\r\n     this.childMargin = CHILD_MARGIN\r\n     this._MORE = crModelMore({\r\n       chartType,\r\n       onMinWidth: this._resizeTo.bind(this, RESIZE_MIN_WIDTH),\r\n       onInitialWidth: this._resizeTo.bind(this, RESIZE_INIT_WIDTH),\r\n       onPlusWidth: this._plusToWidth,\r\n       onMinusWidth: this._minusToWidth,\r\n       onRemoveAll\r\n     })\r\n     this.state = {\r\n       isMore: false\r\n     }\r\n   }\r\n\r\n   componentDidMount(){\r\n     this.unsubscribe = Store.listen(this._onStore);\r\n     this.setState(Store.getConfigs(this.props.chartType));\r\n   }\r\n   componentWillUnmount(){\r\n     this.unsubscribe();\r\n   }\r\n\r\n   _onStore = (actionType, data) => {\r\n      if (_isInArray(COMP_ACTIONS, actionType)) {\r\n        if (data && data.chartType === this.props.chartType){\r\n          if (this._scrollComp) {\r\n            this._scrollComp.scrollTop()\r\n          }\r\n          this.setState(data);\r\n        }\r\n      } else if (actionType === CAT.CLOSE_CHART_CONTAINER_2){\r\n         if (data === this.props.chartType){\r\n           this._handleHide();\r\n         }\r\n      }\r\n   }\r\n\r\n   _getRootNodeStyle = () => {\r\n     const { _rootNode } = this\r\n     , { style={} } = _rootNode || {};\r\n     return style;\r\n   }\r\n\r\n   _resizeTo = (width) => {\r\n     this._getRootNodeStyle().width = _toStyleWidth(width)\r\n   }\r\n\r\n   _plusToWidth = () => {\r\n     const style = this._getRootNodeStyle()\r\n     , w = _getWidth(style) + DELTA;\r\n     if (w < RESIZE_MAX_WIDTH) {\r\n        style.width = _toStyleWidth(w)\r\n     }\r\n   }\r\n   _minusToWidth = () => {\r\n     const style = this._getRootNodeStyle()\r\n     , w = _getWidth(style) - DELTA;\r\n     if (w > RESIZE_MIN_WIDTH) {\r\n       style.width = _toStyleWidth(w)\r\n     }\r\n   }\r\n\r\n   _showMore = () => {\r\n      this.setState({ isMore: true })\r\n   }\r\n   _hToggleMore = () => {\r\n     this.setState(prevState => ({\r\n       isMore: !prevState.isMore\r\n     }))\r\n   }\r\n\r\n   _handleHide = () => {\r\n      const { chartType, browserType, onCloseContainer } = this.props;\r\n      onCloseContainer(chartType, browserType);\r\n      this.setState({ isShow: false });\r\n   }\r\n\r\n   _refRootNode = node => this._rootNode = node\r\n   _refScroll = c => this._scrollComp = c\r\n\r\n   render(){\r\n    const  { caption } = this.props\r\n     , { isShow, isMore, configs } = this.state\r\n     , _styleOpen = isShow ? S.BLOCK : S.NONE\r\n     , _classOpen = isShow ? CL.SHOW_POPUP : undefined;\r\n     return(\r\n        <div\r\n           ref={this._refRootNode}\r\n           className={_classOpen}\r\n           style={{ ...S.ROOT, ..._styleOpen }}\r\n        >\r\n          <ModalSlider\r\n            isShow={isMore}\r\n            className={CL.MENU_MORE}\r\n            model={this._MORE}\r\n            onClose={this._hToggleMore}\r\n          />\r\n          <ContainerCaption\r\n             caption={caption}\r\n             onMore={this._showMore}\r\n             onClose={this._handleHide}\r\n          >\r\n            <SvgHrzResize\r\n              minWidth={RESIZE_MIN_WIDTH}\r\n              maxWidth={RESIZE_MAX_WIDTH}\r\n              comp={this}\r\n            />\r\n          </ContainerCaption>\r\n          <ScrollPane\r\n            ref={this._refScroll}\r\n            style={S.SCROLL}\r\n          >\r\n            {configs}\r\n          </ScrollPane>\r\n        </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default ChartContainer2\r\n"],"file":"ChartContainer2.js"}