{"version":3,"file":"DialogStack.js","names":["_uiApi","require","_jsxRuntime","S_DIV","zIndex","position","top","left","width","_crArrWithTopObjByKey","arr","key","index","i","length","slice","_checkOpenDialogs","maxDialog","openDialogs","dialog","dialogType","push","INITIAL_STATE","compDialogs","DialogStack","_ref","useDgOption","state","setState","useState","_hToggleDialog","prevState","filter","v","dgOption","dialogComp","_openDialogs","jsx","style","children","map","compDialog","cloneElement","isShow","onClose","_default","exports","default"],"sources":["../../../src/components/zhn-containers/DialogStack.jsx"],"sourcesContent":["import {\r\n  cloneElement,\r\n  useState\r\n} from '../uiApi';\r\n\r\nconst S_DIV = {\r\n  zIndex: 30,\r\n  position: 'absolute',\r\n  top: 70,\r\n  left: 10,\r\n  width: '99%'\r\n};\r\n\r\nconst _crArrWithTopObjByKey = (arr, key) => {\r\n  let index, i;\r\n  for (i=0; i<arr.length; i++){\r\n    if (arr[i].key === key){\r\n      index = i\r\n      break;\r\n    }\r\n  }\r\n  return [\r\n    ...arr.slice(0, index),\r\n    ...arr.slice(index+1),\r\n    arr[index]\r\n  ];\r\n};\r\n\r\nconst _checkOpenDialogs = (\r\n  maxDialog,\r\n  openDialogs,\r\n  dialog,\r\n  dialogType\r\n) => {\r\n  openDialogs.push(dialogType)\r\n  return openDialogs.length > maxDialog\r\n    ? (dialog[openDialogs[0]] = false, openDialogs.slice(1))\r\n    : openDialogs;\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  dialog: {},\r\n  compDialogs: [],\r\n  openDialogs: []\r\n};\r\n\r\nconst DialogStack = ({\r\n  useDgOption,\r\n  maxDialog\r\n}) => {\r\n  const [\r\n    state,\r\n    setState\r\n  ] = useState(INITIAL_STATE)\r\n  , {\r\n    dialog,\r\n    compDialogs\r\n  } = state\r\n  , _hToggleDialog = (dialogType) => {\r\n    setState(prevState => {\r\n      const {\r\n        dialog,\r\n        openDialogs\r\n      } = prevState;\r\n      dialog[dialogType] = !dialog[dialogType]\r\n      return {\r\n        ...prevState,\r\n        dialog,\r\n        openDialogs: !dialog[dialogType]\r\n          ? openDialogs.filter(v => v !== dialogType)\r\n          : openDialogs\r\n      };\r\n    })\r\n  }\r\n\r\n  useDgOption(dgOption => {\r\n    if (dgOption) {\r\n      const {\r\n        dialogType,\r\n        dialogComp\r\n      } = dgOption;\r\n      if (dialogComp) {\r\n        setState(prevState => {\r\n          const {\r\n            dialog,\r\n            compDialogs,\r\n            openDialogs\r\n          } = prevState;\r\n          dialog[dialogType] = true;\r\n          compDialogs.push(dialogComp)\r\n          return {\r\n            dialog,\r\n            compDialogs,\r\n            openDialogs: _checkOpenDialogs(maxDialog, openDialogs, dialog, dialogType)\r\n          };\r\n        })\r\n      } else {\r\n        setState(prevState => {\r\n          const {\r\n            dialog,\r\n            compDialogs,\r\n            openDialogs\r\n          } = prevState;\r\n          let _openDialogs;\r\n          if (!dialog[dialogType]){\r\n             dialog[dialogType] = true;\r\n             _openDialogs = _checkOpenDialogs(maxDialog, openDialogs, dialog, dialogType);\r\n          }\r\n          return {\r\n            dialog,\r\n            compDialogs: _crArrWithTopObjByKey(compDialogs, dialogType),\r\n            openDialogs: _openDialogs || openDialogs\r\n          };\r\n        })\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div style={S_DIV}>\r\n      {compDialogs.map(compDialog => {\r\n         const { key } = compDialog;\r\n         return cloneElement(compDialog, {\r\n            key,\r\n            isShow: dialog[key],\r\n            onClose: () => _hToggleDialog(key)\r\n         });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogStack\r\n"],"mappings":"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","ignoreList":[]}