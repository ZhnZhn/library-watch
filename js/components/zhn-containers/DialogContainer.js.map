{"version":3,"file":"DialogContainer.js","names":["_uiApi","require","_ModalDialogContainer","_interopRequireDefault","_jsxRuntime","INITIAL_STATE","isShow","inits","shows","data","dialogs","currentDialog","DialogContainer","_ref","useMdOption","routerDialog","state","setState","useState","_hClose","type","prevState","mdOption","modalDialogType","push","Comp","jsx","default","onClose","children","map","_ref2","_default","exports"],"sources":["../../../src/components/zhn-containers/DialogContainer.jsx"],"sourcesContent":["import { useState } from '../uiApi';\r\n\r\nimport ModalDialogContainer from './ModalDialogContainer';\r\n\r\nconst INITIAL_STATE = {\r\n  isShow: false,\r\n  inits: {},\r\n  shows: {},\r\n  data: {},\r\n  dialogs: [],\r\n  currentDialog: null\r\n};\r\n\r\nconst DialogContainer = ({\r\n  useMdOption,\r\n  routerDialog\r\n}) => {\r\n  const [\r\n    state,\r\n    setState\r\n  ] = useState(INITIAL_STATE)\r\n  , {\r\n    isShow,\r\n    shows,\r\n    data,\r\n    dialogs,\r\n    currentDialog\r\n  } = state\r\n  , _hClose = type => {\r\n    setState(prevState => {\r\n      prevState.shows[type] = false\r\n      return {\r\n        ...prevState,\r\n        isShow: false,\r\n        currentDialog: null\r\n      };\r\n    })\r\n  };\r\n\r\n  useMdOption(mdOption => {\r\n    if (mdOption) {\r\n      const { modalDialogType:type } = mdOption;\r\n      setState(prevState => {\r\n        const {\r\n          inits,\r\n          shows,\r\n          data,\r\n          dialogs\r\n        } = prevState;\r\n        data[type] = mdOption;\r\n        shows[type] = true;\r\n        if (!inits[type]) {\r\n          dialogs.push({\r\n            type: type,\r\n            Comp: routerDialog[type]\r\n          });\r\n          inits[type] = true\r\n        }\r\n        return {\r\n          ...prevState,\r\n          isShow: true,\r\n          currentDialog: type\r\n        };\r\n      })\r\n    }\r\n  })\r\n\r\n  return (\r\n    <ModalDialogContainer\r\n       isShow={isShow}\r\n       onClose={() => _hClose(currentDialog)}\r\n    >\r\n       {dialogs.map(({\r\n          type,\r\n          Comp\r\n       }) => (<Comp\r\n          key={type}\r\n          isShow={shows[type]}\r\n          data={data[type]}\r\n          onClose={() => _hClose(type)}\r\n       />))}\r\n   </ModalDialogContainer>\r\n  );\r\n};\r\n\r\nexport default DialogContainer\r\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,qBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA0D,IAAAG,WAAA,GAAAH,OAAA;AAE1D,MAAMI,aAAa,GAAG;EACpBC,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE,CAAC,CAAC;EACTC,KAAK,EAAE,CAAC,CAAC;EACTC,IAAI,EAAE,CAAC,CAAC;EACRC,OAAO,EAAE,EAAE;EACXC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,eAAe,GAAGC,IAAA,IAGlB;EAAA,IAHmB;IACvBC,WAAW;IACXC;EACF,CAAC,GAAAF,IAAA;EACC,MAAM,CACJG,KAAK,EACLC,QAAQ,CACT,GAAG,IAAAC,eAAQ,EAACb,aAAa,CAAC;IACzB;MACAC,MAAM;MACNE,KAAK;MACLC,IAAI;MACJC,OAAO;MACPC;IACF,CAAC,GAAGK,KAAK;IACPG,OAAO,GAAGC,IAAI,IAAI;MAClBH,QAAQ,CAACI,SAAS,IAAI;QACpBA,SAAS,CAACb,KAAK,CAACY,IAAI,CAAC,GAAG,KAAK;QAC7B,OAAO;UACL,GAAGC,SAAS;UACZf,MAAM,EAAE,KAAK;UACbK,aAAa,EAAE;QACjB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;EAEDG,WAAW,CAACQ,QAAQ,IAAI;IACtB,IAAIA,QAAQ,EAAE;MACZ,MAAM;QAAEC,eAAe,EAACH;MAAK,CAAC,GAAGE,QAAQ;MACzCL,QAAQ,CAACI,SAAS,IAAI;QACpB,MAAM;UACJd,KAAK;UACLC,KAAK;UACLC,IAAI;UACJC;QACF,CAAC,GAAGW,SAAS;QACbZ,IAAI,CAACW,IAAI,CAAC,GAAGE,QAAQ;QACrBd,KAAK,CAACY,IAAI,CAAC,GAAG,IAAI;QAClB,IAAI,CAACb,KAAK,CAACa,IAAI,CAAC,EAAE;UAChBV,OAAO,CAACc,IAAI,CAAC;YACXJ,IAAI,EAAEA,IAAI;YACVK,IAAI,EAAEV,YAAY,CAACK,IAAI;UACzB,CAAC,CAAC;UACFb,KAAK,CAACa,IAAI,CAAC,GAAG,IAAI;QACpB;QACA,OAAO;UACL,GAAGC,SAAS;UACZf,MAAM,EAAE,IAAI;UACZK,aAAa,EAAES;QACjB,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,oBACE,IAAAhB,WAAA,CAAAsB,GAAA,EAACxB,qBAAA,CAAAyB,OAAoB;IAClBrB,MAAM,EAAEA,MAAO;IACfsB,OAAO,EAAEA,CAAA,KAAMT,OAAO,CAACR,aAAa,CAAE;IAAAkB,QAAA,EAErCnB,OAAO,CAACoB,GAAG,CAACC,KAAA;MAAA,IAAC;QACXX,IAAI;QACJK;MACH,CAAC,GAAAM,KAAA;MAAA,oBAAM,IAAA3B,WAAA,CAAAsB,GAAA,EAACD,IAAI;QAETnB,MAAM,EAAEE,KAAK,CAACY,IAAI,CAAE;QACpBX,IAAI,EAAEA,IAAI,CAACW,IAAI,CAAE;QACjBQ,OAAO,EAAEA,CAAA,KAAMT,OAAO,CAACC,IAAI;MAAE,GAHxBA,IAIP,CAAC;IAAA,CAAC;EAAC,CACc,CAAC;AAE1B,CAAC;AAAC,IAAAY,QAAA,GAAAC,OAAA,CAAAN,OAAA,GAEaf,eAAe","ignoreList":[]}