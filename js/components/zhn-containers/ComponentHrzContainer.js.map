{"version":3,"sources":["../../../src/components/zhn-containers/ComponentHrzContainer.jsx"],"names":["CL","ComponentHrzContainer","state","containers","_onStore","actionType","data","initShowAction","props","setState","prevState","unshift","componentDidMount","store","unsubscribe","listen","componentWillUnmount","render","Component"],"mappings":";;;;;;;;;;;AAAA;;;;AAEA;AAEA,IAAMA,EAAE,GAAG,eAAX;;IAEMC,qB;;;;;;;;;;;UASJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAG;AADP,K;;UAWRC,Q,GAAW,UAACC,UAAD,EAAaC,IAAb,EAAsB;AAAA,UACtBC,cADsB,GACH,MAAKC,KADF,CACtBD,cADsB;;AAE9B,UAAIF,UAAU,KAAKE,cAAnB,EAAkC;AAChC,cAAKE,QAAL,CAAc,UAAAC,SAAS,EAAI;AACzBA,UAAAA,SAAS,CAACP,UAAV,CAAqBQ,OAArB,CAA6BL,IAA7B;AACA,iBAAO;AACLH,YAAAA,UAAU,YAAMO,SAAS,CAACP,UAAhB;AADL,WAAP;AAGD,SALD,EADgC,CAOhC;AACA;;AACD;AACH,K;;;;;;;SAnBDS,iB,GAAA,6BAAmB;AAAA,QACTC,KADS,GACC,KAAKL,KADN,CACTK,KADS;AAEjB,SAAKC,WAAL,GAAmBD,KAAK,CAACE,MAAN,CAAa,KAAKX,QAAlB,CAAnB;AACD,G;;SACDY,oB,GAAA,gCAAsB;AACpB,SAAKF,WAAL;AACD,G;;SAeDG,M,GAAA,kBAAQ;AAAA,QACEd,UADF,GACiB,KAAKD,KADtB,CACEC,UADF;AAEN,wBACG;AAAK,MAAA,SAAS,EAAEH,EAAhB;AAAA,gBACIG;AADJ,MADH;AAKD,G;;;EAzCiCe,gB;;eA4CrBjB,qB","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst CL = \"hrz-container\";\r\n\r\nclass ComponentHrzContainer extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func\r\n    }),\r\n    initShowAction: PropTypes.string\r\n  }\r\n  */\r\n  state = {\r\n    containers : []\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { store } = this.props;\r\n    this.unsubscribe = store.listen(this._onStore);\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n  _onStore = (actionType, data) => {\r\n     const { initShowAction } = this.props;\r\n     if (actionType === initShowAction){\r\n       this.setState(prevState => {\r\n         prevState.containers.unshift(data)\r\n         return {\r\n           containers: [...prevState.containers]\r\n         };\r\n       })\r\n       //this.state.containers.unshift(data);\r\n       //this.setState(this.state);\r\n     }\r\n  }\r\n\r\n  render(){\r\n    const { containers } = this.state;\r\n    return (\r\n       <div className={CL}>\r\n          {containers}\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComponentHrzContainer\r\n"],"file":"ComponentHrzContainer.js"}