{"version":3,"sources":["../../../src/components/zhn-containers/DialogContainer3.jsx"],"names":["STYLE","ROOT","zIndex","position","top","left","width","getObjToFirst","arr","keyValue","index","i","len","length","key","slice","DialogContainer3","props","_checkActiveDialogs","dialogType","_activeDialogs","push","maxDialog","state","dialog","filterActiveDialogs","filter","value","_onStore","actionType","data","initAction","showAction","compDialogs","setState","dialogComp","_handleToggleDialog","document","getElementsByTagName","style","cursor","_renderDialogs","map","compDialog","React","cloneElement","isShow","onClose","bind","componentDidMount","unsubscribe","store","listen","componentWillUnmount","render","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst STYLE = {\r\n  ROOT: {\r\n    zIndex : 30,\r\n    position: 'absolute',\r\n    top: 70,\r\n    left: 10,\r\n    width: '99%'\r\n  }\r\n};\r\n\r\nconst getObjToFirst = function(arr, keyValue){\r\n  let index, i, len=arr.length;\r\n  for (i=0; i<len; i++){\r\n    if (arr[i].key === keyValue){\r\n      index = i\r\n      break;\r\n    }\r\n  }\r\n  return [\r\n    ...arr.slice(0, index),\r\n    ...arr.slice(index+1),\r\n    arr[index]\r\n  ];\r\n};\r\n\r\nclass DialogContainer3 extends Component {\r\n  /*\r\n  static propTypes = {\r\n    maxDialog: PropTypes.number,\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func\r\n    }),\r\n    initAction: PropTypes.string,\r\n    showAction: PropTypes.string\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this._activeDialogs = []\r\n    this.state = {\r\n      dialog: {},\r\n      compDialogs : []\r\n    }\r\n  }\r\n\r\n   componentDidMount(){\r\n     this.unsubscribe = this.props.store.listen(this._onStore)\r\n   }\r\n   componentWillUnmount(){\r\n     this.unsubscribe()\r\n   }\r\n\r\n   _checkActiveDialogs = (dialogType) => {\r\n     this._activeDialogs.push(dialogType)\r\n     if (this._activeDialogs.length > this.props.maxDialog){\r\n       this.state.dialog[this._activeDialogs[0]] = false\r\n       this._activeDialogs = this._activeDialogs.slice(1)\r\n     }\r\n   }\r\n   filterActiveDialogs = (dialogType) => {\r\n     this._activeDialogs = this._activeDialogs.filter((value) => {\r\n         return value !== dialogType;\r\n     })\r\n   }\r\n\r\n   _onStore = (actionType, data) => {\r\n      const { initAction, showAction } = this.props\r\n      if (actionType === showAction){\r\n         if (!this.state.dialog[data]){\r\n            this.state.dialog[data] = true;\r\n            this._checkActiveDialogs(data);\r\n         }\r\n         this.state.compDialogs = getObjToFirst(this.state.compDialogs, data)\r\n         this.setState(this.state)\r\n\r\n      } else if (actionType === initAction) {\r\n\r\n         this.state.dialog[data.dialogType] = true;\r\n         this.state.compDialogs.push(data.dialogComp);\r\n         this._checkActiveDialogs(data.dialogType);\r\n         this.setState(this.state);\r\n\r\n      }\r\n   }\r\n\r\n  _handleToggleDialog = (dialogType) => {\r\n    const { dialog } = this.state\r\n    dialog[dialogType] = !dialog[dialogType]\r\n    this.setState(this.state)\r\n\r\n    if (!dialog[dialogType]) {\r\n      this.filterActiveDialogs(dialogType);\r\n      document.getElementsByTagName('html')[0].style.cursor = '';\r\n    }\r\n  }\r\n\r\n  _renderDialogs = () => {\r\n    const { dialog, compDialogs } = this.state\r\n    return compDialogs.map((compDialog, index) => {\r\n       return React.cloneElement(compDialog, {\r\n             key : compDialog.key,\r\n             isShow  : dialog[compDialog.key],\r\n             onClose : this._handleToggleDialog.bind(this, compDialog.key)\r\n          });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={STYLE.ROOT}>\r\n        {this._renderDialogs()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogContainer3\r\n"],"file":"DialogContainer3.js"}