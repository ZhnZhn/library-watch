{"version":3,"sources":["../../../../src/components/zhn-atoms/__tests__/LinkImg.test.js"],"names":["_fnGetWrapper","props","href","imgSrc","imgClass","wrapper","t","true","is","prop","imgWrapper","childAt","type","hasClass","onErrorSpy","sinon","spy","onError","find","simulate","calledOnce"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;AACA;;;;AAGA;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,UAAO,qBAAQ,8BAAC,iBAAD,EAAaA,KAAb,CAAR,CAAP;AACD,CAFD;;AAIA,mBAAK,mEAAL,EAA0E,aAAK;AAC5E,OAAMC,OAAO,wBAAb;AAAA,OACMC,SAAS,kCADf;AAAA,OAEMC,WAAW,KAFjB;AAAA,OAGMC,UAAUL,cAAc,EAAEE,UAAF,EAAQC,cAAR,EAAgBC,kBAAhB,EAAd,CAHhB;;AAKAE,KAAEC,IAAF,CAAOF,QAAQG,EAAR,CAAW,GAAX,CAAP;AACAF,KAAEE,EAAF,CAAKH,QAAQI,IAAR,CAAa,MAAb,CAAL,EAA2BP,IAA3B;AACA,OAAMQ,aAAaL,QAAQM,OAAR,CAAgB,CAAhB,CAAnB;AACAL,KAAEE,EAAF,CAAKE,WAAWE,IAAX,EAAL,EAAwB,KAAxB;AACAN,KAAEE,EAAF,CAAKE,WAAWD,IAAX,CAAgB,KAAhB,CAAL,EAA6BN,MAA7B;AACAG,KAAEC,IAAF,CAAOG,WAAWG,QAAX,CAAoBT,QAApB,CAAP;AACF,CAZD;;AAcA,mBAAK,iDAAL,EAAwD,aAAK;AAC1D,OAAMU,aAAaC,gBAAMC,GAAN,EAAnB;AAAA,OACOX,UAAUL,cAAc,EAAEiB,SAAUH,UAAZ,EAAd,CADjB;;AAGDT,WAAQa,IAAR,CAAa,KAAb,EAAoBC,QAApB,CAA6B,OAA7B,EAAsC,EAAtC;AACAb,KAAEC,IAAF,CAAOO,WAAWM,UAAlB;AACD,CAND","file":"LinkImg.test.js","sourcesContent":["import React from 'react';\r\n\r\nimport test from 'ava';\r\nimport { shallow } from 'enzyme';\r\nimport sinon from 'sinon';\r\n\r\n\r\nimport LinkImg from '../../../../js/components/zhn-atoms/LinkImg';\r\n\r\nconst _fnGetWrapper = (props) => {\r\n  return shallow(<LinkImg {...props} />)\r\n}\r\n\r\ntest('render a with href and child img with imgSrc, imgClass root props', t => {\r\n   const href = \"http://www.example.com\"\r\n       , imgSrc = \"http://www.example.com/image.png\"\r\n       , imgClass = \"img\"\r\n       , wrapper = _fnGetWrapper({ href, imgSrc, imgClass })\r\n\r\n   t.true(wrapper.is('a'))\r\n   t.is(wrapper.prop('href'), href)\r\n   const imgWrapper = wrapper.childAt(0)\r\n   t.is(imgWrapper.type(), 'img')\r\n   t.is(imgWrapper.prop('src'), imgSrc)\r\n   t.true(imgWrapper.hasClass(imgClass))\r\n})\r\n\r\ntest('should call prop onError on erro event on image', t => {\r\n   const onErrorSpy = sinon.spy()\r\n        , wrapper = _fnGetWrapper({ onError : onErrorSpy })\r\n\r\n  wrapper.find('img').simulate('error', {})\r\n  t.true(onErrorSpy.calledOnce)   \r\n})\r\n"]}