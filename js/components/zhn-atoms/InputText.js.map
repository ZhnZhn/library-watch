{"version":3,"sources":["../../../src/components/zhn-atoms/InputText.jsx"],"names":["CL","FIELD","INPUT","BT_CLEAR","isTouchable","is","IS_TOUCH","_isKeyClean","keyCode","_isKeyEnter","BtClear","isValue","onClick","InputText","props","_hChange","event","setState","value","target","_hKeyDown","onEnter","_hClean","focus","_refInput","_inputElement","element","state","initValue","style","placeholder","maxLength","Boolean","trim","isUpdateInitValue","Component","defaultProps"],"mappings":"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","file":"InputText.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport is from '../../utils/is'\r\n\r\nconst CL = {\r\n  FIELD: 'm-field',\r\n  INPUT:  'm-field__input',\r\n  BT_CLEAR: 'm-field__bt-clear'\r\n};\r\n\r\nconst { isTouchable } = is;\r\nconst IS_TOUCH = isTouchable();\r\n\r\nconst _isKeyClean = ({ keyCode }) => keyCode === 27\r\n || keyCode === 46;\r\nconst _isKeyEnter = ({ keyCode }) => keyCode === 13;\r\n\r\nconst BtClear = ({ isValue, onClick }) => (\r\n  <button\r\n    class={CL.BT_CLEAR}\r\n    tabIndex=\"-1\"\r\n    onClick={onClick}\r\n  >\r\n    { isValue ? 'x' : '' }\r\n  </button>\r\n);\r\n\r\nclass InputText extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isUpdateInitValue: PropTypes.bool,\r\n    initValue: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    style: PropTypes.object\r\n    onEnter: PropTypes.func\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    isUpdateInitValue: false,\r\n    initValue: '',\r\n    placeholder: '',\r\n    maxLength: 50,\r\n    onEnter: () => {}\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      value: props.initValue\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps({ isUpdateInitValue, initValue }){\r\n    return isUpdateInitValue\r\n     && typeof initValue === \"string\"\r\n      ?  { value: initValue }\r\n      : void 0;\r\n  }\r\n\r\n  _hChange = (event) => {\r\n    this.setState({ value: event.target.value })\r\n  }\r\n\r\n  _hKeyDown = (event) => {\r\n     if ( _isKeyClean(event) ){\r\n       this.setState({ value: '' })\r\n     } else if ( _isKeyEnter(event) ) {\r\n       this.props.onEnter(event.target.value)\r\n     }\r\n  }\r\n\r\n  _hClean = () => {\r\n    this.setState({ value: '' })\r\n    this.focus()\r\n  }\r\n\r\n  _refInput = element => this._inputElement = element\r\n\r\n  render(){\r\n    const {\r\n      style,\r\n      placeholder,\r\n      maxLength\r\n    } = this.props\r\n    , { value } = this.state;\r\n    return (\r\n      <div class={CL.FIELD}>\r\n        <input\r\n          ref={this._refInput}\r\n          type=\"text\"\r\n          autoCorrect=\"off\"\r\n          autoCapitalize=\"off\"\r\n          spellCheck={false}\r\n          class={CL.INPUT}\r\n          style={style}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          maxLength={maxLength}\r\n          onChange={this._hChange}\r\n          onKeyDown={this._hKeyDown}\r\n        />\r\n        {\r\n          IS_TOUCH && <BtClear\r\n            isValue={Boolean(value)}\r\n            onClick={this._hClean}\r\n          />\r\n        }\r\n     </div>\r\n   );\r\n  }\r\n\r\n  getValue(){\r\n    return this.state.value.trim();\r\n  }\r\n  setValue(value){\r\n    this.setState({ value });\r\n  }\r\n  focus(){\r\n    if (this._inputElement) {\r\n      this._inputElement.focus()\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default InputText\r\n"]}