{"version":3,"sources":["../../../src/components/zhnMoleculs/MenuPart.jsx"],"names":["S","CAPTION_ROW","paddingLeft","_renderMenuItems","rowClass","items","map","item","index","_className","menuBadge","counter","isOpen","onBadgeOpen","onBadgeClose","onClick","title","MenuPart","caption","isInitClose"],"mappings":";;;;;;AAAA;;;;AAGA;;;;AACA;;;;;;AAHA;;AAKA,IAAMA,IAAI;AACRC,eAAa;AACXC,iBAAa;AADF;AADL,CAAV;;AAMA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAASC,QAAT,EAA4B;AAAA,MAATC,KAAS,uEAAH,EAAG;;AACnD,SAAOA,MAAMC,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChC,QAAMC,aAAcL,QAAD,GACRA,WAAW,eADH,GAEPI,QAAQ,CAAT,GACI,+BADJ,GAEI,8BAJf;AAAA,QAKME,YAAaH,KAAKI,OAAL,KAAiB,CAAlB,GAEJ,8BAAC,mBAAD;AACE,eAASJ,KAAKI,OADhB;AAEE,cAAQJ,KAAKK,MAFf;AAGE,mBAAaL,KAAKM,WAHpB;AAIE,oBAAcN,KAAKO;AAJrB,MAFI,GASN,IAdZ;AAeA,WACG;AAAA;AAAA;AACE,aAAKN,KADP;AAEE,kBAAU,CAFZ;AAGE,mBAAWC,UAHb;AAIE,iBAASF,KAAKQ;AACd;AALF;AAOIR,WAAKS,KAPT;AAQIN;AARJ,KADH;AAYD,GA5BM,CAAP;AA6BD,CA9BD;;AAgCA,IAAMO,WAAW,SAAXA,QAAW;AAAA,MAAGb,QAAH,QAAGA,QAAH;AAAA,MAAac,OAAb,QAAaA,OAAb;AAAA,MAAsBb,KAAtB,QAAsBA,KAAtB;AAAA,MAA6Bc,WAA7B,QAA6BA,WAA7B;AAAA,SACf;AAAC,uBAAD;AAAA;AACG,uBAAiBnB,EAAEC,WADtB;AAEG,eAASiB,OAFZ;AAGG,eAASC;AAHZ;AAKIhB,qBAAiBC,QAAjB,EAA2BC,KAA3B;AALJ,GADe;AAAA,CAAjB;;AAUA;;;;;;;;kBAQeY,Q","file":"MenuPart.js","sourcesContent":["import React from 'react';\r\n//import PropTypes from 'prop-types'\r\n\r\nimport MenuBadge from '../zhnAtoms/MenuBadge';\r\nimport OpenClose2 from '../zhnAtoms/OpenClose2';\r\n\r\nconst S = {\r\n  CAPTION_ROW: {\r\n    paddingLeft: 6\r\n  }\r\n};\r\n\r\nconst _renderMenuItems = function(rowClass, items=[]){\r\n  return items.map((item, index) => {\r\n    const _className = (rowClass)\r\n             ? rowClass + ' not-selected'\r\n             : (index % 2)\r\n                 ? 'row__topic__even not-selected'\r\n                 : 'row__topic__odd not-selected'\r\n        , menuBadge = (item.counter !== 0)\r\n             ? (\r\n                  <MenuBadge\r\n                    counter={item.counter}\r\n                    isOpen={item.isOpen}\r\n                    onBadgeOpen={item.onBadgeOpen}\r\n                    onBadgeClose={item.onBadgeClose}\r\n                 />\r\n                )\r\n              : null;\r\n    return (\r\n       <div\r\n         key={index}\r\n         tabIndex={0}\r\n         className={_className}\r\n         onClick={item.onClick}\r\n         //onKeyPress={item.onClick}\r\n        >\r\n          {item.title}\r\n          {menuBadge}\r\n       </div>\r\n    )\r\n  })\r\n}\r\n\r\nconst MenuPart = ({ rowClass, caption, items, isInitClose }) => (\r\n  <OpenClose2\r\n     styleCaptionRow={S.CAPTION_ROW}\r\n     caption={caption}\r\n     isClose={isInitClose}\r\n  >\r\n     {_renderMenuItems(rowClass, items)}\r\n  </OpenClose2>\r\n)\r\n\r\n/*\r\nMenuPart.propTypes = {\r\n  caption: PropTypes.string,\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n  isInitClose: PropTypes.bool\r\n}\r\n*/\r\n\r\nexport default MenuPart\r\n"]}