{"version":3,"sources":["../../../src/components/zhnMoleculs/SvgHrzResize.jsx"],"names":["styles","rootDiv","display","leftDiv","marginLeft","SvgHrzResize","createClass","getInitialState","id","domNode","delta","step","countStep","isResizeAfter","props","onResizeAfter","componentDidMount","comp","minWidth","maxWidth","findDOMNode","initWidth","getBoundingClientRect","width","currentWidth","minDelta","maxDelta","_increaseStepValue","_resizeLeft","style","_resizeRight","_handlerStartResize","fnResize","_handlerStopResize","setInterval","isOnResizeAfter","clearInterval","render","bind"],"mappings":"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","file":"SvgHrzResize.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst styles = {\r\n  rootDiv : {\r\n    display : 'inline-block'\r\n  },\r\n  leftDiv : {\r\n    marginLeft : '10px'\r\n  }\r\n};\r\n\r\nconst SvgHrzResize = React.createClass({\r\n  getInitialState(){\r\n    this.id = null;\r\n    this.domNode = null;\r\n    this.delta = 0;\r\n    this.step = 1;\r\n    this.countStep = 0;\r\n    this.isResizeAfter = ( typeof this.props.onResizeAfter === 'function')\r\n            ? true\r\n            : false ;\r\n    return {\r\n    }\r\n  },\r\n\r\n  componentDidMount(){\r\n     const {comp, minWidth, maxWidth} = this.props;\r\n     this.domNode = ReactDOM.findDOMNode(comp);\r\n     this.initWidth = this.domNode.getBoundingClientRect().width;\r\n     this.currentWidth = this.initWidth;\r\n     this.minDelta = minWidth - this.initWidth;\r\n     this.maxDelta = maxWidth - this.initWidth;\r\n  },\r\n\r\n  _increaseStepValue(){\r\n    this.countStep +=1;\r\n    if ( this.countStep > 30){\r\n      this.step = 3;\r\n    } else if ( this.countStep > 15){\r\n      this.step = 2;\r\n    }\r\n    if ( (this.maxDelta - this.delta) < 20 ||\r\n         (this.delta - this.minDelta) < 20    ){\r\n      this.step = 1;\r\n    }\r\n  },\r\n\r\n  _resizeLeft(){\r\n    if (this.delta > this.minDelta){\r\n      this.delta -= this.step;\r\n      this.currentWidth = this.initWidth + this.delta;\r\n      this.domNode.style.width = this.currentWidth + 'px';\r\n      this._increaseStepValue();\r\n    }\r\n  },\r\n  _resizeRight(){\r\n    if (this.delta < this.maxDelta){\r\n      this.delta += this.step;\r\n      this.currentWidth = this.initWidth + this.delta;\r\n      this.domNode.style.width = this.currentWidth + 'px';\r\n      this._increaseStepValue();\r\n    }\r\n  },\r\n  _handlerStartResize(fnResize){\r\n    if (this.id !== null){\r\n      this._handlerStopResize(false);\r\n    }\r\n    this.id = setInterval(fnResize, 5);\r\n  },\r\n  _handlerStopResize(isOnResizeAfter){\r\n    clearInterval(this.id);\r\n    this.id = null;\r\n    this.step = 1;\r\n    this.countStep = 0;\r\n\r\n    if (isOnResizeAfter && this.isResizeAfter){\r\n      this.props.onResizeAfter(this.currentWidth);\r\n    }\r\n  },\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div style={styles.rootDiv}>\r\n        <div\r\n           className=\"svg-resize\"\r\n           style={styles.leftDiv}\r\n           title=\"Resize container horizontal left\"\r\n           onMouseDown={this._handlerStartResize.bind(null, this._resizeLeft)}\r\n           onMouseUp={this._handlerStopResize.bind(null, true)}\r\n           onTouchStart={this._handlerStartResize.bind(null, this._resizeLeft)}\r\n           onTouchEnd={this._handlerStopResize.bind(null, true)}\r\n        >\r\n           <svg viewBox=\"0 0 12 12\" width=\"100%\" height=\"100%\"\r\n               preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                   d=\"M 1,6 L 11,6\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n                />\r\n               <path\r\n                   d=\"M 6,2 L 1,6 6,10\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n                   fill=\"none\"\r\n               />\r\n          </svg>\r\n      </div>\r\n      <div\r\n         className=\"svg-resize\"\r\n         style={styles.leftDiv}\r\n         title=\"Resize container horizontal right\"\r\n         onMouseDown={this._handlerStartResize.bind(null, this._resizeRight)}\r\n         onMouseUp={this._handlerStopResize.bind(null, true)}\r\n         onTouchStart={this._handlerStartResize.bind(null, this._resizeRight)}\r\n         onTouchEnd={this._handlerStopResize.bind(null, true)}\r\n      >\r\n        <svg viewBox=\"0 0 12 12\" width=\"100%\" height=\"100%\"\r\n             preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <path\r\n                   d=\"M 1,6 L 11,6\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n            />\r\n            <path\r\n                  d=\"M 6,2 L 11,6 6,10\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  fill=\"none\"\r\n           />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n});\r\n\r\nexport default SvgHrzResize\r\n"]}