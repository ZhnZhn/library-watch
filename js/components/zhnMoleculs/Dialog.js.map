{"version":3,"sources":["../../../src/components/zhnMoleculs/Dialog.jsx"],"names":["styles","rootDiv","position","top","left","backgroundColor","border","borderRadius","boxShadow","zIndex","captionDiv","padding","color","textAlign","fontSize","childrenDiv","cursor","commandDiv","float","marginTop","marginBottom","marginRight","Dialog","createClass","componentDidMount","makeDragable","domRootDiv","_renderCommandButton","commandButtons","onShowChart","onClose","render","props","isShow","caption","children","_styleShow","display","_classShow","undefined","c","Object","assign"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,SAAS;AACbC,WAAS;AACPC,cAAU,UADH;AAEPC,SAAK,MAFE;AAGPC,UAAM,MAHC;AAIPC,qBAAiB,SAJV;AAKPC,YAAQ,mBALD;AAMPC,kBAAc,KANP;AAOPC,eAAW,oCAPJ;AAQPC,YAAQ;AARD,GADI;AAWbC,cAAW;AACTC,aAAS,KADA;AAETC,WAAO,uBAFE;AAGTP,qBAAiB,SAHR;AAITQ,eAAW,QAJF;AAKTC,cAAU;AALD,GAXE;AAkBbC,eAAc;AACZC,YAAS;AADG,GAlBD;AAqBbC,cAAa;AACVD,YAAQ,SADE;AAEVE,WAAO,OAFG;AAGVC,eAAW,KAHD;AAIVC,kBAAc,MAJJ;AAKVC,iBAAa;AALH;AArBA,CAAf;;AA+BA,IAAMC,SAAS,gBAAMC,WAAN,CAAkB;AAAA;AAE/BC,mBAF+B,+BAEZ;AAChB,uBAASC,YAAT,CAAsB,KAAKC,UAA3B;AACF,GAJ8B;AAM/BC,sBAN+B,gCAMVC,cANU,EAMMC,WANN,EAMmBC,OANnB,EAM2B;AACxD,WACE;AAAA;AAAA,QAAK,OAAO9B,OAAOiB,UAAnB;AACGW,oBADH;AAEE;AACG,cAAK,OADR;AAEG,iBAAQ,MAFX;AAGG,iBAASC;AAHZ,QAFF;AAOE;AACG,cAAK,OADR;AAEG,iBAAQ,OAFX;AAGG,iBAASC;AAHZ;AAPF,KADF;AAeD,GAtB8B;AAwB/BC,QAxB+B,oBAwBvB;AAAA;;AAAA,iBAII,KAAKC,KAJT;AAAA,QAEEC,MAFF,UAEEA,MAFF;AAAA,QAEUC,OAFV,UAEUA,OAFV;AAAA,QAEmBC,QAFnB,UAEmBA,QAFnB;AAAA,QAE6BP,cAF7B,UAE6BA,cAF7B;AAAA,QAGEC,WAHF,UAGEA,WAHF;AAAA,QAGeC,OAHf,UAGeA,OAHf;AAAA,QAKAM,UALA,GAKaH,SAAS,EAACI,SAAS,OAAV,EAAT,GAA8B,EAACA,SAAS,MAAV,EAL3C;AAAA,QAMAC,UANA,GAMaL,SAAS,YAAT,GAAwBM,SANrC;;AAQN,WACE;AAAA;AAAA;AACK,aAAM;AAAA,iBAAK,MAAKb,UAAL,GAAkBc,CAAvB;AAAA,SADX;AAEK,mBAAWF,UAFhB;AAGK,eAAOG,OAAOC,MAAP,CAAc,EAAd,EAAkB1C,OAAOC,OAAzB,EAAkCmC,UAAlC;AAHZ;AAKE;AAAA;AAAA,UAAK,OAAOpC,OAAOU,UAAnB;AACE;AAAA;AAAA,YAAM,WAAU,cAAhB;AACIwB;AADJ,SADF;AAIE,4DAAU,SAASJ,OAAnB;AAJF,OALF;AAWE;AAAA;AAAA,UAAK,OAAO9B,OAAOe,WAAnB;AACIoB;AADJ,OAXF;AAcG,WAAKR,oBAAL,CAA0BC,cAA1B,EAA0CC,WAA1C,EAAuDC,OAAvD;AAdH,KADF;AAkBD;AAlD8B,CAAlB,CAAf;;kBAqDeR,M","file":"Dialog.js","sourcesContent":["import React from 'react';\r\n\r\nimport SvgClose from '../zhnAtoms/SvgClose';\r\nimport ToolBarButton from '../header/ToolBarButton';\r\n\r\nimport Interact from '../../utils/Interact';\r\n\r\nconst styles = {\r\n  rootDiv: {\r\n    position: 'absolute',\r\n    top: '30px',\r\n    left: '50px',\r\n    backgroundColor: '#4D4D4D',\r\n    border: 'solid 2px #232F3B',\r\n    borderRadius: '5px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 6px',\r\n    zIndex: 10\r\n  },\r\n  captionDiv:{\r\n    padding: '5px',\r\n    color: 'rgba(164, 135, 212,1)',\r\n    backgroundColor: '#232F3B',\r\n    textAlign: 'center',\r\n    fontSize: '18px'\r\n  },\r\n  childrenDiv : {\r\n    cursor : 'default'\r\n  },\r\n  commandDiv : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '8px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  }\r\n};\r\n\r\n\r\nconst Dialog = React.createClass({\r\n\r\n  componentDidMount(){\r\n     Interact.makeDragable(this.domRootDiv);\r\n  },\r\n\r\n  _renderCommandButton(commandButtons, onShowChart, onClose){\r\n    return (\r\n      <div style={styles.commandDiv}>\r\n        {commandButtons}\r\n        <ToolBarButton\r\n           type=\"TypeC\"\r\n           caption=\"Show\"\r\n           onClick={onShowChart}\r\n        />\r\n        <ToolBarButton\r\n           type=\"TypeC\"\r\n           caption=\"Close\"\r\n           onClick={onClose}\r\n        />\r\n      </div>\r\n    );\r\n  },\r\n\r\n  render(){\r\n    const {\r\n            isShow, caption, children, commandButtons,\r\n            onShowChart, onClose\r\n          } = this.props\r\n        , _styleShow = isShow ? {display: 'block'} : {display: 'none'}\r\n        , _classShow = isShow ? 'show-popup' : undefined;\r\n\r\n    return (\r\n      <div\r\n           ref={ c => this.domRootDiv = c }        \r\n           className={_classShow}\r\n           style={Object.assign({}, styles.rootDiv, _styleShow)}\r\n      >\r\n        <div style={styles.captionDiv}>\r\n          <span className=\"not-selected\">\r\n             {caption}\r\n          </span>\r\n          <SvgClose onClose={onClose} />\r\n        </div>\r\n        <div style={styles.childrenDiv}>\r\n           {children}\r\n        </div>\r\n        {this._renderCommandButton(commandButtons, onShowChart, onClose)}\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nexport default Dialog;\r\n"]}