{"version":3,"sources":["../../../../src/components/zhnAtoms/__tests__/OpenClose2.test.js"],"names":["_fnGetWrapper","props","wrapper","t","true","is","false","state","find","isClose","style","color","caption","text","styleCaption","fillOpen","fillClose","div","fill","simulate"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;AAEA;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,SAAO,qBAAQ,8BAAC,mBAAD,EAAgBA,KAAhB,CAAR,CAAP;AACD,CAFD;;AAIA,mBAAK,2DAAL,EAAkE,aAAI;AACpE,MAAMC,UAAUF,eAAhB;;AAEAG,IAAEC,IAAF,CAAOF,QAAQG,EAAR,CAAW,KAAX,CAAP;AACAF,IAAEG,KAAF,CAAQJ,QAAQK,KAAR,CAAc,QAAd,CAAR;AACAJ,IAAEC,IAAF,CAAOF,QAAQM,IAAR,CAAa,eAAb,EAA8BH,EAA9B,CAAiC,KAAjC,CAAP;AACD,CAND;;AAQA,mBAAK,yBAAL,EAAgC,aAAK;AAClC,MAAMH,UAAUF,cAAc,EAAES,SAAS,IAAX,EAAd,CAAhB;;AAEAN,IAAEG,KAAF,CAAQJ,QAAQK,KAAR,CAAc,QAAd,CAAR;AACF,CAJD;;AAMA,mBAAK,wCAAL,EAA+C,aAAK;AAClD,MAAMG,QAAQ,EAAEC,OAAO,QAAT,EAAd;AAAA,MACMT,UAAUF,cAAc,EAAEU,YAAF,EAAd,CADhB;;AAGAP,IAAEE,EAAF,CAAKH,QAAQD,KAAR,GAAgBS,KAAhB,CAAsBC,KAA3B,EAAkCD,MAAMC,KAAxC;AACD,CALD;;AAOA,mBAAK,uCAAL,EAA8C,aAAK;AACjD,MAAMC,UAAU,SAAhB;AAAA,MACMV,UAAUF,cAAc,EAAEY,gBAAF,EAAd,CADhB;;AAGAT,IAAEE,EAAF,CAAKH,QAAQM,IAAR,CAAa,MAAb,EAAqBK,IAArB,EAAL,EAAkCD,OAAlC;AACD,CALD;;AAOA,mBAAK,+CAAL,EAAsD,aAAK;AACzD,MAAME,eAAe,EAAEH,OAAO,QAAT,EAArB;AAAA,MACMT,UAAUF,cAAc,EAAEc,0BAAF,EAAd,CADhB;;AAGAX,IAAEE,EAAF,CAAKH,QAAQM,IAAR,CAAa,MAAb,EAAqBP,KAArB,GAA6BS,KAA7B,CAAmCC,KAAxC,EAA+CG,aAAaH,KAA5D;AACD,CALD;;AAQA,mBAAK,yFAAL,EAAgG,aAAK;AACnG,MAAOI,WAAW,OAAlB;AAAA,MACOC,YAAY,QADnB;AAAA,MAEOd,UAAUF,cAAc,EAAEe,kBAAF,EAAYC,oBAAZ,EAAd,CAFjB;AAAA,MAGOC,MAAMf,QAAQM,IAAR,CAAa,kBAAb,CAHb;;AAKAL,IAAEG,KAAF,CAAQJ,QAAQK,KAAR,CAAc,QAAd,CAAR;AACAJ,IAAEE,EAAF,CAAKH,QAAQM,IAAR,CAAa,MAAb,EAAqBP,KAArB,GAA6BiB,IAAlC,EAAwCF,SAAxC;;AAEAC,MAAIE,QAAJ,CAAa,OAAb;AACAhB,IAAEC,IAAF,CAAOF,QAAQK,KAAR,CAAc,QAAd,CAAP;AACAJ,IAAEE,EAAF,CAAKH,QAAQM,IAAR,CAAa,MAAb,EAAqBP,KAArB,GAA6BiB,IAAlC,EAAwCH,QAAxC;;AAEAE,MAAIE,QAAJ,CAAa,OAAb;AACAhB,IAAEG,KAAF,CAAQJ,QAAQK,KAAR,CAAc,QAAd,CAAR;AACAJ,IAAEE,EAAF,CAAKH,QAAQM,IAAR,CAAa,MAAb,EAAqBP,KAArB,GAA6BiB,IAAlC,EAAwCF,SAAxC;AACD,CAhBD","file":"OpenClose2.test.js","sourcesContent":["import React from 'react';\r\n\r\nimport test from 'ava';\r\nimport { shallow } from 'enzyme';\r\n\r\nimport OpenClose2 from '../../../../js/components/zhnAtoms/OpenClose2';\r\n\r\nconst _fnGetWrapper = (props) => {\r\n  return shallow(<OpenClose2 {...props} />);\r\n}\r\n\r\ntest('render root div with div `not-selected`, close by default', t=> {\r\n  const wrapper = _fnGetWrapper()\r\n\r\n  t.true(wrapper.is('div'))\r\n  t.false(wrapper.state('isOpen'))\r\n  t.true(wrapper.find('.not-selected').is('div'))\r\n})\r\n\r\ntest('should use prop isClose', t => {\r\n   const wrapper = _fnGetWrapper({ isClose: true })\r\n\r\n   t.false(wrapper.state('isOpen'))\r\n})\r\n\r\ntest('should use prop style for root styling', t => {\r\n  const style = { color: 'green '}\r\n      , wrapper = _fnGetWrapper({ style })\r\n\r\n  t.is(wrapper.props().style.color, style.color);\r\n})\r\n\r\ntest('should use prop caption for span text', t => {\r\n  const caption = \"caption\"\r\n      , wrapper = _fnGetWrapper({ caption })\r\n\r\n  t.is(wrapper.find('span').text(), caption)\r\n})\r\n\r\ntest('should use prop styleCaption for span styling', t => {\r\n  const styleCaption = { color: 'green '}\r\n      , wrapper = _fnGetWrapper({ styleCaption })\r\n\r\n  t.is(wrapper.find('span').props().style.color, styleCaption.color);\r\n})\r\n\r\n\r\ntest('should change isOpen state on click `div.not-selected` and use prop fillOpen, fillClose', t => {\r\n  const  fillOpen = 'green'\r\n       , fillClose = 'yellow'\r\n       , wrapper = _fnGetWrapper({ fillOpen, fillClose })\r\n       , div = wrapper.find('div.not-selected')\r\n\r\n  t.false(wrapper.state('isOpen'))\r\n  t.is(wrapper.find('path').props().fill, fillClose);\r\n\r\n  div.simulate('click')\r\n  t.true(wrapper.state('isOpen'))\r\n  t.is(wrapper.find('path').props().fill, fillOpen);\r\n\r\n  div.simulate('click')\r\n  t.false(wrapper.state('isOpen'))\r\n  t.is(wrapper.find('path').props().fill, fillClose);\r\n})\r\n"]}