{"version":3,"sources":["../../../../src/components/zhnAtoms/__tests__/CaptionRow.test.js"],"names":["_fnGetWrapper","props","wrapper","t","true","is","deepEqual","style","STYLE","ROOT","spanCaption","childAt","SPAN","caption","styleRoot","color","text","onCloseSpy","onClose","svgClose","find"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;AACA;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,WAAO,qBAAQ,8BAAC,oBAAD,EAAgBA,KAAhB,CAAR,CAAP;AACD,CAFD;;AAIA,mBAAK,iBAAL,EAAwB,aAAK;AAC1B,QAAMC,UAAUF,eAAhB;;AAEAG,MAAEC,IAAF,CAAOF,QAAQG,EAAR,CAAW,KAAX,CAAP;AACAF,MAAEG,SAAF,CAAYJ,QAAQD,KAAR,GAAgBM,KAA5B,EAAmCC,qBAAMC,IAAzC;AACA,QAAMC,cAAcR,QAAQS,OAAR,CAAgB,CAAhB,CAApB;AACAR,MAAEG,SAAF,CAAYI,YAAYT,KAAZ,GAAoBM,KAAhC,EAAuCC,qBAAMI,IAA7C;AACF,CAPD;;AASA,mBAAK,qCAAL,EAA4C,aAAK;AAC9C,QAAMC,UAAU,SAAhB;AAAA,QACMC,YAAY,EAAEC,OAAQ,OAAV,EADlB;AAAA,QAEMb,UAAUF,cAAc,EAAEa,gBAAF,EAAWC,oBAAX,EAAd,CAFhB;;AAIC,QAAMJ,cAAcR,QAAQS,OAAR,CAAgB,CAAhB,CAApB;AACAR,MAAEE,EAAF,CAAKK,YAAYM,IAAZ,EAAL,EAAyBH,OAAzB;AACAV,MAAEE,EAAF,CAAKH,QAAQD,KAAR,GAAgBM,KAAhB,CAAsBQ,KAA3B,EAAkCD,UAAUC,KAA5C;AACH,CARD;;AAUA,mBAAK,uCAAL,EAA8C,aAAK;AACjD,QAAME,aAAa,iBAAnB;AAAA,QACMf,UAAUF,cAAc,EAAEkB,SAASD,UAAX,EAAd,CADhB;;AAGE,QAAME,WAAWjB,QAAQkB,IAAR,CAAa,UAAb,CAAjB;AACAjB,MAAEE,EAAF,CAAKc,SAASlB,KAAT,GAAiBiB,OAAtB,EAA+BD,UAA/B;AACH,CAND","file":"CaptionRow.test.js","sourcesContent":["import React from 'react';\r\n\r\nimport test from 'ava';\r\nimport { shallow } from 'enzyme';\r\nimport { spy } from 'sinon';\r\n\r\nimport CaptionRow from '../../../../js/components/zhnAtoms/CaptionRow';\r\nimport STYLE from '../../../../js/components/zhnAtoms/CaptionRow.Style';\r\n\r\nconst _fnGetWrapper = (props) => {\r\n  return shallow(<CaptionRow {...props} />);\r\n}\r\n\r\ntest('render root div', t => {\r\n   const wrapper = _fnGetWrapper()\r\n\r\n   t.true(wrapper.is('div'))\r\n   t.deepEqual(wrapper.props().style, STYLE.ROOT)\r\n   const spanCaption = wrapper.childAt(0)\r\n   t.deepEqual(spanCaption.props().style, STYLE.SPAN)\r\n})\r\n\r\ntest('should use props caption, styleRoot', t => {\r\n   const caption = \"caption\"\r\n       , styleRoot = { color : \"green\"}\r\n       , wrapper = _fnGetWrapper({ caption, styleRoot })\r\n\r\n    const spanCaption = wrapper.childAt(0)\r\n    t.is(spanCaption.text(), caption)\r\n    t.is(wrapper.props().style.color, styleRoot.color)\r\n})\r\n\r\ntest('should pass prop onClose for SvgClose', t => {\r\n  const onCloseSpy = spy()\r\n      , wrapper = _fnGetWrapper({ onClose: onCloseSpy })\r\n\r\n    const svgClose = wrapper.find('SvgClose')\r\n    t.is(svgClose.props().onClose, onCloseSpy)\r\n})\r\n"]}