{"version":3,"sources":["../../../src/components/zhnAtoms/InputText.jsx"],"names":["CL","FIELD","INPUT","BT_CLEAR","IS_TOUCH","document","documentElement","_isKeyClean","keyCode","_isKeyEnter","BtClear","isValue","onClick","InputText","props","_hChange","event","setState","value","target","_hKeyDown","onEnter","_hClean","state","initValue","nextProps","style","placeholder","maxLength","Boolean","trim","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA;;AAEA,IAAMA,KAAK;AACTC,SAAO,SADE;AAETC,SAAQ,gBAFC;AAGTC,YAAU;AAHD,CAAX;;AAMA,IAAMC,WAAWC,YAChB,kBAAkBA,SAASC,eAD5B;;AAGA,IAAMC,cAAc,SAAdA,WAAc;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SAAiBA,YAAY,EAAZ,IACjCA,YAAY,EADI;AAAA,CAApB;AAEA,IAAMC,cAAc,SAAdA,WAAc;AAAA,MAAGD,OAAH,SAAGA,OAAH;AAAA,SAAiBA,YAAY,EAA7B;AAAA,CAApB;;AAEA,IAAME,UAAU,SAAVA,OAAU;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,MAAYC,OAAZ,SAAYA,OAAZ;AAAA,SACd;AAAA;AAAA;AACE,eAAOZ,GAAGG,QADZ;AAEE,gBAAS,IAFX;AAGE,eAASS;AAHX;AAKID,cAAU,GAAV,GAAgB;AALpB,GADc;AAAA,CAAhB;;IAUME,S;;;AAaJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAelBC,QAfkB,GAeP,UAACC,KAAD,EAAW;AACpB,YAAKC,QAAL,CAAc,EAAEC,OAAOF,MAAMG,MAAN,CAAaD,KAAtB,EAAd;AACD,KAjBiB;;AAAA,UAmBlBE,SAnBkB,GAmBN,UAACJ,KAAD,EAAW;AACpB,UAAKT,YAAYS,KAAZ,CAAL,EAAyB;AACvB,cAAKC,QAAL,CAAc,EAAEC,OAAO,EAAT,EAAd;AACD,OAFD,MAEO,IAAKT,YAAYO,KAAZ,CAAL,EAA0B;AAC/B,cAAKF,KAAL,CAAWO,OAAX,CAAmBL,MAAMG,MAAN,CAAaD,KAAhC;AACD;AACH,KAzBiB;;AAAA,UA2BlBI,OA3BkB,GA2BR,YAAM;AACd,YAAKL,QAAL,CAAc,EAAEC,OAAO,EAAT,EAAd;AACD,KA7BiB;;AAEhB,UAAKK,KAAL,GAAa;AACXL,aAAOJ,MAAMU;AADF,KAAb;AAFgB;AAKjB;AAjBD;;;;;;;;;;8CAmB0BC,S,EAAU;AAClC,UAAKA,cAAc,KAAKX,KAAnB,IACA,OAAOW,UAAUD,SAAjB,KAA+B,WADpC,EAEA;AACE,aAAKP,QAAL,CAAc,EAAEC,OAAOO,UAAUD,SAAnB,EAAd;AACD;AACF;;;6BAkBO;AAAA,mBAIF,KAAKV,KAJH;AAAA,UAEJY,KAFI,UAEJA,KAFI;AAAA,sCAEGC,WAFH;AAAA,UAEGA,WAFH,sCAEe,EAFf;AAAA,UAGJC,SAHI,UAGJA,SAHI;AAAA,UAKFV,KALE,GAKQ,KAAKK,KALb,CAKFL,KALE;;AAMN,aACE;AAAA;AAAA,UAAK,SAAOlB,GAAGC,KAAf;AACE;AACE,gBAAK,MADP;AAEE,uBAAY,KAFd;AAGE,0BAAe,KAHjB;AAIE,sBAAY,KAJd;AAKE,mBAAOD,GAAGE,KALZ;AAME,iBAAOwB,KANT;AAOE,iBAAOR,KAPT;AAQE,uBAAaS,WARf;AASE,qBAAWC,SATb;AAUE,oBAAU,KAAKb,QAVjB;AAWE,qBAAW,KAAKK;AAXlB,UADF;AAeIhB,oBAAY,8BAAC,OAAD;AACV,mBAASyB,QAAQX,KAAR,CADC;AAEV,mBAAS,KAAKI;AAFJ;AAfhB,OADF;AAuBD;;;+BAES;AACR,aAAO,KAAKC,KAAL,CAAWL,KAAX,CAAiBY,IAAjB,EAAP;AACD;;;6BACQZ,K,EAAM;AACb,WAAKD,QAAL,CAAc,EAAEC,YAAF,EAAd;AACD;;;EAhFqBa,gB,UAOfC,Y,GAAe;AACpBR,aAAW,EADS;AAEpBI,aAAW,EAFS;AAGpBP,WAAS,mBAAM,CAAE;AAHG,C;kBA6ETR,S","file":"InputText.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst CL = {\r\n  FIELD: 'm-field',\r\n  INPUT:  'm-field__input',\r\n  BT_CLEAR: 'm-field__bt-clear'\r\n};\r\n\r\nconst IS_TOUCH = document &&\r\n 'ontouchstart' in document.documentElement;\r\n\r\nconst _isKeyClean = ({ keyCode }) => keyCode === 27\r\n || keyCode === 46;\r\nconst _isKeyEnter = ({ keyCode }) => keyCode === 13;\r\n\r\nconst BtClear = ({ isValue, onClick }) => (\r\n  <button\r\n    class={CL.BT_CLEAR}\r\n    tabIndex=\"-1\"\r\n    onClick={onClick}\r\n  >\r\n    { isValue ? 'x' : '' }\r\n  </button>\r\n);\r\n\r\nclass InputText extends Component {\r\n  /*\r\n  static propTypes = {\r\n    initValue : PropTypes.string,\r\n    style : PropTypes.object\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    initValue: '',\r\n    maxLength: 50,\r\n    onEnter: () => {}\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      value: props.initValue\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if ( nextProps !== this.props &&\r\n         typeof nextProps.initValue !== \"undefined\")\r\n    {\r\n      this.setState({ value: nextProps.initValue });\r\n    }\r\n  }\r\n\r\n  _hChange = (event) => {\r\n    this.setState({ value: event.target.value })\r\n  }\r\n\r\n  _hKeyDown = (event) => {     \r\n     if ( _isKeyClean(event) ){\r\n       this.setState({ value: '' })\r\n     } else if ( _isKeyEnter(event) ) {\r\n       this.props.onEnter(event.target.value)\r\n     }\r\n  }\r\n\r\n  _hClean = () => {\r\n    this.setState({ value: '' })\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      style, placeholder='',\r\n      maxLength\r\n    } = this.props\r\n    , { value } = this.state;\r\n    return (\r\n      <div class={CL.FIELD}>\r\n        <input\r\n          type=\"text\"\r\n          autoCorrect=\"off\"\r\n          autoCapitalize=\"off\"\r\n          spellCheck={false}\r\n          class={CL.INPUT}\r\n          style={style}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          maxLength={maxLength}\r\n          onChange={this._hChange}\r\n          onKeyDown={this._hKeyDown}\r\n        />\r\n        {\r\n          IS_TOUCH && <BtClear\r\n            isValue={Boolean(value)}\r\n            onClick={this._hClean}\r\n          />\r\n        }\r\n     </div>\r\n   );\r\n  }\r\n\r\n  getValue(){\r\n    return this.state.value.trim();\r\n  }\r\n  setValue(value){\r\n    this.setState({ value });\r\n  }\r\n}\r\n\r\n\r\nexport default InputText\r\n"]}