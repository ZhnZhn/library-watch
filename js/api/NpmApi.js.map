{"version":3,"sources":["../../src/api/NpmApi.js"],"names":["BASE","REQUEST_PACKAGE","_rRequestTypeToUrl","NPM_RECENT_VERSION","option","repo","NPM_DOWNLOADS_RECENT_MONTH","NPM_DOWNLOADS","fromDate","toDate","NpmApi","getRequestUrl","fnFactory","requestType","getOnCheckResponse","checkResponse","json","error","errCaption","message","setFirstToUpperCase"],"mappings":";;;;;;AACA;;;;;;AAEA,IAAMA,OAAO,uBAAb;AACA,IAAMC,kBAAkB,iBAAxB;;AAEA;;AAEA,IAAMC,qBAAqB;AACzBC,sBAAqB,4BAACC,MAAD,EAAY;AAC/B,qDAA+CA,OAAOC,IAAtD;AACD,GAHwB;;AAKzBC,8BAA6B,oCAACF,MAAD,EAAY;AACvC,WAAUJ,IAAV,oCAA6CI,OAAOC,IAApD;AACD,GAPwB;AAQzBE,iBAAgB,uBAACH,MAAD,EAAY;AAAA,QAClBI,QADkB,GACSJ,MADT,CAClBI,QADkB;AAAA,QACRC,MADQ,GACSL,MADT,CACRK,MADQ;AAAA,QACAJ,IADA,GACSD,MADT,CACAC,IADA;;AAE1B,WAAUL,IAAV,yBAAkCQ,QAAlC,SAA8CC,MAA9C,SAAwDJ,IAAxD;AACD;AAXwB,CAA3B;;AAcA,IAAMK,SAAS;AACZC,eADY,yBACEP,MADF,EACS;AACnB,QAAMQ,YAAYV,mBAAmBE,OAAOS,WAA1B,CAAlB;AACA,WAAOD,UAAUR,MAAV,CAAP;AACD,GAJW;AAKZU,oBALY,gCAKQ;AAClB,WAAO,KAAKC,aAAZ;AACD,GAPW;AASZA,eATY,2BASkB;AAAA,QAAhBC,IAAgB,uEAAX,EAAW;AAAA,QAAPZ,MAAO;AAAA,QACnBa,KADmB,GACTD,IADS,CACnBC,KADmB;;AAE3B,QAAIA,KAAJ,EAAU;AACR,YAAM;AACHC,oBAAajB,eADV;AAEHkB,iBAAU,qBAAWC,mBAAX,CAA+BH,KAA/B;AAFP,OAAN;AAID;AACD,WAAO,IAAP;AACF;AAlBW,CAAf;;kBAqBeP,M","file":"NpmApi.js","sourcesContent":["\r\nimport StringUtil from '../utils/StringUtil';\r\n\r\nconst BASE = 'https://api.npmjs.org';\r\nconst REQUEST_PACKAGE = 'Request Package';\r\n\r\n//https://api.npmjs.org/downloads/range/last-month\r\n\r\nconst _rRequestTypeToUrl = {\r\n  NPM_RECENT_VERSION : (option) => {\r\n    return `https://registry.npmjs.org/-/package/${option.repo}/dist-tags`;\r\n  },\r\n\r\n  NPM_DOWNLOADS_RECENT_MONTH : (option) => {\r\n    return `${BASE}/downloads/range/last-month/${option.repo}`;\r\n  },\r\n  NPM_DOWNLOADS : (option) => {\r\n    const { fromDate, toDate, repo } = option\r\n    return `${BASE}/downloads/range/${fromDate}:${toDate}/${repo}`;\r\n  }\r\n}\r\n\r\nconst NpmApi = {\r\n   getRequestUrl(option){\r\n     const fnFactory = _rRequestTypeToUrl[option.requestType]\r\n     return fnFactory(option);\r\n   },\r\n   getOnCheckResponse(){\r\n     return this.checkResponse\r\n   },\r\n\r\n   checkResponse(json={}, option){\r\n      const { error } = json\r\n      if (error){\r\n        throw {\r\n           errCaption : REQUEST_PACKAGE,\r\n           message : StringUtil.setFirstToUpperCase(error)\r\n         }\r\n      }\r\n      return true;\r\n   }\r\n};\r\n\r\nexport default NpmApi\r\n"]}