{"version":3,"file":"NpmApi.js","names":["_strFn","require","_apiFn","API_URL","NPM","NPM_PACKAGE","REQUEST_PACKAGE","_crPackageLink","name","_addPackageLinkTo","option","repo","packageLink","_crVersionPackage","replace","_rRequestTypeToUrl","NPM_RECENT_VERSION","NPM_DOWNLOADS_RECENT_MONTH","NPM_DOWNLOADS","fromDate","toDate","NPM_TOP_VERSIONS","NpmApi","getRequestUrl","fGetRequestUrl","crKey","_ref","requestType","checkResponse","json","error","crErrMsg","setFirstToUpperCase","_default","exports","default"],"sources":["../../src/api/NpmApi.js"],"sourcesContent":["import { setFirstToUpperCase } from '../utils/strFn';\r\nimport {\r\n  fGetRequestUrl,\r\n  crErrMsg\r\n} from './apiFn';\r\n\r\nconst API_URL = 'https://api.npmjs.org';\r\nconst NPM = 'https://www.npmjs.com';\r\nconst NPM_PACKAGE = `${NPM}/package/`;\r\nconst REQUEST_PACKAGE = 'Request Package';\r\n\r\nconst _crPackageLink = name => name\r\n  ? `${NPM_PACKAGE}${name}`\r\n  : NPM;\r\n\r\nconst _addPackageLinkTo = (option) => {\r\n  const { repo } = option;\r\n  option.packageLink = _crPackageLink(repo);\r\n};\r\n\r\nconst _crVersionPackage = repo => repo.replace('/', '%2F')\r\nconst _rRequestTypeToUrl = {\r\n  NPM_RECENT_VERSION : (option) => {\r\n    return `https://registry.npmjs.org/-/package/${option.repo}/dist-tags`;\r\n  },\r\n\r\n  NPM_DOWNLOADS_RECENT_MONTH : (option) => {\r\n    _addPackageLinkTo(option);\r\n    return `${API_URL}/downloads/range/last-month/${option.repo}`;\r\n  },\r\n  NPM_DOWNLOADS : (option) => {\r\n    const { fromDate, toDate, repo } = option;\r\n    _addPackageLinkTo(option)\r\n    return `${API_URL}/downloads/range/${fromDate}:${toDate}/${repo}`;\r\n  },\r\n  NPM_TOP_VERSIONS: (option) => {\r\n    _addPackageLinkTo(option);\r\n    return `${API_URL}/versions/${_crVersionPackage(option.repo)}/last-week`;\r\n  }\r\n}\r\n\r\nconst NpmApi = {\r\n   getRequestUrl: fGetRequestUrl(_rRequestTypeToUrl),\r\n   \r\n   crKey({repo, requestType, fromDate=''}){\r\n     return `${repo}_${requestType}_${fromDate}`;\r\n   },\r\n\r\n   checkResponse(json, option){\r\n      const { error } = json || {};\r\n      if (error) {\r\n        throw crErrMsg(\r\n          REQUEST_PACKAGE,\r\n          setFirstToUpperCase(error)\r\n        );\r\n      }\r\n      return true;\r\n   }\r\n};\r\n\r\nexport default NpmApi\r\n"],"mappings":";;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAKA,MAAME,OAAO,GAAG,uBAAuB;AACvC,MAAMC,GAAG,GAAG,uBAAuB;AACnC,MAAMC,WAAW,GAAG,GAAGD,GAAG,WAAW;AACrC,MAAME,eAAe,GAAG,iBAAiB;AAEzC,MAAMC,cAAc,GAAGC,IAAI,IAAIA,IAAI,GAC/B,GAAGH,WAAW,GAAGG,IAAI,EAAE,GACvBJ,GAAG;AAEP,MAAMK,iBAAiB,GAAIC,MAAM,IAAK;EACpC,MAAM;IAAEC;EAAK,CAAC,GAAGD,MAAM;EACvBA,MAAM,CAACE,WAAW,GAAGL,cAAc,CAACI,IAAI,CAAC;AAC3C,CAAC;AAED,MAAME,iBAAiB,GAAGF,IAAI,IAAIA,IAAI,CAACG,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC;AAC1D,MAAMC,kBAAkB,GAAG;EACzBC,kBAAkB,EAAIN,MAAM,IAAK;IAC/B,OAAO,wCAAwCA,MAAM,CAACC,IAAI,YAAY;EACxE,CAAC;EAEDM,0BAA0B,EAAIP,MAAM,IAAK;IACvCD,iBAAiB,CAACC,MAAM,CAAC;IACzB,OAAO,GAAGP,OAAO,+BAA+BO,MAAM,CAACC,IAAI,EAAE;EAC/D,CAAC;EACDO,aAAa,EAAIR,MAAM,IAAK;IAC1B,MAAM;MAAES,QAAQ;MAAEC,MAAM;MAAET;IAAK,CAAC,GAAGD,MAAM;IACzCD,iBAAiB,CAACC,MAAM,CAAC;IACzB,OAAO,GAAGP,OAAO,oBAAoBgB,QAAQ,IAAIC,MAAM,IAAIT,IAAI,EAAE;EACnE,CAAC;EACDU,gBAAgB,EAAGX,MAAM,IAAK;IAC5BD,iBAAiB,CAACC,MAAM,CAAC;IACzB,OAAO,GAAGP,OAAO,aAAaU,iBAAiB,CAACH,MAAM,CAACC,IAAI,CAAC,YAAY;EAC1E;AACF,CAAC;AAED,MAAMW,MAAM,GAAG;EACZC,aAAa,EAAE,IAAAC,qBAAc,EAACT,kBAAkB,CAAC;EAEjDU,KAAKA,CAAAC,IAAA,EAAkC;IAAA,IAAjC;MAACf,IAAI;MAAEgB,WAAW;MAAER,QAAQ,GAAC;IAAE,CAAC,GAAAO,IAAA;IACpC,OAAO,GAAGf,IAAI,IAAIgB,WAAW,IAAIR,QAAQ,EAAE;EAC7C,CAAC;EAEDS,aAAaA,CAACC,IAAI,EAAEnB,MAAM,EAAC;IACxB,MAAM;MAAEoB;IAAM,CAAC,GAAGD,IAAI,IAAI,CAAC,CAAC;IAC5B,IAAIC,KAAK,EAAE;MACT,MAAM,IAAAC,eAAQ,EACZzB,eAAe,EACf,IAAA0B,0BAAmB,EAACF,KAAK,CAC3B,CAAC;IACH;IACA,OAAO,IAAI;EACd;AACH,CAAC;AAAC,IAAAG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEab,MAAM","ignoreList":[]}