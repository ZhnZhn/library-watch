{"version":3,"file":"isTypeFn.test.js","names":["_isTypeFn","require","describe","fn","isNumber","test","expect","toBe","NaN","isNaN","isArr","isRegularObj","isStr","String","isFn","isNotEmptyStr"],"sources":["../../../src/utils/__tests__/isTypeFn.test.js"],"sourcesContent":["import {\r\n  isNumber,\r\n  isNaN,\r\n  isArr,\r\n  isRegularObj,\r\n  isStr,\r\n  isFn,\r\n  isNotEmptyStr\r\n} from '../isTypeFn';\r\n\r\ndescribe('isNumber',()=>{\r\n  const fn = isNumber;\r\n  test('should return boolean is value type number',()=>{\r\n    expect(fn(0.1+0.2)).toBe(true)\r\n\r\n    expect(fn(NaN)).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn('str')).toBe(false)\r\n    expect(fn(true)).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n    expect(fn([])).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isNaN',()=>{\r\n  const fn = isNaN;\r\n  test('should return boolean is value NaN',()=>{\r\n    expect(fn(NaN)).toBe(true)\r\n\r\n    expect(fn(0.1)).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn('str')).toBe(false)\r\n    expect(fn(true)).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n    expect(fn([])).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isArr',()=>{\r\n  const fn = isArr;\r\n  test('should return boolean is value type array',()=>{\r\n    expect(fn([])).toBe(true)\r\n\r\n    expect(fn(1)).toBe(false)\r\n    expect(fn(NaN)).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn('str')).toBe(false)\r\n    expect(fn(true)).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isRegularObj',()=>{\r\n  const fn = isRegularObj;\r\n  test('should return boolean is value type regular object',()=>{\r\n    expect(fn({})).toBe(true)\r\n\r\n    expect(fn(1)).toBe(false)\r\n    expect(fn(NaN)).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn('str')).toBe(false)\r\n    expect(fn(true)).toBe(false)\r\n    expect(fn([])).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isNotEmptyStr',()=>{\r\n  const fn = isStr;\r\n  test('shoult return true only for string type', ()=>{\r\n    expect(fn('str')).toBe(true)\r\n    expect(fn('')).toBe(true)\r\n\r\n    expect(fn(new String())).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn(0)).toBe(false)\r\n    expect(fn(true)).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe(\"isFn\", ()=>{\r\n  const fn = isFn;\r\n  test('should return true for function value otherwise flase', ()=>{\r\n    expect(fn(fn)).toBe(true)\r\n    expect(fn(()=>{})).toBe(true)\r\n\r\n    expect(fn()).toBe(false)\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n    expect(fn('')).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('isNotEmptyStr',()=>{\r\n  const fn = isNotEmptyStr;\r\n  test('shoult return true only for not empty string parameter', ()=>{\r\n    expect(fn('a')).toBe(true)\r\n    expect(fn(' ')).toBe(true)\r\n\r\n    expect(fn('')).toBe(false)\r\n    expect(fn()).toBe(false)\r\n    expect(fn(null)).toBe(false)\r\n    expect(fn(0)).toBe(false)\r\n    expect(fn(true)).toBe(false)\r\n    expect(fn({})).toBe(false)\r\n    expect(fn(()=>{})).toBe(false)\r\n  })\r\n})\r\n"],"mappings":"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","ignoreList":[]}