{"version":3,"file":"dateFn.test.js","names":["_dateFn","require","_dateFnWithMock","_interopRequireDefault","MIN_YEAR","describe","fn","isYmd","test","expect","toBe","undefined","mlsToDmy","EMPTY","NaN","Number","MAX_SAFE_INTEGER","mlsToYmd","ymdToMlsUTC","ymdToUTCSecond","isWeekend","dateFnWithMock"],"sources":["../../../src/utils/__tests__/dateFn.test.js"],"sourcesContent":["import {\r\n  isYmd,\r\n  mlsToDmy,\r\n  mlsToYmd,\r\n  ymdToMlsUTC,\r\n  ymdToUTCSecond,\r\n  isWeekend\r\n} from '../dateFn';\r\n\r\nimport dateFnWithMock from './dateFnWithMock';\r\n\r\nconst MIN_YEAR = 1999;\r\n\r\ndescribe('isYmd',()=>{\r\n  const fn = isYmd;\r\n  test('should return true for valid YYYY-MM-DD', ()=> {\r\n    expect(fn(\"2010-01-10\")).toBe(true)\r\n    expect(fn(\"2010-10-01\")).toBe(true)\r\n  })\r\n  test('should return false for not valid YYYY-MM-DD', ()=> {\r\n    expect(fn(\"2010-14-01\")).toBe(false)\r\n    expect(fn(\"2010-02-32\")).toBe(false)\r\n  })\r\n  test(`min default valid value is ${MIN_YEAR}-01-01`, () => {\r\n    expect(fn(`${MIN_YEAR}-01-01`)).toBe(true)\r\n    expect(fn('1989-12-30')).toBe(false)\r\n  })\r\n  test('min default valid can be configured', () => {\r\n    expect(fn('1989-12-30', 0, 1989)).toBe(true)\r\n  })\r\n  test('should year be not future', () => {\r\n    expect(fn('2030-01-01')).toBe(false)\r\n\r\n    expect(fn('2030-01-01', 1)).toBe(false)\r\n    expect(fn('2030-01-01', 2)).toBe(false)\r\n    expect(fn('2030-01-01', 3)).toBe(false)\r\n    expect(fn('2030-01-01', 20)).toBe(true)\r\n  })\r\n  test('should return false in edge case', () => {\r\n     expect(fn('')).toBe(false)\r\n     expect(fn([])).toBe(false)\r\n     expect(fn(null)).toBe(false)\r\n     expect(fn(undefined)).toBe(false)\r\n  })\r\n})\r\n\r\ndescribe('mlsToDmy',()=>{\r\n  const fn = mlsToDmy;\r\n  const EMPTY = '';\r\n  test('should format mlsUTC to DD-MM-YYYY string format',()=>{\r\n    expect(fn(1514764800000)).toBe('01-01-2018')\r\n    expect(fn(1515542400000)).toBe('10-01-2018')\r\n    expect(fn(1538352000000)).toBe('01-10-2018')\r\n  })\r\n  test('should format to empty string in edge case', ()=>{\r\n    expect(fn(null)).toBe(EMPTY)\r\n    expect(fn(undefined)).toBe(EMPTY)\r\n    expect(fn({})).toBe(EMPTY)\r\n    expect(fn(NaN)).toBe(EMPTY)\r\n    expect(fn('')).toBe(EMPTY)\r\n    expect(fn('abc')).toBe(EMPTY)\r\n    expect(fn(()=>{})).toBe(EMPTY)\r\n    expect(fn(Number.MAX_SAFE_INTEGER)).toBe(EMPTY)\r\n  })\r\n})\r\n\r\ndescribe('mlsToYmd',()=>{\r\n  const fn = mlsToYmd;\r\n  const EMPTY = '';\r\n  test('should format mlsUTC to YYYY-MM-DD string format',()=>{\r\n    expect(fn(1514764800000)).toBe('2018-01-01')\r\n    expect(fn(1515542400000)).toBe('2018-01-10')\r\n    expect(fn(1538352000000)).toBe('2018-10-01')\r\n  })\r\n  test('should format to empty string in edge case', ()=>{\r\n    expect(fn(null)).toBe(EMPTY)\r\n    expect(fn(undefined)).toBe(EMPTY)\r\n    expect(fn({})).toBe(EMPTY)\r\n    expect(fn(NaN)).toBe(EMPTY)\r\n    expect(fn('')).toBe(EMPTY)\r\n    expect(fn('abc')).toBe(EMPTY)\r\n    expect(fn(()=>{})).toBe(EMPTY)\r\n    expect(fn(Number.MAX_SAFE_INTEGER)).toBe(EMPTY)\r\n  })\r\n})\r\n\r\ndescribe('ymdToMlsUTC',()=>{\r\n  const fn = ymdToMlsUTC;\r\n  test('should return mlsUTC from YYYY-MM-DD string',()=>{\r\n    expect(fn('2018-01-01')).toBe(1514764800000)\r\n    expect(fn('2018-01-10')).toBe(1515542400000)\r\n    expect(fn('2018-10-01')).toBe(1538352000000)\r\n  })\r\n  test('should return NaN in edge cases',()=>{\r\n    expect(fn('')).toBe(NaN)\r\n    expect(fn('abc')).toBe(NaN)\r\n    expect(fn()).toBe(NaN)\r\n    expect(fn(void 0)).toBe(NaN)\r\n    expect(fn(1)).toBe(NaN)\r\n    expect(fn([])).toBe(NaN)\r\n    expect(fn({})).toBe(NaN)\r\n  })\r\n})\r\n\r\ndescribe('ymdToUTCSecond',()=>{\r\n  const fn = ymdToUTCSecond;\r\n  test('should return secondsUTC from YYYY-MM-DD string',()=>{\r\n    expect(fn('2018-01-01')).toBe(1514764800)\r\n    expect(fn('2018-01-10')).toBe(1515542400)\r\n    expect(fn('2018-10-01')).toBe(1538352000)\r\n  })\r\n  test('should return NaN in edge cases',()=>{\r\n    expect(fn('')).toBe(NaN)\r\n    expect(fn('abc')).toBe(NaN)\r\n    expect(fn()).toBe(NaN)\r\n    expect(fn(void 0)).toBe(NaN)\r\n    expect(fn(1)).toBe(NaN)\r\n    expect(fn([])).toBe(NaN)\r\n    expect(fn({})).toBe(NaN)\r\n  })\r\n})\r\n\r\ndescribe('isWeekend',()=>{\r\n  const fn = isWeekend;\r\n  test('should return boolean is y,m,d is weekend',()=>{\r\n    expect(fn(2018,10,6)).toBe(true)\r\n    expect(fn('2018',10,7)).toBe(true)\r\n    expect(fn(2018,10,'8')).toBe(false)\r\n    expect(fn(2018,'10',9)).toBe(false)\r\n    expect(fn(2018,10,10)).toBe(false)\r\n    expect(fn(2018,10,11)).toBe(false)\r\n    expect(fn(2018,10,12)).toBe(false)\r\n  })\r\n  test('should return false in edge cases',()=>{\r\n    expect(fn()).toBe(false)\r\n    expect(fn('abc','efg',{})).toBe(false)\r\n    expect(fn(null,null,null)).toBe(false)\r\n  })\r\n})\r\n\r\ndateFnWithMock()\r\n"],"mappings":"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","ignoreList":[]}