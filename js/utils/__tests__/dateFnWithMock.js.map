{"version":3,"file":"dateFnWithMock.js","names":["_dateFn","require","_mockDateBeforeAll","_interopRequireDefault","describe","test","expect","toBe","dateFnWithMock","mockDateBeforeAll","getToDate","fn","getFromDate","_default","exports","default"],"sources":["../../../src/utils/__tests__/dateFnWithMock.js"],"sourcesContent":["import {\r\n  getFromDate,\r\n  getToDate\r\n} from '../dateFn';\r\n\r\nimport mockDateBeforeAll from './mockDateBeforeAll'\r\n\r\ndescribe('dateFnWithMock', ()=>{\r\n  test('', ()=>expect('').toBe(''))\r\n})\r\n\r\nconst dateFnWithMock = () => {\r\n  describe('getFromDate', ()=>{\r\n    //2020-01-01 12:00:01\r\n    mockDateBeforeAll(2020,0,1,12,0,1)\r\n\r\n    test('getToDate should return current Date as YYYY-MM-DD', () => {\r\n      expect(getToDate()).toBe('2020-01-01')\r\n    })\r\n\r\n    const fn = getFromDate;\r\n    test('should return str in format YYYY-MM-DD minusYear', ()=> {\r\n      expect(fn(2)).toBe('2018-01-01')\r\n      expect(fn(void 0)).toBe('2018-01-01')\r\n      expect(fn(20)).toBe('2000-01-01')\r\n    })\r\n  })\r\n}\r\n\r\nexport default dateFnWithMock\r\n"],"mappings":";;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAKA,IAAAC,kBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEAG,QAAQ,CAAC,gBAAgB,EAAE,MAAI;EAC7BC,IAAI,CAAC,EAAE,EAAE,MAAIC,MAAM,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;AACnC,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3BJ,QAAQ,CAAC,aAAa,EAAE,MAAI;IAC1B;IACA,IAAAK,0BAAiB,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,CAAC;IAElCJ,IAAI,CAAC,oDAAoD,EAAE,MAAM;MAC/DC,MAAM,CAAC,IAAAI,iBAAS,EAAC,CAAC,CAAC,CAACH,IAAI,CAAC,YAAY,CAAC;IACxC,CAAC,CAAC;IAEF,MAAMI,EAAE,GAAGC,mBAAW;IACtBP,IAAI,CAAC,kDAAkD,EAAE,MAAK;MAC5DC,MAAM,CAACK,EAAE,CAAC,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,YAAY,CAAC;MAChCD,MAAM,CAACK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,YAAY,CAAC;MACrCD,MAAM,CAACK,EAAE,CAAC,EAAE,CAAC,CAAC,CAACJ,IAAI,CAAC,YAAY,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAAA,IAAAM,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcP,cAAc","ignoreList":[]}