{"version":3,"sources":["../../src/utils/DateUtils.js"],"names":["DateUtils","isValidDate","str","trim","length","m","match","size","thisYear","Date","getFullYear","minYear","isValidDateOrEmpty","getFromDate","yearMinus","dateNow","yearTo","getUTCFullYear","monthTo","getUTCMonth","dayTo","getUTCDate","getToDate","formatTo","millisUTC","d","slice","formatToYYYYMMDD","toUTCMillis","strDate","arr","split","UTC","parseInt","isWeekend","year","month","day","date","weekday","getUTCDay"],"mappings":"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","sourcesContent":["\r\nconst DateUtils = {\r\n\r\nisValidDate(str){\r\n\t // STRING FORMAT yyyy-mm-dd\r\n\t if (!str) { return false; }\r\n\r\n\t if (str.trim().length !== 10) { return false; }\r\n\r\n\t // m[1] is year 'YYYY' * m[2] is month 'MM' * m[3] is day 'DD'\r\n\t let m = str.match(/(\\d{4})-(\\d{2})-(\\d{2})/);\r\n\r\n\t // STR IS NOT FIT m IS NOT OBJECT\r\n\t if( m === null || typeof m !== 'object') { return false; }\r\n\r\n\t // CHECK m TYPE\r\n\t if (typeof m !== 'object' && m !== null && m.size!==3) { return false; }\r\n\r\n\t let thisYear = new Date().getFullYear();\r\n\t let minYear = 1999;\r\n\r\n\t// YEAR CHECK\r\n\t if( (m[1].length < 4) || m[1] < minYear || m[1] > thisYear) { return false; }\r\n\t// MONTH CHECK\r\n\t if( (m[2].length < 2) || m[2] < 1 || m[2] > 12) { return false;}\r\n\t// DAY CHECK\r\n\t if( (m[3].length < 2) || m[3] < 1 || m[3] > 31) { return false;}\r\n\r\n\t return true;\r\n},\r\n\r\nisValidDateOrEmpty(str){\r\n\tif ( str === '') {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn DateUtils.isValidDate(str);\r\n\t}\r\n},\r\n\r\ngetFromDate(yearMinus){\r\n\tconst dateNow = new Date()\r\n\t    , yearTo = dateNow.getUTCFullYear();\r\n\r\n\tlet monthTo = dateNow.getUTCMonth() + 1;\r\n\tif ( monthTo<10 ){\r\n\t\tmonthTo = \"0\" + monthTo;\r\n\t}\r\n\r\n\tlet dayTo = dateNow.getUTCDate();\r\n\tif ( dayTo<10 ){\r\n\t\tdayTo = \"0\" + dayTo;\r\n\t}\r\n\r\n\treturn (yearTo-yearMinus) + \"-\" + monthTo + \"-\" + dayTo;\r\n},\r\n\r\ngetToDate(){\r\n\tconst dateNow = new Date()\r\n\t    , yearTo = dateNow.getUTCFullYear();\r\n\r\n\tlet monthTo = dateNow.getUTCMonth() + 1;\r\n\tif ( monthTo<10 ){\r\n\t\tmonthTo = \"0\" + monthTo;\r\n\t}\r\n\r\n\tlet dayTo = dateNow.getUTCDate();\r\n\tif ( dayTo<10 ){\r\n\t\tdayTo = \"0\" + dayTo;\r\n\t}\r\n\r\n\treturn yearTo + \"-\" + monthTo + \"-\" + dayTo;\r\n},\r\n\r\nformatTo(millisUTC){\r\n  const d = new Date(millisUTC);\r\n  return (\"0\" + d.getUTCDate()).slice(-2)\r\n         + \"-\" + (\"0\" + (d.getUTCMonth() + 1) ).slice(-2)\r\n         + \"-\" + d.getUTCFullYear() ;\r\n},\r\n\r\nformatToYYYYMMDD(millisUTC){\r\n\tconst d = new Date(millisUTC);\r\n\treturn d.getUTCFullYear()\r\n\t     + (\"0\" + (d.getUTCMonth() + 1) ).slice(-2)\r\n\t\t\t + (\"0\" + d.getUTCDate()).slice(-2);\r\n},\r\n\r\ntoUTCMillis(strDate){\r\n  const arr = strDate.split('-')\r\n  return Date.UTC(arr[0], parseInt(arr[1],10)-1, arr[2]);\r\n},\r\n\r\n/* 1970-01-01 */\r\nisWeekend(year, month, day){\r\n\tconst date = new Date(Date.UTC(parseInt(year+'', 10), (parseInt(month+'',10))-1, parseInt(day+'',10)))\r\n      , weekday = date.getUTCDay() ;\r\n\r\n\tif (weekday === 0 || weekday === 6){\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n}\r\n\r\nexport default DateUtils\r\n"],"file":"DateUtils.js"}