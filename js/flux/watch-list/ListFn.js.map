{"version":3,"file":"ListFn.js","names":["_Fn","require","addList","watchList","_ref","captionGroup","captionList","groupTo","findGroup","fResultNotFound","lists","checkIsInArraySameCaption","fResultListExisted","getArrayWithObj","caption","isDone","exports","renameList","_ref2","captionListFrom","captionListTo","groupIn","listIndex","findIndex","getArrayWithRename","deleteList","_ref3","groupFrom","filter"],"sources":["../../../src/flux/watch-list/ListFn.js"],"sourcesContent":["import {\r\n  filter,\r\n  findGroup,\r\n  findIndex,\r\n  checkIsInArraySameCaption,\r\n  getArrayWithObj,\r\n  getArrayWithRename,\r\n  fResultListExisted,\r\n  fResultNotFound\r\n} from './Fn';\r\n\r\nexport const addList = (\r\n  watchList,\r\n  {captionGroup, captionList}\r\n) => {\r\n  const groupTo = findGroup(watchList, captionGroup);\r\n\r\n  if (!groupTo){\r\n    return fResultNotFound('group', captionGroup);\r\n  }\r\n  const { lists } = groupTo;\r\n  if (checkIsInArraySameCaption(lists, captionList)){\r\n    return fResultListExisted(captionList, captionGroup);\r\n  }\r\n\r\n  groupTo.lists = getArrayWithObj(lists, {caption: captionList});\r\n  return { isDone: true };\r\n}\r\n\r\nexport const renameList = (\r\n  watchList,\r\n  {captionGroup, captionListFrom, captionListTo}\r\n) => {\r\n  const groupIn = findGroup(watchList, captionGroup);\r\n\r\n  if (!groupIn){\r\n    return fResultNotFound('group', captionGroup);\r\n  }\r\n  const { lists } = groupIn;\r\n  const listIndex = findIndex(lists, captionListFrom);\r\n  if (listIndex === -1){\r\n    return fResultNotFound('list', captionListFrom);\r\n  }\r\n  if ( checkIsInArraySameCaption(lists, captionListTo) ){\r\n    return fResultListExisted(captionListTo, captionGroup);\r\n  }\r\n\r\n  groupIn.lists = getArrayWithRename(lists, listIndex, captionListTo);\r\n  return { isDone: true };\r\n}\r\n\r\nexport const deleteList = (\r\n  watchList,\r\n  {captionGroup, captionList}\r\n) => {\r\n  const groupFrom = findGroup(watchList, captionGroup);\r\n\r\n  if (!groupFrom){\r\n    return fResultNotFound('group', captionGroup);\r\n  }\r\n\r\n  groupFrom.lists = filter(groupFrom.lists, captionList);\r\n  return { isDone: true };\r\n}\r\n"],"mappings":";;;;AAAA,IAAAA,GAAA,GAAAC,OAAA;AAWO,MAAMC,OAAO,GAAGA,CACrBC,SAAS,EAAAC,IAAA,KAEN;EAAA,IADH;IAACC,YAAY;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAE3B,MAAMG,OAAO,GAAG,IAAAC,aAAS,EAACL,SAAS,EAAEE,YAAY,CAAC;EAElD,IAAI,CAACE,OAAO,EAAC;IACX,OAAO,IAAAE,mBAAe,EAAC,OAAO,EAAEJ,YAAY,CAAC;EAC/C;EACA,MAAM;IAAEK;EAAM,CAAC,GAAGH,OAAO;EACzB,IAAI,IAAAI,6BAAyB,EAACD,KAAK,EAAEJ,WAAW,CAAC,EAAC;IAChD,OAAO,IAAAM,sBAAkB,EAACN,WAAW,EAAED,YAAY,CAAC;EACtD;EAEAE,OAAO,CAACG,KAAK,GAAG,IAAAG,mBAAe,EAACH,KAAK,EAAE;IAACI,OAAO,EAAER;EAAW,CAAC,CAAC;EAC9D,OAAO;IAAES,MAAM,EAAE;EAAK,CAAC;AACzB,CAAC;AAAAC,OAAA,CAAAd,OAAA,GAAAA,OAAA;AAEM,MAAMe,UAAU,GAAGA,CACxBd,SAAS,EAAAe,KAAA,KAEN;EAAA,IADH;IAACb,YAAY;IAAEc,eAAe;IAAEC;EAAa,CAAC,GAAAF,KAAA;EAE9C,MAAMG,OAAO,GAAG,IAAAb,aAAS,EAACL,SAAS,EAAEE,YAAY,CAAC;EAElD,IAAI,CAACgB,OAAO,EAAC;IACX,OAAO,IAAAZ,mBAAe,EAAC,OAAO,EAAEJ,YAAY,CAAC;EAC/C;EACA,MAAM;IAAEK;EAAM,CAAC,GAAGW,OAAO;EACzB,MAAMC,SAAS,GAAG,IAAAC,aAAS,EAACb,KAAK,EAAES,eAAe,CAAC;EACnD,IAAIG,SAAS,KAAK,CAAC,CAAC,EAAC;IACnB,OAAO,IAAAb,mBAAe,EAAC,MAAM,EAAEU,eAAe,CAAC;EACjD;EACA,IAAK,IAAAR,6BAAyB,EAACD,KAAK,EAAEU,aAAa,CAAC,EAAE;IACpD,OAAO,IAAAR,sBAAkB,EAACQ,aAAa,EAAEf,YAAY,CAAC;EACxD;EAEAgB,OAAO,CAACX,KAAK,GAAG,IAAAc,sBAAkB,EAACd,KAAK,EAAEY,SAAS,EAAEF,aAAa,CAAC;EACnE,OAAO;IAAEL,MAAM,EAAE;EAAK,CAAC;AACzB,CAAC;AAAAC,OAAA,CAAAC,UAAA,GAAAA,UAAA;AAEM,MAAMQ,UAAU,GAAGA,CACxBtB,SAAS,EAAAuB,KAAA,KAEN;EAAA,IADH;IAACrB,YAAY;IAAEC;EAAW,CAAC,GAAAoB,KAAA;EAE3B,MAAMC,SAAS,GAAG,IAAAnB,aAAS,EAACL,SAAS,EAAEE,YAAY,CAAC;EAEpD,IAAI,CAACsB,SAAS,EAAC;IACb,OAAO,IAAAlB,mBAAe,EAAC,OAAO,EAAEJ,YAAY,CAAC;EAC/C;EAEAsB,SAAS,CAACjB,KAAK,GAAG,IAAAkB,UAAM,EAACD,SAAS,CAACjB,KAAK,EAAEJ,WAAW,CAAC;EACtD,OAAO;IAAES,MAAM,EAAE;EAAK,CAAC;AACzB,CAAC;AAAAC,OAAA,CAAAS,UAAA,GAAAA,UAAA","ignoreList":[]}