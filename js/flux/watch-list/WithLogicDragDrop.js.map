{"version":3,"sources":["../../../src/flux/watch-list/WithLogicDragDrop.js"],"names":["WithLogicDragDrop","dragDropItem","watchList","dragId","dropId","dragArr","split","dragGroup","Fn","findGroup","dragList","findList","dragIndex","findIndex","items","dragItem","dropArr","dropGroup","dropList","dropIndex","caption","checkIsInArraySameCaption","fDragDropItemExisted","filter","insertItemInArray","isDone","dragDropList","dragGroupCaption","dragListCaption","dropGroupCaption","dropListCaption","lists","fDragDropListExisted","dragDropGroup","groups"],"mappings":"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","sourcesContent":["\r\nimport Fn from './Fn';\r\n\r\nconst WithLogicDragDrop = {\r\n\r\n  dragDropItem(watchList, {dragId, dropId}){\r\n    const dragArr = dragId.split(';')\r\n        , dragGroup = Fn.findGroup(watchList, dragArr[0])\r\n        , dragList = Fn.findList(dragGroup, dragArr[1])\r\n        , dragIndex = Fn.findIndex(dragList.items, dragArr[2])\r\n        , dragItem = dragList.items[dragIndex];\r\n\r\n    const dropArr = dropId.split(';')\r\n        , dropGroup = Fn.findGroup(watchList, dropArr[0])\r\n        , dropList = Fn.findList(dropGroup, dropArr[1])\r\n        , dropIndex = (dropArr[2])\r\n             ? Fn.findIndex(dropList.items, dropArr[2])\r\n             : 0;\r\n\r\n    if ( dragList.caption !== dropList.caption &&\r\n         Fn.checkIsInArraySameCaption(dropList.items, dragArr[3]) )\r\n    {\r\n        return Fn.fDragDropItemExisted(dropArr[1], dragArr[2]);\r\n    }\r\n\r\n    dragList.items = Fn.filter(dragList.items, dragArr[2])\r\n    dropList.items = Fn.insertItemInArray(dragItem, dropIndex, dropList.items);\r\n\r\n    return { isDone : true }\r\n  },\r\n\r\n  dragDropList(watchList, {dragId, dropId}){\r\n    const [ dragGroupCaption, dragListCaption ] = dragId.split(';')\r\n        , dragGroup = Fn.findGroup(watchList, dragGroupCaption)\r\n        , dragList = Fn.findList(dragGroup, dragListCaption);\r\n\r\n    const [ dropGroupCaption, dropListCaption ] = dropId.split(';')\r\n        , dropGroup = Fn.findGroup(watchList, dropGroupCaption)\r\n        , dropIndex = (dropListCaption)\r\n              ? Fn.findIndex(dropGroup.lists, dropListCaption)\r\n              : 0;\r\n\r\n    if ( dragGroup.caption !== dropGroup.caption &&\r\n         Fn.checkIsInArraySameCaption(dropGroup.lists, dragListCaption) )\r\n    {\r\n      return Fn.fDragDropListExisted(dropGroupCaption, dragListCaption)        \r\n    }\r\n\r\n    dragGroup.lists = Fn.filter(dragGroup.lists, dragListCaption);\r\n    dropGroup.lists = Fn.insertItemInArray(dragList, dropIndex, dropGroup.lists);\r\n\r\n    return { isDone : true };\r\n  },\r\n\r\n  dragDropGroup(watchList, {dragId, dropId}){\r\n     const [ dragGroupCaption ] = dragId.split(';')\r\n         , dragGroup = Fn.findGroup(watchList, dragGroupCaption)\r\n\r\n         , [ dropGroupCaption ] = dropId.split(';')\r\n         , dropIndex = (dropGroupCaption)\r\n               ? Fn.findIndex(watchList.groups, dropGroupCaption)\r\n               : 0;\r\n\r\n      watchList.groups = Fn.filter(watchList.groups, dragGroupCaption);\r\n      watchList.groups = Fn.insertItemInArray(dragGroup, dropIndex, watchList.groups)\r\n\r\n      return { isDone : true };\r\n  }\r\n\r\n};\r\n\r\nexport default WithLogicDragDrop\r\n"],"file":"WithLogicDragDrop.js"}