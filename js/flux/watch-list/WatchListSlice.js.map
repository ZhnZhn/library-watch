{"version":3,"sources":["../../../src/flux/watch-list/WatchListSlice.js"],"names":["STORAGE_KEY","CAPTION_WATCH_SAVE","CAPTION_WATCH_EXPORT","WATCH_FILE_NAME","WatchListSlice","watchList","isWatchEdited","initWatchList","getItem","then","value","trigger","UPDATE_WATCH_BROWSER","catch","getWatchEdited","setWatchEdited","SET_WATCH_EDITED","getWatchList","getWatchGroups","groups","getWatchListsByGroup","groupCaption","group","findGroup","lists","onAddItem","item","_onEditWatch","addItem","ADD_ITEM","onRemoveItem","option","removeItem","_onDragDrop","result","isDone","showAlertDialog","onDragDropItem","dragDropItem","onDragDropList","dragDropList","onDragDropGroup","dragDropGroup","onSaveWatch","setItem","onShowModalDialog","INFO","caption","descr","WATCH_SAVED","console","log","error","WATCH_PREV","forActionType","EDIT_WATCH_COMPLETED","EDIT_WATCH_FAILED","messages","message","onAddGroup","addGroup","ADD_GROUP","onRenameGroup","renameGroup","RENAME_GROUP","onDeleteGroup","deleteGroup","DELETE_GROUP","onCreateList","createList","CREATE_LIST","onRenameList","renameList","RENAME_LIST","onDeleteList","deleteList","DELETE_LIST","onBackupToJson","yyyymmdd","formatToYYYYMMDD","Date","now","_blob","Blob","JSON","stringify","type","_fileName","saveAs","showModalDialog","WATCH_BACKUP_ZIP","onLoadFromJson","progressEvent","parse","target","exc","ALERT","Alert","LOAD_FROM_JSON"],"mappings":"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","file":"WatchListSlice.js","sourcesContent":["\r\nimport LocalForage from 'localforage';\r\n//import JSZip from 'jszip';\r\nimport FileSaver from 'browser-filesaver';\r\nimport merge from 'lodash.merge';\r\n\r\nimport DateUtils from '../../utils/DateUtils';\r\n\r\nimport ComponentActions from '../actions/ComponentActions';\r\nimport { BrowserActionTypes } from '../actions/BrowserActions';\r\nimport { WatchActionTypes } from '../actions/WatchActions';\r\nimport WatchDefault from '../../constants/WatchDefault';\r\nimport { ModalDialog }  from '../../constants/Type';\r\nimport Msg from '../../constants/Msg';\r\n\r\nimport Logic from './Logic';\r\n\r\nconst STORAGE_KEY = 'WATCH_LIST_PACKAGE'\r\n    , CAPTION_WATCH_SAVE ='Watch List:'\r\n    , CAPTION_WATCH_EXPORT = \"BackUp Watch Items:\"\r\n    , WATCH_FILE_NAME = \"WatchItems\"\r\n\r\nconst WatchListSlice = {\r\n\r\n  watchList : WatchDefault,\r\n  isWatchEdited : false,\r\n\r\n  initWatchList(){\r\n    LocalForage.getItem(STORAGE_KEY).then((value) => {\r\n      this.watchList = (value)\r\n              ? value\r\n              : WatchDefault;\r\n      this.trigger(BrowserActionTypes.UPDATE_WATCH_BROWSER, this.watchList);\r\n    })\r\n    .catch(() => {\r\n      this.watchList = WatchDefault;\r\n      this.trigger(BrowserActionTypes.UPDATE_WATCH_BROWSER, this.watchList);\r\n    })\r\n  },\r\n  getWatchEdited(){\r\n    return this.isWatchEdited;\r\n  },\r\n  setWatchEdited(value){\r\n    this.isWatchEdited = value;\r\n    this.trigger(WatchActionTypes.SET_WATCH_EDITED, this.isWatchEdited);\r\n  },\r\n  getWatchList(){\r\n    return this.watchList;\r\n  },\r\n  getWatchGroups(){\r\n    return this.watchList.groups;\r\n  },\r\n  getWatchListsByGroup(groupCaption){\r\n    const group = Logic.findGroup(this.watchList, groupCaption);\r\n    if (!group) { return []; }\r\n    return group.lists;\r\n  },\r\n\r\n  onAddItem(item){\r\n    this._onEditWatch(\r\n      Logic.addItem(this.watchList, item), WatchActionTypes.ADD_ITEM\r\n    );\r\n  },\r\n  onRemoveItem(option){\r\n    Logic.removeItem(this.watchList, option);\r\n    this.setWatchEdited(true);\r\n    this.trigger(BrowserActionTypes.UPDATE_WATCH_BROWSER, this.watchList);\r\n  },\r\n\r\n  _onDragDrop(result){\r\n    if (result.isDone){\r\n       this.setWatchEdited(true);\r\n       this.trigger(BrowserActionTypes.UPDATE_WATCH_BROWSER, this.watchList);\r\n    } else {\r\n      this.showAlertDialog(result);\r\n    }\r\n  },\r\n\r\n  onDragDropItem(option){\r\n    this._onDragDrop(Logic.dragDropItem(this.watchList, option) );\r\n  },\r\n  onDragDropList(option){\r\n    this._onDragDrop(Logic.dragDropList(this.watchList, option) );\r\n  },\r\n  onDragDropGroup(option){\r\n    this._onDragDrop(Logic.dragDropGroup(this.watchList, option));\r\n  },\r\n\r\n  onSaveWatch(){\r\n    if (this.isWatchEdited){\r\n       LocalForage.setItem(STORAGE_KEY , this.watchList)\r\n          .then(()=>{\r\n             this.setWatchEdited(false);\r\n             this.onShowModalDialog(ModalDialog.INFO, {\r\n                caption : CAPTION_WATCH_SAVE,\r\n                descr : Msg.WATCH_SAVED\r\n             })\r\n             console.log(Msg.WATCH_SAVED);\r\n          })\r\n          .catch((error) => {\r\n             console.log(error);\r\n          })\r\n    } else {\r\n       this.onShowModalDialog(ModalDialog.INFO, {\r\n          caption : CAPTION_WATCH_SAVE,\r\n          descr : Msg.WATCH_PREV\r\n       })\r\n    }\r\n  },\r\n\r\n  _onEditWatch(result, forActionType){\r\n    if (result.isDone){\r\n      this.setWatchEdited(true);\r\n      this.trigger(BrowserActionTypes.UPDATE_WATCH_BROWSER, this.watchList);\r\n      this.trigger(WatchActionTypes.EDIT_WATCH_COMPLETED, {forActionType});\r\n    } else {\r\n      this.trigger(WatchActionTypes.EDIT_WATCH_FAILED, {\r\n          messages:[result.message],\r\n          forActionType\r\n      });\r\n    }\r\n  },\r\n  onAddGroup(option){\r\n    this._onEditWatch(\r\n      Logic.addGroup(this.watchList, option),\r\n      WatchActionTypes.ADD_GROUP\r\n    );\r\n  },\r\n  onRenameGroup(option){\r\n    this._onEditWatch(\r\n      Logic.renameGroup(this.watchList, option),\r\n      WatchActionTypes.RENAME_GROUP\r\n    );\r\n  },\r\n  onDeleteGroup(option){\r\n    this._onEditWatch(\r\n      Logic.deleteGroup(this.watchList, option),\r\n      WatchActionTypes.DELETE_GROUP\r\n    );\r\n  },\r\n\r\n  onCreateList(option){\r\n    this._onEditWatch(\r\n      Logic.createList(this.watchList, option),\r\n      WatchActionTypes.CREATE_LIST\r\n    );\r\n  },\r\n  onRenameList(option){\r\n    this._onEditWatch(\r\n      Logic.renameList(this.watchList, option),\r\n      WatchActionTypes.RENAME_LIST\r\n    );\r\n  },\r\n  onDeleteList(option){\r\n    this._onEditWatch(\r\n      Logic.deleteList(this.watchList, option),\r\n      WatchActionTypes.DELETE_LIST\r\n    );\r\n  },\r\n\r\n  onBackupToJson(){\r\n    const yyyymmdd = DateUtils.formatToYYYYMMDD(Date.now())\r\n        , _blob = new Blob([JSON.stringify(this.watchList)], {type: \"application/json\"})\r\n        , _fileName = `${WATCH_FILE_NAME}_${yyyymmdd}.json`\r\n\r\n    FileSaver.saveAs(_blob, _fileName);\r\n    ComponentActions.showModalDialog(ModalDialog.INFO, {\r\n      caption : CAPTION_WATCH_EXPORT,\r\n      descr : Msg.WATCH_BACKUP_ZIP(_fileName)\r\n    })\r\n  },\r\n\r\n  onLoadFromJson(option){\r\n    try {\r\n      const { progressEvent } = option\r\n      merge(this.watchList, JSON.parse(progressEvent.target.result));\r\n      this.setWatchEdited(true);\r\n      this.trigger(BrowserActionTypes.UPDATE_WATCH_BROWSER, this.watchList);\r\n    } catch(exc) {\r\n      ComponentActions.showModalDialog(ModalDialog.ALERT, {...Msg.Alert.LOAD_FROM_JSON })\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default WatchListSlice\r\n"]}