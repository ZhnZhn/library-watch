{"version":3,"sources":["../../../src/flux/stores/BrowserSlice.js"],"names":["setIsOpen","Logic","plusCounter","resetCounter","BrowserSlice","browserMenu","BrowserMenu","routeDialog","WL","DataWL","getBrowserMenu","browserType","setMenuItemOpen","chartType","setMenuItemClose","addMenuItemCounter","minusMenuItemCounter","getSourceConfig","browserId","sourceId","onShowBrowser","trigger","BAT","SHOW_BROWSER","onShowBrowserDynamic","option","elBrowser","Factory","createBrowserDynamic","INIT_BROWSER_DYNAMIC","SHOW_BROWSER_DYNAMIC","onLoadBrowserDynamicCompleted","menu","items","elMenu","createMenu","LOAD_BROWSER_DYNAMIC_COMPLETED","menuItems","onLoadBrowserDynamicFailed","alertItemId","caption","showAlertDialog","onToggleWatchDbBrowser","TOGGLE_WATCH_DB_BROWSER","resetMenuItemCounter","cT","bT"],"mappings":"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","file":"BrowserSlice.js","sourcesContent":["import BrowserMenu from '../../constants/BrowserMenu';\r\n\r\nimport Factory from '../logic/Factory';\r\nimport { BrowserActionTypes as BAT } from '../actions/BrowserActions';\r\n\r\nimport Logic from './browser/BrowserLogic'\r\n\r\nimport DataWL from '../../constants/DataWL';\r\n\r\nconst {\r\n  setIsOpen,\r\n  plusCounter,\r\n  resetCounter\r\n} = Logic;\r\n\r\nconst BrowserSlice = {\r\n  browserMenu: BrowserMenu,\r\n  routeDialog: {\r\n    WL: DataWL\r\n  },\r\n\r\n  getBrowserMenu(browserType){\r\n     return this.browserMenu[browserType];\r\n  },\r\n  setMenuItemOpen(chartType, browserType){\r\n    setIsOpen(chartType, this.browserMenu, browserType, true);\r\n  },\r\n  setMenuItemClose(chartType, browserType){\r\n    setIsOpen(chartType, this.browserMenu, browserType, false);\r\n  },\r\n  addMenuItemCounter(chartType, browserType){\r\n    plusCounter(chartType, browserType, this.browserMenu, 1);\r\n  },\r\n  minusMenuItemCounter(chartType, browserType){\r\n    plusCounter(chartType, browserType, this.browserMenu, -1);\r\n  },\r\n\r\n  getSourceConfig(browserId, sourceId){\r\n    return this.routeDialog[browserId][sourceId];\r\n  },\r\n\r\n  onShowBrowser(browserType){\r\n    this.trigger(BAT.SHOW_BROWSER, browserType);\r\n  },\r\n\r\n  onShowBrowserDynamic(option){\r\n    const { browserType } = option;\r\n    if (!this.browserMenu[browserType]) {\r\n       const elBrowser = Factory.createBrowserDynamic(option);\r\n       this.browserMenu[browserType] = [];\r\n       this.trigger(BAT.INIT_BROWSER_DYNAMIC, elBrowser);\r\n    } else {\r\n       this.trigger(BAT.SHOW_BROWSER_DYNAMIC, browserType);\r\n    }\r\n  },\r\n  onLoadBrowserDynamicCompleted(option){\r\n    const { menu, items, browserType } = option\r\n        , elMenu = BrowserMenu.createMenu(menu, items, browserType);\r\n    this.routeDialog[browserType] = items;\r\n    this.browserMenu[browserType] = elMenu;\r\n    this.trigger(BAT.LOAD_BROWSER_DYNAMIC_COMPLETED, {\r\n      menuItems: elMenu, browserType: browserType\r\n    })\r\n  },\r\n  onLoadBrowserDynamicFailed(option){\r\n    option.alertItemId = option.alertItemId\r\n      || option.caption || '';\r\n    this.showAlertDialog(option);\r\n  },\r\n\r\n  onToggleWatchDbBrowser(){\r\n    this.trigger(BAT.TOGGLE_WATCH_DB_BROWSER);\r\n  },\r\n\r\n  resetMenuItemCounter(cT, bT){\r\n    resetCounter(this.browserMenu, bT, cT)\r\n  }\r\n}\r\n\r\nexport default BrowserSlice\r\n"]}