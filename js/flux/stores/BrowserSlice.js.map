{"version":3,"sources":["../../../src/flux/stores/BrowserSlice.js"],"names":["fnFindObj","menu","chartType","i","maxPart","length","j","maxItem","items","id","fnSetIsOpen","browserMenu","browserType","value","obj","isOpen","fnAddCounter","counter","BrowserSlice","BrowserMenu","routeDialog","WL","DataWL","getBrowserMenu","setMenuItemOpen","setMenuItemClose","addMenuItemCounter","minusMenuItemCounter","getSourceConfig","browserId","sourceId","onShowBrowser","trigger","BrowserActionTypes","SHOW_BROWSER","onShowBrowserDynamic","option","elBrowser","Factory","createBrowserDynamic","INIT_BROWSER_DYNAMIC","SHOW_BROWSER_DYNAMIC","onLoadBrowserDynamicCompleted","elMenu","createMenu","LOAD_BROWSER_DYNAMIC_COMPLETED","menuItems","onLoadBrowserDynamicFailed","alertItemId","caption","showAlertDialog","onToggleWatchDbBrowser","TOGGLE_WATCH_DB_BROWSER"],"mappings":"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","file":"BrowserSlice.js","sourcesContent":["import BrowserMenu from '../../constants/BrowserMenu';\r\n\r\nimport Factory from '../logic/Factory';\r\nimport { BrowserActionTypes } from '../actions/BrowserActions';\r\n\r\n//import DataQE from '../../constants/DataQE';\r\n\r\nimport DataWL from '../../constants/DataWL';\r\n\r\nconst fnFindObj = function(menu, chartType){\r\n  for (var i=0, maxPart=menu.length; i<maxPart; i++){\r\n    for(var j=0, maxItem=menu[i].items.length; j<maxItem; j++){\r\n      if (menu[i].items[j].id === chartType){\r\n        return menu[i].items[j];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst fnSetIsOpen = function(chartType, browserMenu, browserType, value){\r\n  const obj = fnFindObj(browserMenu[browserType], chartType);\r\n  obj.isOpen = value;\r\n};\r\n\r\nconst fnAddCounter = function(chartType, browserType, browserMenu, value){\r\n  const obj = fnFindObj(browserMenu[browserType], chartType);\r\n  obj.counter += value;\r\n  obj.isOpen = true;\r\n};\r\n\r\nconst BrowserSlice = {\r\n  browserMenu : BrowserMenu,\r\n  routeDialog : {\r\n    //QE : DataQE,\r\n\r\n    WL : DataWL\r\n  },\r\n\r\n  getBrowserMenu(browserType){\r\n     return this.browserMenu[browserType];\r\n  },\r\n  setMenuItemOpen(chartType, browserType){\r\n    fnSetIsOpen(chartType, this.browserMenu, browserType, true);\r\n  },\r\n  setMenuItemClose(chartType, browserType){\r\n    fnSetIsOpen(chartType, this.browserMenu, browserType, false);\r\n  },\r\n  addMenuItemCounter(chartType, browserType){\r\n    fnAddCounter(chartType, browserType, this.browserMenu, 1);\r\n  },\r\n  minusMenuItemCounter(chartType, browserType){\r\n    fnAddCounter(chartType, browserType, this.browserMenu, -1);\r\n  },\r\n\r\n  getSourceConfig(browserId, sourceId){\r\n    return this.routeDialog[browserId][sourceId];\r\n  },\r\n\r\n  onShowBrowser(browserType){\r\n    this.trigger(BrowserActionTypes.SHOW_BROWSER, browserType);\r\n  },\r\n\r\n  onShowBrowserDynamic(option){\r\n    const { browserType } = option;\r\n    if (!this.browserMenu[browserType]) {\r\n       const elBrowser = Factory.createBrowserDynamic(option);       \r\n       this.browserMenu[browserType] = [];\r\n       this.trigger(BrowserActionTypes.INIT_BROWSER_DYNAMIC, elBrowser);\r\n    } else {\r\n       this.trigger(BrowserActionTypes.SHOW_BROWSER_DYNAMIC, browserType);\r\n    }\r\n  },\r\n  onLoadBrowserDynamicCompleted(option){\r\n    const { menu, items, browserType } = option\r\n        , elMenu = BrowserMenu.createMenu(menu, items, browserType);\r\n    this.routeDialog[browserType] = items;\r\n    this.browserMenu[browserType] = elMenu;\r\n    this.trigger(BrowserActionTypes.LOAD_BROWSER_DYNAMIC_COMPLETED, {\r\n      menuItems : elMenu, browserType: browserType\r\n    })\r\n  },\r\n  onLoadBrowserDynamicFailed(option){\r\n    option.alertItemId = (option.alertItemId)\r\n              ? option.alertItemId\r\n              : option.caption;\r\n    this.showAlertDialog(option);\r\n  },\r\n\r\n  onToggleWatchDbBrowser(){\r\n    this.trigger(BrowserActionTypes.TOGGLE_WATCH_DB_BROWSER);\r\n  }\r\n\r\n}\r\n\r\nexport default BrowserSlice\r\n"]}