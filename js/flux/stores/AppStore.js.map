{"version":3,"sources":["../../../src/flux/stores/AppStore.js"],"names":["CONSOLE_LOG_STYLE","_fnLogLoadError","alertCaption","alertDescr","alertItemId","console","log","AppStore","Reflux","createStore","listenables","BrowserActions","ComponentActions","ChartActions","WatchActions","LoadingProgressActions","charts","init","initWatchList","createInitConfig","chartType","configs","isShow","getConfigs","showAlertDialog","option","modalDialogType","ModalDialog","ALERT","repo","trigger","ComponentActionTypes","SHOW_MODAL_DIALOG","onShowChart","browserType","chartCont","ChartActionTypes","SHOW_CHART","INIT_AND_SHOW_CHART","Factory","createChartContainer","BrowserType","WATCH_LIST","setMenuItemOpen","BrowserActionTypes","UPDATE_BROWSER_MENU","onLoadStock","onLoadStockCompleted","json","process","env","NODE_ENV","limitRemaining","comp","createItem","unshift","LOAD_STOCK_COMPLETED","triggerLimitRemaining","addMenuItemCounter","onLoadStockFailed","onCloseChart","key","filter","compObj","index","CLOSE_CHART","minusMenuItemCounter","onCloseChartContainer","setMenuItemClose","onCloseChartContainer2","CLOSE_CHART_CONTAINER_2","BrowserSlice","ComponentSlice","WatchListSlice","WithLimitRemaining","WithLoadingProgress"],"mappings":"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","file":"AppStore.js","sourcesContent":["import Reflux from 'reflux';\r\n\r\nimport ComponentActions, {ComponentActionTypes} from '../actions/ComponentActions';\r\nimport ChartActions from '../actions/ChartActions';\r\nimport BrowserActions, { BrowserActionTypes } from '../actions/BrowserActions';\r\nimport { ChartActionTypes } from '../actions/ChartActions';\r\nimport LoadingProgressActions from '../actions/LoadingProgressActions';\r\nimport WatchActions from '../actions/WatchActions';\r\n\r\nimport { BrowserType, ModalDialog } from '../../constants/Type';\r\n\r\nimport Factory from '../logic/Factory';\r\n\r\nimport BrowserSlice from './BrowserSlice';\r\nimport ComponentSlice from './ComponentSlice';\r\nimport WatchListSlice from '../watch-list/WatchListSlice';\r\nimport WithLimitRemaining from './WithLimitRemaining';\r\nimport WithLoadingProgress from './WithLoadingProgress';\r\n\r\nconst CONSOLE_LOG_STYLE = 'color:rgb(237, 88, 19);';\r\nconst _fnLogLoadError = function({\r\n  alertCaption, alertDescr, alertItemId\r\n}){\r\n  console.log('%c'+ alertCaption + ':' + alertItemId, CONSOLE_LOG_STYLE);\r\n  console.log('%c' + alertDescr, CONSOLE_LOG_STYLE);\r\n}\r\n\r\nconst AppStore = Reflux.createStore({\r\n  listenables : [\r\n    BrowserActions, ComponentActions, ChartActions, WatchActions,\r\n    LoadingProgressActions\r\n  ],\r\n  charts : {},\r\n\r\n  init(){\r\n    this.initWatchList();\r\n  },\r\n\r\n  createInitConfig(chartType){\r\n    return {chartType: chartType, configs: [], isShow: true};\r\n  },\r\n  getConfigs(chartType){\r\n   return this.charts[chartType];\r\n  },\r\n  showAlertDialog(option={}){\r\n   option.modalDialogType = ModalDialog.ALERT;\r\n   option.alertItemId = (option.alertItemId)\r\n             ? option.alertItemId\r\n             : option.repo;\r\n   this.trigger(ComponentActionTypes.SHOW_MODAL_DIALOG, option);\r\n },\r\n\r\n\r\n  onShowChart(chartType, browserType){\r\n   const chartCont = this.charts[chartType];\r\n   if (chartCont){\r\n     chartCont.isShow = true;\r\n     this.trigger(ChartActionTypes.SHOW_CHART, chartCont);\r\n   } else {\r\n     this.charts[chartType] = this.createInitConfig(chartType);\r\n     this.trigger(ChartActionTypes.INIT_AND_SHOW_CHART,\r\n                  Factory.createChartContainer(chartType, browserType));\r\n   }\r\n\r\n   if (browserType !== BrowserType.WATCH_LIST){\r\n     this.setMenuItemOpen(chartType, browserType);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n\r\n },\r\n\r\n onLoadStock(){\r\n },\r\n onLoadStockCompleted(option, json){\r\n   /* eslint-disable no-undef */\r\n   if (process.env.NODE_ENV !== 'production'){\r\n   /* eslint-disable no-undef */\r\n     console.log(option);\r\n     console.log(json);\r\n   }\r\n\r\n   const { chartType, browserType, limitRemaining } = option\r\n       , comp = Factory.createItem(option, json, { chartType, browserType});\r\n\r\n\r\n   const chartCont = this.charts[chartType];\r\n   if (chartCont){\r\n     chartCont.configs.unshift(comp);\r\n     chartCont.isShow = true;\r\n     this.trigger(ChartActionTypes.LOAD_STOCK_COMPLETED, chartCont);\r\n   } else {\r\n     this.charts[chartType] = this.createInitConfig(chartType);\r\n     this.charts[chartType].configs.unshift(comp);\r\n     this.trigger(\r\n        ChartActionTypes.INIT_AND_SHOW_CHART,\r\n        Factory.createChartContainer(chartType, browserType)\r\n     );\r\n   }\r\n\r\n   this.triggerLimitRemaining(limitRemaining);\r\n\r\n   if (browserType !== BrowserType.WATCH_LIST){\r\n     this.addMenuItemCounter(chartType, browserType);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n  },\r\n  onLoadStockFailed(option){\r\n   const  { limitRemaining } = option;\r\n\r\n   this.triggerLimitRemaining(limitRemaining);\r\n\r\n   this.showAlertDialog(option);\r\n\r\n   _fnLogLoadError(option);\r\n },\r\n\r\n  onCloseChart(chartType, browserType, key){\r\n   const chartCont = this.charts[chartType];\r\n   chartCont.configs = chartCont.configs.filter((compObj, index) => {\r\n      return compObj.key !== key;\r\n   })\r\n   this.trigger(ChartActionTypes.CLOSE_CHART, chartCont);\r\n\r\n   if (browserType !== BrowserType.WATCH_LIST){\r\n     this.minusMenuItemCounter(chartType, browserType);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n\r\n },\r\n\r\n onCloseChartContainer(chartType, browserType){\r\n   if (browserType !== BrowserType.WATCH_LIST){\r\n     this.setMenuItemClose(chartType, browserType);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n },\r\n onCloseChartContainer2(chartType, browserType){\r\n   this.trigger(ComponentActionTypes.CLOSE_CHART_CONTAINER_2, chartType);\r\n },\r\n\r\n ...BrowserSlice,\r\n ...ComponentSlice,\r\n ...WatchListSlice,\r\n ...WithLimitRemaining,\r\n ...WithLoadingProgress\r\n});\r\n\r\nexport default AppStore\r\n"]}