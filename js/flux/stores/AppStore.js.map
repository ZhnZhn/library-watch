{"version":3,"sources":["../../../src/flux/stores/AppStore.js"],"names":["EVENT_ACTION","LOAD","CONSOLE_LOG_STYLE","_fnLogLoadError","alertCaption","alertDescr","alertItemId","console","log","AppStore","createStore","listenables","charts","init","initWatchList","createInitConfig","chartType","configs","isShow","getConfigs","showAlertDialog","option","modalDialogType","ALERT","repo","trigger","SHOW_MODAL_DIALOG","onShowChart","browserType","chartCont","SHOW_CHART","INIT_AND_SHOW_CHART","createChartContainer","WATCH_LIST","setMenuItemOpen","UPDATE_BROWSER_MENU","onLoadStock","onLoadStockCompleted","json","process","env","NODE_ENV","limitRemaining","comp","createItem","unshift","LOAD_STOCK_COMPLETED","triggerLimitRemaining","addMenuItemCounter","analyticSendEvent","eventAction","eventLabel","onLoadStockFailed","onCloseChart","key","filter","compObj","index","CLOSE_CHART","minusMenuItemCounter","onCloseChartContainer","setMenuItemClose","onCloseChartContainer2","CLOSE_CHART_CONTAINER_2"],"mappings":"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","file":"AppStore.js","sourcesContent":["import Reflux from 'reflux';\r\n\r\nimport ComponentActions, {ComponentActionTypes} from '../actions/ComponentActions';\r\nimport ChartActions from '../actions/ChartActions';\r\nimport BrowserActions, { BrowserActionTypes } from '../actions/BrowserActions';\r\nimport { ChartActionTypes } from '../actions/ChartActions';\r\nimport LoadingProgressActions from '../actions/LoadingProgressActions';\r\nimport WatchActions from '../actions/WatchActions';\r\n\r\nimport { BrowserType, ModalDialog } from '../../constants/Type';\r\n\r\nimport Factory from '../logic/Factory';\r\n\r\nimport BrowserSlice from './BrowserSlice';\r\nimport ComponentSlice from './ComponentSlice';\r\nimport WatchListSlice from '../watch-list/WatchListSlice';\r\nimport WithLimitRemaining from './WithLimitRemaining';\r\nimport WithLoadingProgress from './WithLoadingProgress';\r\nimport AnalyticSlice from './AnalyticSlice';\r\n\r\nconst EVENT_ACTION = {\r\n  LOAD : 'Load'\r\n}\r\n\r\n\r\nconst CONSOLE_LOG_STYLE = 'color:rgb(237, 88, 19);';\r\nconst _fnLogLoadError = function({\r\n  alertCaption, alertDescr, alertItemId\r\n}){\r\n  console.log('%c'+ alertCaption + ':' + alertItemId, CONSOLE_LOG_STYLE);\r\n  console.log('%c' + alertDescr, CONSOLE_LOG_STYLE);\r\n}\r\n\r\nconst AppStore = Reflux.createStore({\r\n  listenables : [\r\n    BrowserActions, ComponentActions, ChartActions, WatchActions,\r\n    LoadingProgressActions\r\n  ],\r\n  charts : {},\r\n\r\n  init(){\r\n    this.initWatchList();\r\n  },\r\n\r\n  createInitConfig(chartType){\r\n    return {chartType: chartType, configs: [], isShow: true};\r\n  },\r\n  getConfigs(chartType){\r\n   return this.charts[chartType];\r\n  },\r\n  showAlertDialog(option={}){\r\n   option.modalDialogType = ModalDialog.ALERT;\r\n   option.alertItemId = (option.alertItemId)\r\n             ? option.alertItemId\r\n             : option.repo;\r\n   this.trigger(ComponentActionTypes.SHOW_MODAL_DIALOG, option);\r\n },\r\n\r\n\r\n  onShowChart(chartType, browserType){\r\n   const chartCont = this.charts[chartType];\r\n   if (chartCont){\r\n     chartCont.isShow = true;\r\n     this.trigger(ChartActionTypes.SHOW_CHART, chartCont);\r\n   } else {\r\n     this.charts[chartType] = this.createInitConfig(chartType);\r\n     this.trigger(ChartActionTypes.INIT_AND_SHOW_CHART,\r\n                  Factory.createChartContainer(chartType, browserType));\r\n   }\r\n\r\n   if (browserType !== BrowserType.WATCH_LIST){\r\n     this.setMenuItemOpen(chartType, browserType);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n\r\n },\r\n\r\n onLoadStock(){\r\n },\r\n onLoadStockCompleted(option, json){\r\n   /* eslint-disable no-undef */\r\n   if (process.env.NODE_ENV !== 'production'){\r\n   /* eslint-disable no-undef */\r\n     console.log(option);\r\n     console.log(json);\r\n   }\r\n\r\n   const { chartType, browserType, limitRemaining } = option\r\n       , comp = Factory.createItem(option, json, { chartType, browserType});\r\n\r\n\r\n   const chartCont = this.charts[chartType];\r\n   if (chartCont){\r\n     chartCont.configs.unshift(comp);\r\n     chartCont.isShow = true;\r\n     this.trigger(ChartActionTypes.LOAD_STOCK_COMPLETED, chartCont);\r\n   } else {\r\n     this.charts[chartType] = this.createInitConfig(chartType);\r\n     this.charts[chartType].configs.unshift(comp);\r\n     this.trigger(\r\n        ChartActionTypes.INIT_AND_SHOW_CHART,\r\n        Factory.createChartContainer(chartType, browserType)\r\n     );\r\n   }\r\n\r\n   this.triggerLimitRemaining(limitRemaining);\r\n\r\n   if (browserType !== BrowserType.WATCH_LIST){\r\n     this.addMenuItemCounter(chartType, browserType);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n   this.analyticSendEvent({\r\n       eventAction : EVENT_ACTION.LOAD,\r\n       eventLabel : chartType\r\n     });\r\n  },\r\n  onLoadStockFailed(option){\r\n   const  { limitRemaining } = option;\r\n\r\n   this.triggerLimitRemaining(limitRemaining);\r\n\r\n   this.showAlertDialog(option);\r\n\r\n   _fnLogLoadError(option);\r\n },\r\n\r\n  onCloseChart(chartType, browserType, key){\r\n   const chartCont = this.charts[chartType];\r\n   chartCont.configs = chartCont.configs.filter((compObj, index) => {\r\n      return compObj.key !== key;\r\n   })\r\n   this.trigger(ChartActionTypes.CLOSE_CHART, chartCont);\r\n\r\n   if (browserType !== BrowserType.WATCH_LIST){\r\n     this.minusMenuItemCounter(chartType, browserType);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n\r\n },\r\n\r\n onCloseChartContainer(chartType, browserType){\r\n   if (browserType !== BrowserType.WATCH_LIST){\r\n     this.setMenuItemClose(chartType, browserType);\r\n     this.trigger(BrowserActionTypes.UPDATE_BROWSER_MENU, browserType);\r\n   }\r\n },\r\n onCloseChartContainer2(chartType, browserType){\r\n   this.trigger(ComponentActionTypes.CLOSE_CHART_CONTAINER_2, chartType);\r\n },\r\n\r\n ...BrowserSlice,\r\n ...ComponentSlice,\r\n ...WatchListSlice,\r\n ...WithLimitRemaining,\r\n ...WithLoadingProgress,\r\n ...AnalyticSlice\r\n});\r\n\r\nexport default AppStore\r\n"]}