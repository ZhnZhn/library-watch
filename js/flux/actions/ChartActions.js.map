{"version":3,"sources":["../../../src/flux/actions/ChartActions.js"],"names":["ChartActionTypes","INIT_AND_SHOW_CHART","LOAD_STOCK","LOAD_STOCK_COMPLETED","LOAD_STOCK_FAILED","SHOW_CHART","CLOSE_CHART","ChartActions","createActions","children","isLoading","idLoading","undefined","isShouldEmit","listen","chartType","browserType","option","key","loadId","completed","failed"],"mappings":";;;;;;;;;AAAA;;;;AAEA;;;;;;;;AAEO,IAAMA,8CAAmB;AAC9BC,uBAAsB,kBADQ;;AAG9BC,cAAa,WAHiB;AAI9BC,wBAAuB,oBAJO;AAK9BC,qBAAoB,iBALU;;AAO9BC,cAAa,WAPiB;AAQ9BC,eAAc;;AARgB,CAAzB;;AAYP,IAAMC,eAAgB,iBAAOC,aAAP,qEACfR,iBAAiBE,UADF,EACgB;AAC7BO,YAAW,CAAC,WAAD,EAAc,QAAd,CADkB;AAE7BC,aAAY,KAFiB;AAG7BC,aAAYC,SAHiB;AAI7BC,gBAAe;AACf;AAL6B,CADhB,0CAQfb,iBAAiBK,UARF,EAQgB,EARhB,0CASfL,iBAAiBM,WATF,EASiB,EATjB,0BAAtB;;AAYAC,aAAaP,iBAAiBE,UAA9B,EAA0CY,MAA1C,CAAiD,UAASC,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,EAAwC;;AAEvF,OAAKP,SAAL,GAAiB,IAAjB;AACA,OAAKC,SAAL,GAAiBM,OAAOC,GAAxB;;AAHuF,uBAK/DD,MAL+D,CAK/EE,MAL+E;AAAA,MAK/EA,MAL+E,kCAKxE,IALwE;;AAMvFF,SAAOF,SAAP,GAAmBA,SAAnB;AACAE,SAAOD,WAAP,GAAqBA,WAArB;;AAEA,uBAAWG,MAAX,EAAmBF,MAAnB,EAA2B,KAAKG,SAAhC,EAA2C,KAAKC,MAAhD;AACD,CAVD;;kBAaed,Y","file":"ChartActions.js","sourcesContent":["import Reflux from 'reflux';\r\n\r\nimport RouterLoad from '../logic/RouterLoad';\r\n\r\nexport const ChartActionTypes = {\r\n  INIT_AND_SHOW_CHART : 'initAndShowChart',\r\n\r\n  LOAD_STOCK : 'loadStock',\r\n  LOAD_STOCK_COMPLETED : 'loadStockCompleted',\r\n  LOAD_STOCK_FAILED : 'loadStockFailed',\r\n\r\n  SHOW_CHART : 'showChart',\r\n  CLOSE_CHART : 'closeChart'\r\n\r\n}\r\n\r\nconst ChartActions =  Reflux.createActions({\r\n      [ChartActionTypes.LOAD_STOCK] : {\r\n         children : ['completed', 'failed'],\r\n         isLoading : false,\r\n         idLoading : undefined,\r\n         isShouldEmit : true\r\n         //cancelLoad : _fnCancelLoad\r\n       },\r\n      [ChartActionTypes.SHOW_CHART] : {},\r\n      [ChartActionTypes.CLOSE_CHART] : {}\r\n});\r\n\r\nChartActions[ChartActionTypes.LOAD_STOCK].listen(function(chartType, browserType, option){\r\n\r\n  this.isLoading = true;\r\n  this.idLoading = option.key;\r\n\r\n  const { loadId='LW' } = option;\r\n  option.chartType = chartType;\r\n  option.browserType = browserType;\r\n\r\n  RouterLoad[loadId](option, this.completed, this.failed);\r\n})\r\n\r\n\r\nexport default ChartActions\r\n"]}