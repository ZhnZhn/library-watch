{"version":3,"sources":["../../../src/flux/actions/ChartActions.js"],"names":["ALREADY_LOADED","caption","descr","ChartActionTypes","INIT_AND_SHOW_CHART","LOAD_STOCK","LOAD_STOCK_COMPLETED","LOAD_STOCK_FAILED","SHOW_CHART","CLOSE_CHART","REMOVE_ALL","MOVE_TO_TOP","A","ChartActions","Reflux","createActions","children","isLoading","idLoading","undefined","isShouldEmit","listen","chartType","browserType","option","loadId","RouterLoad","crKey","loadItem","key","Store","isKeyTop","completed","failed","ComponentActions","showAlert","showChart"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAEA,IAAMA,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAE,gBADY;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAvB;AAKO,IAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,mBAAmB,EAAE,kBADS;AAG9BC,EAAAA,UAAU,EAAE,WAHkB;AAI9BC,EAAAA,oBAAoB,EAAE,oBAJQ;AAK9BC,EAAAA,iBAAiB,EAAE,iBALW;AAO9BC,EAAAA,UAAU,EAAE,WAPkB;AAQ9BC,EAAAA,WAAW,EAAE,YARiB;AAU9BC,EAAAA,UAAU,EAAE,WAVkB;AAW9BC,EAAAA,WAAW,EAAE;AAXiB,CAAzB;;AAcP,IAAMC,CAAC,GAAGT,gBAAV;;AAEA,IAAMU,YAAY,GAAIC,mBAAOC,aAAP,oDACjBH,CAAC,CAACP,UADe,IACF;AACbW,EAAAA,QAAQ,EAAE,CAAC,WAAD,EAAc,QAAd,CADG;AAEbC,EAAAA,SAAS,EAAE,KAFE;AAGbC,EAAAA,SAAS,EAAEC,SAHE;AAIbC,EAAAA,YAAY,EAAE,IAJD,CAKb;;AALa,CADE,wBAQjBR,CAAC,CAACJ,UARe,IAQF,EARE,wBASjBI,CAAC,CAACH,WATe,IASD,EATC,wBAUjBG,CAAC,CAACF,UAVe,IAUF,EAVE,wBAWjBE,CAAC,CAACD,WAXe,IAWD,EAXC,yBAAtB;;AAcAE,YAAY,CAACV,gBAAgB,CAACE,UAAlB,CAAZ,CAA0CgB,MAA1C,CAAiD,UAASC,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,EAAwC;AAAA,uBAC/DA,MAD+D,CAC/EC,MAD+E;AAAA,MAC/EA,MAD+E,+BACxE,IADwE;AAEvFD,EAAAA,MAAM,CAACF,SAAP,GAAmBA,SAAnB;AACAE,EAAAA,MAAM,CAACD,WAAP,GAAqBA,WAArB;AAHuF,2BAK3DG,uBAAWD,MAAX,CAL2D;AAAA,MAK/EE,KAL+E,sBAK/EA,KAL+E;AAAA,MAKxEC,QALwE,sBAKxEA,QALwE;AAMvF,MAAMC,GAAG,GAAGF,KAAK,CAACH,MAAD,CAAjB;;AACA,MAAK,CAAEM,qBAAMC,QAAN,CAAeF,GAAf,EAAoBL,MAApB,CAAP,EAAsC;AACpCA,IAAAA,MAAM,CAACK,GAAP,GAAaA,GAAb;AACA,SAAKZ,SAAL,GAAiB,IAAjB;AACA,SAAKC,SAAL,GAAiBW,GAAjB;AACAD,IAAAA,QAAQ,CAACJ,MAAD,EAAS,KAAKQ,SAAd,EAAyB,KAAKC,MAA9B,CAAR;AACD,GALD,MAKO;AACLC,iCAAiBC,SAAjB,CAA2BnC,cAA3B;;AACAa,IAAAA,YAAY,CAACuB,SAAb,CAAuBd,SAAvB,EAAkCC,WAAlC;AACD;AACF,CAhBD;eAmBeV,Y","sourcesContent":["import Reflux from 'reflux';\r\n\r\nimport RouterLoad from '../logic/RouterLoad';\r\nimport Store from '../stores/AppStore'\r\nimport ComponentActions from './ComponentActions'\r\n\r\nconst ALREADY_LOADED = {\r\n  caption: 'Already loaded',\r\n  descr: 'This item already has been loaded\\nto container, moved to top.'\r\n};\r\n\r\nexport const ChartActionTypes = {\r\n  INIT_AND_SHOW_CHART: 'initAndShowChart',\r\n\r\n  LOAD_STOCK: 'loadStock',\r\n  LOAD_STOCK_COMPLETED: 'loadStockCompleted',\r\n  LOAD_STOCK_FAILED: 'loadStockFailed',\r\n\r\n  SHOW_CHART: 'showChart',\r\n  CLOSE_CHART: 'closeChart',\r\n\r\n  REMOVE_ALL: 'removeAll',\r\n  MOVE_TO_TOP: 'moveToTop'\r\n};\r\n\r\nconst A = ChartActionTypes;\r\n\r\nconst ChartActions =  Reflux.createActions({\r\n    [A.LOAD_STOCK]: {\r\n       children: ['completed', 'failed'],\r\n       isLoading: false,\r\n       idLoading: undefined,\r\n       isShouldEmit: true\r\n       //cancelLoad : _fnCancelLoad\r\n     },\r\n    [A.SHOW_CHART]: {},\r\n    [A.CLOSE_CHART]: {},\r\n    [A.REMOVE_ALL]: {},\r\n    [A.MOVE_TO_TOP]: {}\r\n});\r\n\r\nChartActions[ChartActionTypes.LOAD_STOCK].listen(function(chartType, browserType, option){\r\n  const { loadId='LW' } = option;\r\n  option.chartType = chartType;\r\n  option.browserType = browserType;\r\n\r\n  const { crKey, loadItem } = RouterLoad[loadId];\r\n  const key = crKey(option);\r\n  if ( !(Store.isKeyTop(key, option)) ) {\r\n    option.key = key\r\n    this.isLoading = true;\r\n    this.idLoading = key;\r\n    loadItem(option, this.completed, this.failed);\r\n  } else {\r\n    ComponentActions.showAlert(ALREADY_LOADED)\r\n    ChartActions.showChart(chartType, browserType)\r\n  }\r\n})\r\n\r\n\r\nexport default ChartActions\r\n"],"file":"ChartActions.js"}