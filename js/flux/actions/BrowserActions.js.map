{"version":3,"sources":["../../../src/flux/actions/BrowserActions.js"],"names":["BrowserActionTypes","SHOW_BROWSER","UPDATE_BROWSER_MENU","SHOW_BROWSER_DYNAMIC","INIT_BROWSER_DYNAMIC","LOAD_BROWSER_DYNAMIC","LOAD_BROWSER_DYNAMIC_COMPLETED","UPDATE_WATCH_BROWSER","TOGGLE_WATCH_DB_BROWSER","BrowserActions","Reflux","createActions","children","_fnFetchSourceMenu","json","option","onCompleted","menu","items","browserType","listen","uri","sourceMenuUrl","onCheckResponse","onFetch","completed","onCatch","fnCatch","onFailed","failed"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;AAEO,IAAMA,kBAAkB,GAAG;AAChCC,EAAAA,YAAY,EAAG,aADiB;AAEhCC,EAAAA,mBAAmB,EAAG,mBAFU;AAIhCC,EAAAA,oBAAoB,EAAG,oBAJS;AAKhCC,EAAAA,oBAAoB,EAAG,oBALS;AAMhCC,EAAAA,oBAAoB,EAAG,oBANS;AAOhCC,EAAAA,8BAA8B,EAAG,6BAPD;AAShCC,EAAAA,oBAAoB,EAAG,oBATS;AAUhCC,EAAAA,uBAAuB,EAAG;AAVM,CAA3B;;;AAaP,IAAMC,cAAc,GAAGC,uBAAOC,aAAP,oDACpBX,kBAAkB,CAACC,YADC,IACe,EADf,wBAEpBD,kBAAkB,CAACE,mBAFC,IAEsB,EAFtB,wBAIpBF,kBAAkB,CAACG,oBAJC,IAIuB,EAJvB,wBAKpBH,kBAAkB,CAACI,oBALC,IAKuB,EALvB,wBAMpBJ,kBAAkB,CAACK,oBANC,IAMuB;AAAEO,EAAAA,QAAQ,EAAG,CAAC,WAAD,EAAc,QAAd;AAAb,CANvB,wBAQpBZ,kBAAkB,CAACO,oBARC,IAQuB,EARvB,wBASpBP,kBAAkB,CAACQ,uBATC,IAS0B,EAT1B,yBAAvB;;AAYA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,OAAuC;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,WAAc,QAAdA,WAAc;AAAA,MACxDC,IADwD,GACxCH,IADwC,CACxDG,IADwD;AAAA,MAClDC,KADkD,GACxCJ,IADwC,CAClDI,KADkD;AAAA,MAExDC,WAFwD,GAExCJ,MAFwC,CAExDI,WAFwD;AAGhEH,EAAAA,WAAW,CAAC;AAAEC,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA,KAAR;AAAeC,IAAAA,WAAW,EAAXA;AAAf,GAAD,CAAX;AACD,CAJD;;AAMAV,cAAc,CAACT,kBAAkB,CAACK,oBAApB,CAAd,CAAwDe,MAAxD,CAA+D,UAASL,MAAT,EAAgB;AAC5E,2BAAQ;AACNM,IAAAA,GAAG,EAAGN,MAAM,CAACO,aADP;AAENP,IAAAA,MAAM,EAAGA,MAFH;AAGNQ,IAAAA,eAAe,EAAG,yBAACT,IAAD;AAAA,aAAU,IAAV;AAAA,KAHZ;AAINU,IAAAA,OAAO,EAAGX,kBAJJ;AAKNG,IAAAA,WAAW,EAAG,KAAKS,SALb;AAMNC,IAAAA,OAAO,EAAGC,mBANJ;AAONC,IAAAA,QAAQ,EAAG,KAAKC;AAPV,GAAR;AASF,CAVD;eAaepB,c","sourcesContent":["import Reflux from 'reflux-core';\r\n\r\nimport fnFetch from '../../network/fnFetch';\r\nimport fnCatch from '../../network/fnCatch';\r\n\r\nexport const BrowserActionTypes = {\r\n  SHOW_BROWSER : 'showBrowser',\r\n  UPDATE_BROWSER_MENU : 'updateBrowserMenu',\r\n\r\n  SHOW_BROWSER_DYNAMIC : 'showBrowserDynamic',\r\n  INIT_BROWSER_DYNAMIC : 'initBrowserDynamic',\r\n  LOAD_BROWSER_DYNAMIC : 'loadBrowserDynamic',\r\n  LOAD_BROWSER_DYNAMIC_COMPLETED : 'loadBrowserDynamicCompleted',\r\n\r\n  UPDATE_WATCH_BROWSER : 'updateWatchBrowser',\r\n  TOGGLE_WATCH_DB_BROWSER : 'toggleWatchDbBrowser'\r\n}\r\n\r\nconst BrowserActions = Reflux.createActions({\r\n  [BrowserActionTypes.SHOW_BROWSER] : {},\r\n  [BrowserActionTypes.UPDATE_BROWSER_MENU] : {},\r\n\r\n  [BrowserActionTypes.SHOW_BROWSER_DYNAMIC] : {},\r\n  [BrowserActionTypes.INIT_BROWSER_DYNAMIC] : {},\r\n  [BrowserActionTypes.LOAD_BROWSER_DYNAMIC] : { children : ['completed', 'failed']},\r\n\r\n  [BrowserActionTypes.UPDATE_WATCH_BROWSER] : {},\r\n  [BrowserActionTypes.TOGGLE_WATCH_DB_BROWSER] : {}\r\n});\r\n\r\nconst _fnFetchSourceMenu = function({ json, option, onCompleted }){\r\n  const { menu, items } = json\r\n      , { browserType } = option;\r\n  onCompleted({ menu, items, browserType });\r\n}\r\n\r\nBrowserActions[BrowserActionTypes.LOAD_BROWSER_DYNAMIC].listen(function(option){\r\n   fnFetch({\r\n     uri : option.sourceMenuUrl,\r\n     option : option,\r\n     onCheckResponse : (json) => true,\r\n     onFetch : _fnFetchSourceMenu,\r\n     onCompleted : this.completed,\r\n     onCatch : fnCatch,\r\n     onFailed : this.failed\r\n   })\r\n})\r\n\r\n\r\nexport default BrowserActions\r\n"],"file":"BrowserActions.js"}