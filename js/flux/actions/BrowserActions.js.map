{"version":3,"sources":["../../../src/flux/actions/BrowserActions.js"],"names":["BrowserActionTypes","SHOW_BROWSER","UPDATE_BROWSER_MENU","SHOW_BROWSER_DYNAMIC","INIT_BROWSER_DYNAMIC","LOAD_BROWSER_DYNAMIC","LOAD_BROWSER_DYNAMIC_COMPLETED","UPDATE_WATCH_BROWSER","TOGGLE_WATCH_DB_BROWSER","BrowserActions","createActions","children","_fnFetchSourceMenu","json","option","onCompleted","menu","items","browserType","listen","uri","sourceMenuUrl","onCheckResponse","onFetch","completed","onCatch","onFailed","failed"],"mappings":";;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;;;AAEO,IAAMA,kDAAqB;AAChCC,gBAAe,aADiB;AAEhCC,uBAAsB,mBAFU;;AAIhCC,wBAAuB,oBAJS;AAKhCC,wBAAuB,oBALS;AAMhCC,wBAAuB,oBANS;AAOhCC,kCAAiC,6BAPD;;AAShCC,wBAAuB,oBATS;AAUhCC,2BAA0B;AAVM,CAA3B;;AAaP,IAAMC,iBAAiB,iBAAOC,aAAP,qEACpBV,mBAAmBC,YADC,EACe,EADf,0CAEpBD,mBAAmBE,mBAFC,EAEsB,EAFtB,0CAIpBF,mBAAmBG,oBAJC,EAIuB,EAJvB,0CAKpBH,mBAAmBI,oBALC,EAKuB,EALvB,0CAMpBJ,mBAAmBK,oBANC,EAMuB,EAAEM,UAAW,CAAC,WAAD,EAAc,QAAd,CAAb,EANvB,0CAQpBX,mBAAmBO,oBARC,EAQuB,EARvB,0CASpBP,mBAAmBQ,uBATC,EAS0B,EAT1B,0BAAvB;;AAYA,IAAMI,qBAAqB,SAArBA,kBAAqB,OAAuC;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,WAAc,QAAdA,WAAc;AAAA,MACxDC,IADwD,GACxCH,IADwC,CACxDG,IADwD;AAAA,MAClDC,KADkD,GACxCJ,IADwC,CAClDI,KADkD;AAAA,MAExDC,WAFwD,GAExCJ,MAFwC,CAExDI,WAFwD;;AAGhEH,cAAY,EAAEC,UAAF,EAAQC,YAAR,EAAeC,wBAAf,EAAZ;AACD,CAJD;;AAMAT,eAAeT,mBAAmBK,oBAAlC,EAAwDc,MAAxD,CAA+D,UAASL,MAAT,EAAgB;AAC5E,yBAAQ;AACNM,SAAMN,OAAOO,aADP;AAENP,YAASA,MAFH;AAGNQ,qBAAkB,yBAACT,IAAD;AAAA,aAAU,IAAV;AAAA,KAHZ;AAINU,aAAUX,kBAJJ;AAKNG,iBAAc,KAAKS,SALb;AAMNC,8BANM;AAONC,cAAW,KAAKC;AAPV,GAAR;AASF,CAVD;;kBAaelB,c","file":"BrowserActions.js","sourcesContent":["import Reflux from 'reflux';\r\n\r\nimport fnFetch from '../../network/fnFetch';\r\nimport fnCatch from '../../network/fnCatch';\r\n\r\nexport const BrowserActionTypes = {\r\n  SHOW_BROWSER : 'showBrowser',\r\n  UPDATE_BROWSER_MENU : 'updateBrowserMenu',\r\n\r\n  SHOW_BROWSER_DYNAMIC : 'showBrowserDynamic',\r\n  INIT_BROWSER_DYNAMIC : 'initBrowserDynamic',\r\n  LOAD_BROWSER_DYNAMIC : 'loadBrowserDynamic',\r\n  LOAD_BROWSER_DYNAMIC_COMPLETED : 'loadBrowserDynamicCompleted',\r\n\r\n  UPDATE_WATCH_BROWSER : 'updateWatchBrowser',\r\n  TOGGLE_WATCH_DB_BROWSER : 'toggleWatchDbBrowser'\r\n}\r\n\r\nconst BrowserActions = Reflux.createActions({\r\n  [BrowserActionTypes.SHOW_BROWSER] : {},\r\n  [BrowserActionTypes.UPDATE_BROWSER_MENU] : {},\r\n\r\n  [BrowserActionTypes.SHOW_BROWSER_DYNAMIC] : {},\r\n  [BrowserActionTypes.INIT_BROWSER_DYNAMIC] : {},\r\n  [BrowserActionTypes.LOAD_BROWSER_DYNAMIC] : { children : ['completed', 'failed']},\r\n\r\n  [BrowserActionTypes.UPDATE_WATCH_BROWSER] : {},\r\n  [BrowserActionTypes.TOGGLE_WATCH_DB_BROWSER] : {}\r\n});\r\n\r\nconst _fnFetchSourceMenu = function({ json, option, onCompleted }){\r\n  const { menu, items } = json\r\n      , { browserType } = option;\r\n  onCompleted({ menu, items, browserType });\r\n}\r\n\r\nBrowserActions[BrowserActionTypes.LOAD_BROWSER_DYNAMIC].listen(function(option){\r\n   fnFetch({\r\n     uri : option.sourceMenuUrl,\r\n     option : option,\r\n     onCheckResponse : (json) => true,\r\n     onFetch : _fnFetchSourceMenu,\r\n     onCompleted : this.completed,\r\n     onCatch : fnCatch,\r\n     onFailed : this.failed\r\n   })\r\n})\r\n\r\n\r\nexport default BrowserActions\r\n"]}